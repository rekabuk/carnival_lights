

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Oct 26 14:25:27 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F630 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   100                           PORTC equ 07h ;# 
   101  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   116                           CMCON equ 019h ;# 
   117  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   118                           OPTION_REG equ 081h ;# 
   119  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   120                           TRISA equ 085h ;# 
   121  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   122                           TRISC equ 087h ;# 
   123  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   124                           PIE1 equ 08Ch ;# 
   125  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   126                           PCON equ 08Eh ;# 
   127  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   128                           OSCCAL equ 090h ;# 
   129  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   130                           WPUA equ 095h ;# 
   131  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   132                           WPU equ 095h ;# 
   133  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   134                           IOCA equ 096h ;# 
   135  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   136                           IOC equ 096h ;# 
   137  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   138                           VRCON equ 099h ;# 
   139  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   140                           EEDAT equ 09Ah ;# 
   141  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   142                           EEDATA equ 09Ah ;# 
   143  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   144                           EEADR equ 09Bh ;# 
   145  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   146                           EECON1 equ 09Ch ;# 
   147  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   148                           EECON2 equ 09Dh ;# 
   149  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   150                           INDF equ 00h ;# 
   151  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   152                           TMR0 equ 01h ;# 
   153  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   154                           PCL equ 02h ;# 
   155  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   156                           STATUS equ 03h ;# 
   157  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   158                           FSR equ 04h ;# 
   159  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   160                           PORTA equ 05h ;# 
   161  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   162                           PORTC equ 07h ;# 
   163  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   164                           PCLATH equ 0Ah ;# 
   165  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   166                           INTCON equ 0Bh ;# 
   167  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   168                           PIR1 equ 0Ch ;# 
   169  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   170                           TMR1 equ 0Eh ;# 
   171  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   172                           TMR1L equ 0Eh ;# 
   173  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   174                           TMR1H equ 0Fh ;# 
   175  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   176                           T1CON equ 010h ;# 
   177  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   178                           CMCON equ 019h ;# 
   179  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   180                           OPTION_REG equ 081h ;# 
   181  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   182                           TRISA equ 085h ;# 
   183  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   184                           TRISC equ 087h ;# 
   185  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   186                           PIE1 equ 08Ch ;# 
   187  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   188                           PCON equ 08Eh ;# 
   189  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   190                           OSCCAL equ 090h ;# 
   191  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   192                           WPUA equ 095h ;# 
   193  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   194                           WPU equ 095h ;# 
   195  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   196                           IOCA equ 096h ;# 
   197  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   198                           IOC equ 096h ;# 
   199  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   200                           VRCON equ 099h ;# 
   201  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   202                           EEDAT equ 09Ah ;# 
   203  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   204                           EEDATA equ 09Ah ;# 
   205  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   206                           EEADR equ 09Bh ;# 
   207  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   208                           EECON1 equ 09Ch ;# 
   209  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   210                           EECON2 equ 09Dh ;# 
   211  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   212                           INDF equ 00h ;# 
   213  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   214                           TMR0 equ 01h ;# 
   215  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   216                           PCL equ 02h ;# 
   217  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   218                           STATUS equ 03h ;# 
   219  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   220                           FSR equ 04h ;# 
   221  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   222                           PORTA equ 05h ;# 
   223  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   224                           PORTC equ 07h ;# 
   225  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   226                           PCLATH equ 0Ah ;# 
   227  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   228                           INTCON equ 0Bh ;# 
   229  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   230                           PIR1 equ 0Ch ;# 
   231  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   232                           TMR1 equ 0Eh ;# 
   233  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   234                           TMR1L equ 0Eh ;# 
   235  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   236                           TMR1H equ 0Fh ;# 
   237  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   238                           T1CON equ 010h ;# 
   239  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   240                           CMCON equ 019h ;# 
   241  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   242                           OPTION_REG equ 081h ;# 
   243  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   244                           TRISA equ 085h ;# 
   245  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   246                           TRISC equ 087h ;# 
   247  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   248                           PIE1 equ 08Ch ;# 
   249  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   250                           PCON equ 08Eh ;# 
   251  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   252                           OSCCAL equ 090h ;# 
   253  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   254                           WPUA equ 095h ;# 
   255  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   256                           WPU equ 095h ;# 
   257  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   258                           IOCA equ 096h ;# 
   259  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   260                           IOC equ 096h ;# 
   261  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   262                           VRCON equ 099h ;# 
   263  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   264                           EEDAT equ 09Ah ;# 
   265  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   266                           EEDATA equ 09Ah ;# 
   267  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   268                           EEADR equ 09Bh ;# 
   269  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   270                           EECON1 equ 09Ch ;# 
   271  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   272                           EECON2 equ 09Dh ;# 
   273  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   274                           INDF equ 00h ;# 
   275  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   276                           TMR0 equ 01h ;# 
   277  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   278                           PCL equ 02h ;# 
   279  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   280                           STATUS equ 03h ;# 
   281  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   282                           FSR equ 04h ;# 
   283  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   284                           PORTA equ 05h ;# 
   285  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   286                           PORTC equ 07h ;# 
   287  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   288                           PCLATH equ 0Ah ;# 
   289  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   290                           INTCON equ 0Bh ;# 
   291  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   292                           PIR1 equ 0Ch ;# 
   293  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   294                           TMR1 equ 0Eh ;# 
   295  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   296                           TMR1L equ 0Eh ;# 
   297  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   298                           TMR1H equ 0Fh ;# 
   299  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   300                           T1CON equ 010h ;# 
   301  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   302                           CMCON equ 019h ;# 
   303  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   304                           OPTION_REG equ 081h ;# 
   305  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   306                           TRISA equ 085h ;# 
   307  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   308                           TRISC equ 087h ;# 
   309  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   310                           PIE1 equ 08Ch ;# 
   311  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   312                           PCON equ 08Eh ;# 
   313  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   314                           OSCCAL equ 090h ;# 
   315  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   316                           WPUA equ 095h ;# 
   317  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   318                           WPU equ 095h ;# 
   319  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   320                           IOCA equ 096h ;# 
   321  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   322                           IOC equ 096h ;# 
   323  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   324                           VRCON equ 099h ;# 
   325  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   326                           EEDAT equ 09Ah ;# 
   327  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   328                           EEDATA equ 09Ah ;# 
   329  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   330                           EEADR equ 09Bh ;# 
   331  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   332                           EECON1 equ 09Ch ;# 
   333  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   334                           EECON2 equ 09Dh ;# 
   335  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   336                           INDF equ 00h ;# 
   337  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   338                           TMR0 equ 01h ;# 
   339  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   340                           PCL equ 02h ;# 
   341  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   342                           STATUS equ 03h ;# 
   343  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   344                           FSR equ 04h ;# 
   345  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   346                           PORTA equ 05h ;# 
   347  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   348                           PORTC equ 07h ;# 
   349  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   350                           PCLATH equ 0Ah ;# 
   351  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   352                           INTCON equ 0Bh ;# 
   353  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   354                           PIR1 equ 0Ch ;# 
   355  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   364                           CMCON equ 019h ;# 
   365  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   366                           OPTION_REG equ 081h ;# 
   367  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   368                           TRISA equ 085h ;# 
   369  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   370                           TRISC equ 087h ;# 
   371  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   372                           PIE1 equ 08Ch ;# 
   373  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   374                           PCON equ 08Eh ;# 
   375  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   376                           OSCCAL equ 090h ;# 
   377  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   378                           WPUA equ 095h ;# 
   379  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   380                           WPU equ 095h ;# 
   381  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   382                           IOCA equ 096h ;# 
   383  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   384                           IOC equ 096h ;# 
   385  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   386                           VRCON equ 099h ;# 
   387  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   388                           EEDAT equ 09Ah ;# 
   389  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   390                           EEDATA equ 09Ah ;# 
   391  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   392                           EEADR equ 09Bh ;# 
   393  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   394                           EECON1 equ 09Ch ;# 
   395  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   396                           EECON2 equ 09Dh ;# 
   397  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   398                           INDF equ 00h ;# 
   399  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   400                           TMR0 equ 01h ;# 
   401  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   402                           PCL equ 02h ;# 
   403  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   404                           STATUS equ 03h ;# 
   405  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   406                           FSR equ 04h ;# 
   407  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   408                           PORTA equ 05h ;# 
   409  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   410                           PORTC equ 07h ;# 
   411  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   412                           PCLATH equ 0Ah ;# 
   413  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   414                           INTCON equ 0Bh ;# 
   415  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   416                           PIR1 equ 0Ch ;# 
   417  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   418                           TMR1 equ 0Eh ;# 
   419  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   420                           TMR1L equ 0Eh ;# 
   421  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   422                           TMR1H equ 0Fh ;# 
   423  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   424                           T1CON equ 010h ;# 
   425  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   426                           CMCON equ 019h ;# 
   427  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   428                           OPTION_REG equ 081h ;# 
   429  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   430                           TRISA equ 085h ;# 
   431  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   432                           TRISC equ 087h ;# 
   433  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   434                           PIE1 equ 08Ch ;# 
   435  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   436                           PCON equ 08Eh ;# 
   437  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   438                           OSCCAL equ 090h ;# 
   439  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   440                           WPUA equ 095h ;# 
   441  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   442                           WPU equ 095h ;# 
   443  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   444                           IOCA equ 096h ;# 
   445  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   446                           IOC equ 096h ;# 
   447  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   448                           VRCON equ 099h ;# 
   449  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   450                           EEDAT equ 09Ah ;# 
   451  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   452                           EEDATA equ 09Ah ;# 
   453  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   454                           EEADR equ 09Bh ;# 
   455  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   456                           EECON1 equ 09Ch ;# 
   457  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   458                           EECON2 equ 09Dh ;# 
   459  009D                     	FNCALL	_main,_Initialise
   460                           	FNCALL	_Initialise,_BitDataInit
   461                           	FNCALL	_Initialise,_StartTickTimer
   462                           	FNROOT	_main
   463                           	FNCALL	_ISR,_BitIntr
   464                           	FNCALL	_ISR,_EdgeIntr
   465                           	FNCALL	_ISR,_SendModule
   466                           	FNCALL	_ISR,_StartTickTimer
   467                           	FNCALL	intlevel1,_ISR
   468                           	global	intlevel1
   469                           	FNROOT	intlevel1
   470                           	global	_BOX_ADDRESS
   471                           psect	strings,class=STRING,delta=2,noexec
   472                           global __pstrings
   473                           __pstrings:
   474  0137                     stringtab:
   475  0137                     	global    __stringtab
   476                           __stringtab:
   477  0137                     ;	String table - string pointers are 1 byte each
   478                           stringcode:stringdir:
   479  0137                     movlw high(stringdir)
      + 0137                     stringdir:	
   480  0137  3001               movwf pclath
   481  0138  008A               movf fsr,w
   482  0139  0804               incf fsr
   483  013A  0A84               	addwf pc
   484  013B  0782               	global __stringbase
   485                           __stringbase:
   486  013C                     	retlw	0
   487  013C  3400               psect	strings
   488                           	global    __end_of__stringtab
   489                           __end_of__stringtab:
   490  013D                     	file	"user.c"
   491                           	line	14
   492                           _BOX_ADDRESS:
   493  013D                     	retlw	low(0)
   494  013D  3400               	global __end_of_BOX_ADDRESS
   495                           __end_of_BOX_ADDRESS:
   496  013E                     	global	_BOX_ADDRESS
   497                           	global	_Addressed
   498                           	global	_DataState
   499                           	global	_Data
   500                           	global	_Lamps
   501                           	global	_BoxSize
   502                           	global	_BitCount
   503                           	global	_BitData
   504                           	global	_TickCount
   505                           	global	_TMR0
   506                           _TMR0	set	0x1
   507  0001                     	global	_PORTA
   508                           _PORTA	set	0x5
   509  0005                     	global	_TMR1L
   510                           _TMR1L	set	0xE
   511  000E                     	global	_TMR1H
   512                           _TMR1H	set	0xF
   513  000F                     	global	_T1CONbits
   514                           _T1CONbits	set	0x10
   515  0010                     	global	_CMCONbits
   516                           _CMCONbits	set	0x19
   517  0019                     	global	_INTCONbits
   518                           _INTCONbits	set	0xB
   519  000B                     	global	_RC5
   520                           _RC5	set	0x3D
   521  003D                     	global	_RC3
   522                           _RC3	set	0x3B
   523  003B                     	global	_RC4
   524                           _RC4	set	0x3C
   525  003C                     	global	_RA2
   526                           _RA2	set	0x2A
   527  002A                     	global	_RC1
   528                           _RC1	set	0x39
   529  0039                     	global	_IOCAbits
   530                           _IOCAbits	set	0x96
   531  0096                     	global	_TRISCbits
   532                           _TRISCbits	set	0x87
   533  0087                     ; #config settings
   534                           global __CFG_FOSC$EC
   535                           __CFG_FOSC$EC equ 0x0
   536  0000                     global __CFG_WDTE$OFF
   537                           __CFG_WDTE$OFF equ 0x0
   538  0000                     global __CFG_PWRTE$OFF
   539                           __CFG_PWRTE$OFF equ 0x0
   540  0000                     global __CFG_MCLRE$OFF
   541                           __CFG_MCLRE$OFF equ 0x0
   542  0000                     global __CFG_BOREN$OFF
   543                           __CFG_BOREN$OFF equ 0x0
   544  0000                     global __CFG_CP$OFF
   545                           __CFG_CP$OFF equ 0x0
   546  0000                     global __CFG_CPD$OFF
   547                           __CFG_CPD$OFF equ 0x0
   548  0000                     	file	"C:\Users\abaker\AppData\Local\Temp\sg5c."
   549                           	line	#
   550                           psect cinit,class=CODE,delta=2
   551                           global start_initialization
   552                           start_initialization:
   553  0010                     
   554                           global __initialization
   555                           __initialization:
   556  0010                     psect	bssBANK0,class=BANK0,space=1,noexec
   557                           global __pbssBANK0
   558                           __pbssBANK0:
   559  002B                     _Addressed:
   560  002B                            ds      1
   561  002B                     
   562                           _DataState:
   563  002C                            ds      1
   564  002C                     
   565                           _Data:
   566  002D                            ds      1
   567  002D                     
   568                           _Lamps:
   569  002E                            ds      1
   570  002E                     
   571                           _BoxSize:
   572  002F                            ds      1
   573  002F                     
   574                           _Address:
   575  0030                            ds      1
   576  0030                     
   577                           _Sync:
   578  0031                            ds      1
   579  0031                     
   580                           _BitCount:
   581  0032                            ds      1
   582  0032                     
   583                           _BitData:
   584  0033                            ds      1
   585  0033                     
   586                           _TickCount:
   587  0034                            ds      1
   588  0034                     
   589                           	file	"C:\Users\abaker\AppData\Local\Temp\sg5c."
   590                           	line	#
   591                           ; Clear objects allocated to BANK0
   592                           psect cinit,class=CODE,delta=2,merge=1
   593                           	bcf	status, 5	;RP0=0, select bank0
   594  0010  1283               	clrf	((__pbssBANK0)+0)&07Fh
   595  0011  01AB               	clrf	((__pbssBANK0)+1)&07Fh
   596  0012  01AC               	clrf	((__pbssBANK0)+2)&07Fh
   597  0013  01AD               	clrf	((__pbssBANK0)+3)&07Fh
   598  0014  01AE               	clrf	((__pbssBANK0)+4)&07Fh
   599  0015  01AF               	clrf	((__pbssBANK0)+5)&07Fh
   600  0016  01B0               	clrf	((__pbssBANK0)+6)&07Fh
   601  0017  01B1               	clrf	((__pbssBANK0)+7)&07Fh
   602  0018  01B2               	clrf	((__pbssBANK0)+8)&07Fh
   603  0019  01B3               	clrf	((__pbssBANK0)+9)&07Fh
   604  001A  01B4               psect cinit,class=CODE,delta=2,merge=1
   605                           global end_of_initialization,__end_of__initialization
   606                           
   607                           ;End of C runtime variable initialization code
   608                           
   609                           end_of_initialization:
   610  001B                     __end_of__initialization:
   611  001B                     clrf status
   612  001B  0183               ljmp _main	;jump to C main() function
   613  001C  2945               psect	cstackCOMMON,class=COMMON,space=1,noexec
   614                           global __pcstackCOMMON
   615                           __pcstackCOMMON:
   616  0000                     ??_Initialise:	; 1 bytes @ 0x0
   617  0000                     ??_StartTickTimer:	; 1 bytes @ 0x0
   618  0000                     ??_main:	; 1 bytes @ 0x0
   619  0000                     ??_EdgeIntr:	; 1 bytes @ 0x0
   620  0000                     ??_SendModule:	; 1 bytes @ 0x0
   621  0000                     psect	cstackBANK0,class=BANK0,space=1,noexec
   622                           global __pcstackBANK0
   623                           __pcstackBANK0:
   624  0020                     ?_Initialise:	; 1 bytes @ 0x0
   625  0020                     ?_StartTickTimer:	; 1 bytes @ 0x0
   626  0020                     ?_BitDataInit:	; 1 bytes @ 0x0
   627  0020                     ?_main:	; 1 bytes @ 0x0
   628  0020                     ?_EdgeIntr:	; 1 bytes @ 0x0
   629  0020                     ?_BitIntr:	; 1 bytes @ 0x0
   630  0020                     ??_BitIntr:	; 1 bytes @ 0x0
   631  0020                     ?_SendModule:	; 1 bytes @ 0x0
   632  0020                     ?_ISR:	; 1 bytes @ 0x0
   633  0020                     	global	StartTickTimer@IntEnable
   634                           StartTickTimer@IntEnable:	; 1 bytes @ 0x0
   635  0020                     	ds	1
   636  0020                     	global	BitIntr@Dummy
   637                           BitIntr@Dummy:	; 1 bytes @ 0x1
   638  0021                     	ds	1
   639  0021                     ??_ISR:	; 1 bytes @ 0x2
   640  0022                     	ds	5
   641  0022                     ??_BitDataInit:	; 1 bytes @ 0x7
   642  0027                     	ds	1
   643  0027                     	global	BitDataInit@Dummy
   644                           BitDataInit@Dummy:	; 1 bytes @ 0x8
   645  0028                     	ds	1
   646  0028                     	global	BitDataInit@ModeTx
   647                           BitDataInit@ModeTx:	; 1 bytes @ 0x9
   648  0029                     	ds	1
   649  0029                     	global	BitDataInit@IntEnable
   650                           BitDataInit@IntEnable:	; 1 bytes @ 0xA
   651  002A                     	ds	1
   652  002A                     ;!
   653                           ;!Data Sizes:
   654                           ;!    Strings     0
   655                           ;!    Constant    1
   656                           ;!    Data        0
   657                           ;!    BSS         10
   658                           ;!    Persistent  0
   659                           ;!    Stack       0
   660                           ;!
   661                           ;!Auto Spaces:
   662                           ;!    Space          Size  Autos    Used
   663                           ;!    COMMON            0      0       0
   664                           ;!    BANK0            62     11      21
   665                           
   666                           ;!
   667                           ;!Pointer List with Targets:
   668                           ;!
   669                           ;!    None.
   670                           
   671                           
   672                           ;!
   673                           ;!Critical Paths under _main in COMMON
   674                           ;!
   675                           ;!    None.
   676                           ;!
   677                           ;!Critical Paths under _ISR in COMMON
   678                           ;!
   679                           ;!    None.
   680                           ;!
   681                           ;!Critical Paths under _main in BANK0
   682                           ;!
   683                           ;!    _Initialise->_BitDataInit
   684                           ;!
   685                           ;!Critical Paths under _ISR in BANK0
   686                           ;!
   687                           ;!    _ISR->_BitIntr
   688                           
   689 ;;
   690 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   691 ;;
   692                           
   693                           ;!
   694                           ;!Call Graph Tables:
   695                           ;!
   696                           ;! ---------------------------------------------------------------------------------
   697                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   698                           ;! ---------------------------------------------------------------------------------
   699                           ;! (0) _main                                                 0     0      0      69
   700                           ;!                         _Initialise
   701                           ;! ---------------------------------------------------------------------------------
   702                           ;! (1) _Initialise                                           0     0      0      69
   703                           ;!                        _BitDataInit
   704                           ;!                     _StartTickTimer
   705                           ;! ---------------------------------------------------------------------------------
   706                           ;! (4) _StartTickTimer                                       1     1      0      23
   707                           ;! ---------------------------------------------------------------------------------
   708                           ;! (2) _BitDataInit                                          4     4      0      46
   709                           ;!                                              7 BANK0      4     4      0
   710                           ;! ---------------------------------------------------------------------------------
   711                           ;! Estimated maximum stack depth 4
   712                           ;! ---------------------------------------------------------------------------------
   713                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   714                           ;! ---------------------------------------------------------------------------------
   715                           ;! (3) _ISR                                                  5     5      0      24
   716                           ;!                                              2 BANK0      5     5      0
   717                           ;!                            _BitIntr
   718                           ;!                           _EdgeIntr
   719                           ;!                         _SendModule
   720                           ;!                     _StartTickTimer
   721                           ;! ---------------------------------------------------------------------------------
   722                           ;! (4) _StartTickTimer                                       1     1      0      23
   723                           ;! ---------------------------------------------------------------------------------
   724                           ;! (4) _SendModule                                           0     0      0       0
   725                           ;! ---------------------------------------------------------------------------------
   726                           ;! (4) _EdgeIntr                                             0     0      0       0
   727                           ;! ---------------------------------------------------------------------------------
   728                           ;! (5) _BitIntr                                              2     2      0       1
   729                           ;!                                              0 BANK0      2     2      0
   730                           ;! ---------------------------------------------------------------------------------
   731                           ;! Estimated maximum stack depth 5
   732                           ;! ---------------------------------------------------------------------------------
   733                           ;!
   734                           ;! Call Graph Graphs:
   735                           ;!
   736                           ;! _main (ROOT)
   737                           ;!   _Initialise
   738                           ;!     _BitDataInit
   739                           ;!     _StartTickTimer
   740                           ;!
   741                           ;! _ISR (ROOT)
   742                           ;!   _BitIntr
   743                           ;!   _EdgeIntr
   744                           ;!   _SendModule
   745                           ;!   _StartTickTimer
   746                           ;!
   747                           
   748                           ;! Address spaces:
   749                           
   750                           ;!Name               Size   Autos  Total    Cost      Usage
   751                           ;!BITCOMMON            0      0       0       0        0.0%
   752                           ;!EEDATA              80      0       0       0        0.0%
   753                           ;!NULL                 0      0       0       0        0.0%
   754                           ;!CODE                 0      0       0       0        0.0%
   755                           ;!BITSFR0              0      0       0       1        0.0%
   756                           ;!SFR0                 0      0       0       1        0.0%
   757                           ;!COMMON               0      0       0       1        0.0%
   758                           ;!BITSFR1              0      0       0       2        0.0%
   759                           ;!SFR1                 0      0       0       2        0.0%
   760                           ;!STACK                0      0       0       2        0.0%
   761                           ;!BITBANK0            3E      0       0       3        0.0%
   762                           ;!BANK0               3E      B      15       4       33.9%
   763                           ;!ABS                  0      0      15       5        0.0%
   764                           ;!DATA                 0      0      15       6        0.0%
   765                           
   766                           	global	_main
   767                           
   768 ;; *************** function _main *****************
   769 ;; Defined at:
   770 ;;		line 7 in file "main.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, status,2, status,0, pclath, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : B00/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0
   784 ;;      Params:         0       0
   785 ;;      Locals:         0       0
   786 ;;      Temps:          0       0
   787 ;;      Totals:         0       0
   788 ;;Total ram usage:        0 bytes
   789 ;; Hardware stack levels required when called:    5
   790 ;; This function calls:
   791 ;;		_Initialise
   792 ;; This function is called by:
   793 ;;		Startup code after reset
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   797                           	file	"main.c"
   798                           	line	7
   799                           global __pmaintext
   800                           __pmaintext:	;psect for function _main
   801  0145                     psect	maintext
   802                           	file	"main.c"
   803                           	line	7
   804                           	global	__size_of_main
   805                           	__size_of_main	equ	__end_of_main-_main
   806  0005                     	
   807                           _main:	
   808  0145                     ;incstack = 0
   809                           	opt	stack 3
   810                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   811                           	line	9
   812                           	
   813                           l983:	
   814  0145                     ;main.c: 9:     Initialise();
   815                           	fcall	_Initialise
   816  0145  210F               	line	12
   817                           	
   818                           l985:	
   819  0146                     ;main.c: 12:     INTCONbits.GIE = 1;
   820                           	bsf	(11),7	;volatile
   821  0146  178B               	line	14
   822                           ;main.c: 14:     while(1==1)
   823                           	goto	l9
   824  0147  2948               	
   825                           l10:	
   826  0148                     	line	17
   827                           ;main.c: 15:     {;main.c: 17:     }
   828                           	
   829                           l9:	
   830  0148                     	line	14
   831                           ;main.c: 14:     while(1==1)
   832                           	goto	l10
   833  0148  2948               	
   834                           l11:	
   835  0149                     	line	20
   836                           ;main.c: 19:     return;
   837                           	
   838                           l12:	
   839  0149                     	global	start
   840                           	ljmp	start
   841  0149  280F               	opt stack 0
   842                           GLOBAL	__end_of_main
   843                           	__end_of_main:
   844  014A                     	signat	_main,89
   845                           	global	_Initialise
   846                           
   847 ;; *************** function _Initialise *****************
   848 ;; Defined at:
   849 ;;		line 14 in file "system.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, status,2, status,0, pclath, cstack
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0
   863 ;;      Params:         0       0
   864 ;;      Locals:         0       0
   865 ;;      Temps:          0       0
   866 ;;      Totals:         0       0
   867 ;;Total ram usage:        0 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    4
   870 ;; This function calls:
   871 ;;		_BitDataInit
   872 ;;		_StartTickTimer
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   878                           	file	"system.c"
   879                           	line	14
   880                           global __ptext1
   881                           __ptext1:	;psect for function _Initialise
   882  010F                     psect	text1
   883                           	file	"system.c"
   884                           	line	14
   885                           	global	__size_of_Initialise
   886                           	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
   887  0015                     	
   888                           _Initialise:	
   889  010F                     ;incstack = 0
   890                           	opt	stack 3
   891                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
   892                           	line	18
   893                           	
   894                           l869:	
   895  010F                     ;system.c: 18:     CMCONbits.CM = 7;
   896                           	movlw	(07h & ((1<<3)-1))<<0
   897  010F  3007               	bcf	status, 5	;RP0=0, select bank0
   898  0110  1283               	iorwf	(25),f	;volatile
   899  0111  0499               	line	21
   900                           	
   901                           l871:	
   902  0112                     ;system.c: 21:     TRISCbits.TRISC0 = 1;
   903                           	bsf	status, 5	;RP0=1, select bank1
   904  0112  1683               	bsf	(135)^080h,0	;volatile
   905  0113  1407               	line	22
   906                           	
   907                           l873:	
   908  0114                     ;system.c: 22:     TRISCbits.TRISC1 = 0;
   909                           	bcf	(135)^080h,1	;volatile
   910  0114  1087               	line	23
   911                           	
   912                           l875:	
   913  0115                     ;system.c: 23:     TRISCbits.TRISC2 = 0;
   914                           	bcf	(135)^080h,2	;volatile
   915  0115  1107               	line	24
   916                           	
   917                           l877:	
   918  0116                     ;system.c: 24:     TRISCbits.TRISC3 = 0;
   919                           	bcf	(135)^080h,3	;volatile
   920  0116  1187               	line	25
   921                           	
   922                           l879:	
   923  0117                     ;system.c: 25:     TRISCbits.TRISC4 = 0;
   924                           	bcf	(135)^080h,4	;volatile
   925  0117  1207               	line	26
   926                           	
   927                           l881:	
   928  0118                     ;system.c: 26:     TRISCbits.TRISC5 = 0;
   929                           	bcf	(135)^080h,5	;volatile
   930  0118  1287               	line	29
   931                           	
   932                           l883:	
   933  0119                     ;system.c: 29:     T1CONbits.TMR1CS = 0;
   934                           	bcf	status, 5	;RP0=0, select bank0
   935  0119  1283               	bcf	(16),1	;volatile
   936  011A  1090               	line	30
   937                           ;system.c: 30:     T1CONbits.T1CKPS = 0;
   938                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
   939  011B  30CF               	andwf	(16),f	;volatile
   940  011C  0590               	line	31
   941                           	
   942                           l885:	
   943  011D                     ;system.c: 31:     T1CONbits.nT1SYNC = 1;
   944                           	bsf	(16),2	;volatile
   945  011D  1510               	line	32
   946                           	
   947                           l887:	
   948  011E                     ;system.c: 32:     T1CONbits.TMR1GE = 0;
   949                           	bcf	(16),6	;volatile
   950  011E  1310               	line	35
   951                           	
   952                           l889:	
   953  011F                     ;system.c: 35:     StartTickTimer();
   954                           	fcall	_StartTickTimer
   955  011F  2124               	line	38
   956                           	
   957                           l891:	
   958  0120                     ;system.c: 38:     BitDataInit( 0);
   959                           	movlw	low(0)
   960  0120  3000               	fcall	_BitDataInit
   961  0121  20EB               	line	41
   962                           	
   963                           l893:	
   964  0122                     ;system.c: 41:     INTCONbits.PEIE = 1;
   965                           	bsf	(11),6	;volatile
   966  0122  170B               	line	42
   967                           	
   968                           l27:	
   969  0123                     	return
   970  0123  0008               	opt stack 0
   971                           GLOBAL	__end_of_Initialise
   972                           	__end_of_Initialise:
   973  0124                     	signat	_Initialise,89
   974                           	global	_BitDataInit
   975                           
   976 ;; *************** function _BitDataInit *****************
   977 ;; Defined at:
   978 ;;		line 58 in file "user.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  ModeTx          1    wreg     unsigned char 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  ModeTx          1    9[BANK0 ] unsigned char 
   983 ;;  IntEnable       1   10[BANK0 ] unsigned char 
   984 ;;  Dummy           1    8[BANK0 ] unsigned char 
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, status,2, status,0
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMMON   BANK0
   994 ;;      Params:         0       0
   995 ;;      Locals:         0       3
   996 ;;      Temps:          0       1
   997 ;;      Totals:         0       4
   998 ;;Total ram usage:        4 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    3
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_Initialise
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1008                           	file	"user.c"
  1009                           	line	58
  1010                           global __ptext2
  1011                           __ptext2:	;psect for function _BitDataInit
  1012  00EB                     psect	text2
  1013                           	file	"user.c"
  1014                           	line	58
  1015                           	global	__size_of_BitDataInit
  1016                           	__size_of_BitDataInit	equ	__end_of_BitDataInit-_BitDataInit
  1017  0024                     	
  1018                           _BitDataInit:	
  1019  00EB                     ;incstack = 0
  1020                           	opt	stack 3
  1021                           ; Regs used in _BitDataInit: [wreg+status,2+status,0]
  1022                           ;BitDataInit@ModeTx stored from wreg
  1023                           	bcf	status, 5	;RP0=0, select bank0
  1024  00EB  1283               	movwf	(BitDataInit@ModeTx)
  1025  00EC  00A9               	line	64
  1026                           	
  1027                           l851:	
  1028  00ED                     ;user.c: 58:     INTCONbits.GIE = IntEnable;;user.c: 59: };user.c: 60: ;user.c: 61: ;use
                                 r.c: 64: {
  1029                           	movlw	0
  1030  00ED  3000               	btfsc	(11),7	;volatile
  1031  00EE  1B8B               	movlw	1
  1032  00EF  3001               	movwf	(BitDataInit@IntEnable)
  1033  00F0  00AA               	line	65
  1034                           	
  1035                           l853:	
  1036  00F1                     ;user.c: 65: 
  1037                           	bcf	(11),7	;volatile
  1038  00F1  138B               	line	67
  1039                           	
  1040                           l855:	
  1041  00F2                     ;user.c: 67: 
  1042                           		decf	((BitDataInit@ModeTx)),w
  1043  00F2  0329               	btfss	status,2
  1044  00F3  1D03               	goto	u181
  1045  00F4  28F6               	goto	u180
  1046  00F5  28F7               u181:
  1047  00F6                     	goto	l79
  1048  00F6  28FA               u180:
  1049  00F7                     	line	70
  1050                           	
  1051                           l857:	
  1052  00F7                     ;user.c: 68: ;user.c: 70: 
  1053                           	bsf	(11),3	;volatile
  1054  00F7  158B               	line	73
  1055                           ;user.c: 73: }
  1056                           	bsf	(57/8),(57)&7	;volatile
  1057  00F8  1487               	line	74
  1058                           ;user.c: 74: 
  1059                           	goto	l867
  1060  00F9  2908               	line	75
  1061                           ;user.c: 75: 
  1062                           	
  1063                           l79:	
  1064  00FA                     	line	78
  1065                           ;user.c: 76: ;user.c: 78: void BitIntr( void)
  1066                           	bcf	(57/8),(57)&7	;volatile
  1067  00FA  1087               	line	81
  1068                           ;user.c: 81:     {
  1069                           	clrf	(_BitData)
  1070  00FB  01B3               	incf	(_BitData),f
  1071  00FC  0AB3               	line	82
  1072                           	
  1073                           l859:	
  1074  00FD                     ;user.c: 82: 
  1075                           	clrf	(_DataState)
  1076  00FD  01AC               	line	83
  1077                           ;user.c: 83: 
  1078                           	clrf	(_Data)
  1079  00FE  01AD               	line	84
  1080                           ;user.c: 84:         Data = (Data<<1) | RA2;
  1081                           	clrf	(_Addressed)
  1082  00FF  01AB               	line	87
  1083                           	
  1084                           l861:	
  1085  0100                     ;user.c: 87: 
  1086                           	movf	(5),w	;volatile
  1087  0100  0805               	movwf	(??_BitDataInit+0)+0
  1088  0101  00A7               	movf	(??_BitDataInit+0)+0,w
  1089  0102  0827               	movwf	(BitDataInit@Dummy)
  1090  0103  00A8               	line	90
  1091                           	
  1092                           l863:	
  1093  0104                     ;user.c: 90: 
  1094                           	bsf	status, 5	;RP0=1, select bank1
  1095  0104  1683               	bsf	(150)^080h,2	;volatile
  1096  0105  1516               	line	91
  1097                           	
  1098                           l865:	
  1099  0106                     ;user.c: 91:         INTCONbits.T0IF = 0;
  1100                           	bsf	(11),3	;volatile
  1101  0106  158B               	goto	l867
  1102  0107  2908               	line	92
  1103                           ;user.c: 92:         INTCONbits.T0IE = 1;
  1104                           	
  1105                           l80:	
  1106  0108                     	line	95
  1107                           	
  1108                           l867:	
  1109  0108                     ;user.c: 95:         BitData = 0;
  1110                           	bcf	status, 5	;RP0=0, select bank0
  1111  0108  1283               	rrf	(BitDataInit@IntEnable),w
  1112  0109  0C2A               	skipc
  1113  010A  1C03               	bcf	(11),7	;volatile
  1114  010B  138B               	skipnc
  1115  010C  1803               	bsf	(11),7	;volatile
  1116  010D  178B               	line	96
  1117                           	
  1118                           l81:	
  1119  010E                     	return
  1120  010E  0008               	opt stack 0
  1121                           GLOBAL	__end_of_BitDataInit
  1122                           	__end_of_BitDataInit:
  1123  010F                     	signat	_BitDataInit,4217
  1124                           	global	_ISR
  1125                           
  1126 ;; *************** function _ISR *****************
  1127 ;; Defined at:
  1128 ;;		line 16 in file "interrupts.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;		None
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;		None
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0
  1142 ;;      Params:         0       0
  1143 ;;      Locals:         0       0
  1144 ;;      Temps:          0       5
  1145 ;;      Totals:         0       5
  1146 ;;Total ram usage:        5 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    2
  1149 ;; This function calls:
  1150 ;;		_BitIntr
  1151 ;;		_EdgeIntr
  1152 ;;		_SendModule
  1153 ;;		_StartTickTimer
  1154 ;; This function is called by:
  1155 ;;		Interrupt level 1
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1159                           	file	"interrupts.c"
  1160                           	line	16
  1161                           global __ptext3
  1162                           __ptext3:	;psect for function _ISR
  1163  00BD                     psect	text3
  1164                           	file	"interrupts.c"
  1165                           	line	16
  1166                           	global	__size_of_ISR
  1167                           	__size_of_ISR	equ	__end_of_ISR-_ISR
  1168  002E                     	
  1169                           _ISR:	
  1170  00BD                     ;incstack = 0
  1171                           	opt	stack 3
  1172                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1173                           psect	intentry,class=CODE,delta=2
  1174                           global __pintentry
  1175                           __pintentry:
  1176  0004                     global interrupt_function
  1177                           interrupt_function:
  1178  0004                     	global saved_w
  1179                           	saved_w	set	btemp+0
  1180  005E                     	movwf	saved_w
  1181  0004  00DE               	swapf	status,w
  1182  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  1183  0006  1283               	movwf	(??_ISR+1)
  1184  0007  00A3               	movf	fsr0,w
  1185  0008  0804               	movwf	(??_ISR+2)
  1186  0009  00A4               	movf	pclath,w
  1187  000A  080A               	movwf	(??_ISR+3)
  1188  000B  00A5               	movf	btemp+1,w
  1189  000C  085F               	movwf	(??_ISR+4)
  1190  000D  00A6               	ljmp	_ISR
  1191  000E  28BD               psect	text3
  1192                           	line	18
  1193                           	
  1194                           i1l987:	
  1195  00BD                     ;interrupts.c: 18:     if (INTCONbits.T0IF==1)
  1196                           	btfss	(11),2	;volatile
  1197  00BD  1D0B               	goto	u32_21
  1198  00BE  28C0               	goto	u32_20
  1199  00BF  28C1               u32_21:
  1200  00C0                     	goto	i1l999
  1201  00C0  28D3               u32_20:
  1202  00C1                     	line	20
  1203                           	
  1204                           i1l989:	
  1205  00C1                     ;interrupts.c: 19:     {;interrupts.c: 20:         StartTickTimer();
  1206                           	fcall	_StartTickTimer
  1207  00C1  2124               	line	23
  1208                           	
  1209                           i1l991:	
  1210  00C2                     ;interrupts.c: 23:         if (TickCount==9)
  1211                           		movlw	9
  1212  00C2  3009               	bcf	status, 5	;RP0=0, select bank0
  1213  00C3  1283               	xorwf	((_TickCount)),w
  1214  00C4  0634               	btfss	status,2
  1215  00C5  1D03               	goto	u33_21
  1216  00C6  28C8               	goto	u33_20
  1217  00C7  28C9               u33_21:
  1218  00C8                     	goto	i1l997
  1219  00C8  28CC               u33_20:
  1220  00C9                     	line	25
  1221                           	
  1222                           i1l993:	
  1223  00C9                     ;interrupts.c: 24:         {;interrupts.c: 25:             TickCount = 0;
  1224                           	clrf	(_TickCount)
  1225  00C9  01B4               	line	26
  1226                           	
  1227                           i1l995:	
  1228  00CA                     ;interrupts.c: 26:             SendModule();
  1229                           	fcall	_SendModule
  1230  00CA  214A               	line	27
  1231                           ;interrupts.c: 27:         }
  1232                           	goto	i1l999
  1233  00CB  28D3               	line	28
  1234                           ;interrupts.c: 28:         else
  1235                           	
  1236                           i1l126:	
  1237  00CC                     	line	30
  1238                           	
  1239                           i1l997:	
  1240  00CC                     ;interrupts.c: 29:         {;interrupts.c: 30:             TickCount++;
  1241                           	movlw	low(01h)
  1242  00CC  3001               	bcf	status, 5	;RP0=0, select bank0
  1243  00CD  1283               	movwf	(??_ISR+0)+0
  1244  00CE  00A2               	movf	(??_ISR+0)+0,w
  1245  00CF  0822               	addwf	(_TickCount),f
  1246  00D0  07B4               	goto	i1l999
  1247  00D1  28D3               	line	31
  1248                           ;interrupts.c: 31:         }
  1249                           	
  1250                           i1l127:	
  1251  00D2                     	goto	i1l999
  1252  00D2  28D3               	line	32
  1253                           ;interrupts.c: 32:     }
  1254                           	
  1255                           i1l125:	
  1256  00D3                     	line	34
  1257                           	
  1258                           i1l999:	
  1259  00D3                     ;interrupts.c: 34:     if (INTCONbits.RAIF==1)
  1260                           	btfss	(11),0	;volatile
  1261  00D3  1C0B               	goto	u34_21
  1262  00D4  28D6               	goto	u34_20
  1263  00D5  28D7               u34_21:
  1264  00D6                     	goto	i1l1003
  1265  00D6  28D9               u34_20:
  1266  00D7                     	line	36
  1267                           	
  1268                           i1l1001:	
  1269  00D7                     ;interrupts.c: 35:     {;interrupts.c: 36:         EdgeIntr();
  1270                           	fcall	_EdgeIntr
  1271  00D7  213E               	goto	i1l1003
  1272  00D8  28D9               	line	37
  1273                           ;interrupts.c: 37:     }
  1274                           	
  1275                           i1l128:	
  1276  00D9                     	line	39
  1277                           	
  1278                           i1l1003:	
  1279  00D9                     ;interrupts.c: 39:     if (INTCONbits.GIE==1)
  1280                           	btfss	(11),7	;volatile
  1281  00D9  1F8B               	goto	u35_21
  1282  00DA  28DC               	goto	u35_20
  1283  00DB  28DD               u35_21:
  1284  00DC                     	goto	i1l130
  1285  00DC  28DF               u35_20:
  1286  00DD                     	line	41
  1287                           	
  1288                           i1l1005:	
  1289  00DD                     ;interrupts.c: 40:     {;interrupts.c: 41:         BitIntr();
  1290                           	fcall	_BitIntr
  1291  00DD  201D               	goto	i1l130
  1292  00DE  28DF               	line	42
  1293                           ;interrupts.c: 42:     }
  1294                           	
  1295                           i1l129:	
  1296  00DF                     	line	44
  1297                           	
  1298                           i1l130:	
  1299  00DF                     	bcf	status, 5	;RP0=0, select bank0
  1300  00DF  1283               	movf	(??_ISR+4),w
  1301  00E0  0826               	movwf	btemp+1
  1302  00E1  00DF               	movf	(??_ISR+3),w
  1303  00E2  0825               	movwf	pclath
  1304  00E3  008A               	movf	(??_ISR+2),w
  1305  00E4  0824               	movwf	fsr0
  1306  00E5  0084               	swapf	(??_ISR+1)^00h,w
  1307  00E6  0E23               	movwf	status
  1308  00E7  0083               	swapf	saved_w,f
  1309  00E8  0EDE               	swapf	saved_w,w
  1310  00E9  0E5E               	retfie
  1311  00EA  0009               	opt stack 0
  1312                           GLOBAL	__end_of_ISR
  1313                           	__end_of_ISR:
  1314  00EB                     	signat	_ISR,89
  1315                           	global	_StartTickTimer
  1316                           
  1317 ;; *************** function _StartTickTimer *****************
  1318 ;; Defined at:
  1319 ;;		line 36 in file "user.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;		None
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  IntEnable       1    0[BANK0 ] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, status,2, status,0
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMMON   BANK0
  1333 ;;      Params:         0       0
  1334 ;;      Locals:         0       0
  1335 ;;      Temps:          0       0
  1336 ;;      Totals:         0       0
  1337 ;;Total ram usage:        0 bytes
  1338 ;; Hardware stack levels used:    1
  1339 ;; Hardware stack levels required when called:    3
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_Initialise
  1344 ;;		_ISR
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1348                           	file	"user.c"
  1349                           	line	36
  1350                           global __ptext4
  1351                           __ptext4:	;psect for function _StartTickTimer
  1352  0124                     psect	text4
  1353                           	file	"user.c"
  1354                           	line	36
  1355                           	global	__size_of_StartTickTimer
  1356                           	__size_of_StartTickTimer	equ	__end_of_StartTickTimer-_StartTickTimer
  1357  0013                     	
  1358                           _StartTickTimer:	
  1359  0124                     ;incstack = 0
  1360                           	opt	stack 1
  1361                           ; Regs used in _StartTickTimer: [wreg+status,2+status,0]
  1362                           	line	41
  1363                           	
  1364                           i1l895:	
  1365  0124                     ;user.c: 38:     else;user.c: 41:         RC1 = 0;
  1366                           	movlw	0
  1367  0124  3000               	btfsc	(11),7	;volatile
  1368  0125  1B8B               	movlw	1
  1369  0126  3001               	bcf	status, 5	;RP0=0, select bank0
  1370  0127  1283               	movwf	(StartTickTimer@IntEnable)
  1371  0128  00A0               	line	42
  1372                           	
  1373                           i1l897:	
  1374  0129                     ;user.c: 42: 
  1375                           	bcf	(11),7	;volatile
  1376  0129  138B               	line	45
  1377                           	
  1378                           i1l899:	
  1379  012A                     ;user.c: 45:         DataState = DATA_SYNC;
  1380                           	bcf	(16),0	;volatile
  1381  012A  1010               	line	47
  1382                           	
  1383                           i1l901:	
  1384  012B                     ;user.c: 47:         Addressed = 0;
  1385                           	bcf	(11),2	;volatile
  1386  012B  110B               	line	49
  1387                           	
  1388                           i1l903:	
  1389  012C                     ;user.c: 49: 
  1390                           	movlw	low(0C3h)
  1391  012C  30C3               	movwf	(15)	;volatile
  1392  012D  008F               	line	50
  1393                           	
  1394                           i1l905:	
  1395  012E                     ;user.c: 50:         Dummy = PORTA;
  1396                           	movlw	low(050h)
  1397  012E  3050               	movwf	(14)	;volatile
  1398  012F  008E               	line	51
  1399                           	
  1400                           i1l907:	
  1401  0130                     ;user.c: 51: 
  1402                           	bsf	(16),0	;volatile
  1403  0130  1410               	line	54
  1404                           	
  1405                           i1l909:	
  1406  0131                     ;user.c: 54:         INTCONbits.RAIE = 1;
  1407                           	rrf	(StartTickTimer@IntEnable),w
  1408  0131  0C20               	skipc
  1409  0132  1C03               	bcf	(11),7	;volatile
  1410  0133  138B               	skipnc
  1411  0134  1803               	bsf	(11),7	;volatile
  1412  0135  178B               	line	55
  1413                           	
  1414                           i1l76:	
  1415  0136                     	return
  1416  0136  0008               	opt stack 0
  1417                           GLOBAL	__end_of_StartTickTimer
  1418                           	__end_of_StartTickTimer:
  1419  0137                     	signat	_StartTickTimer,89
  1420                           	global	_SendModule
  1421                           
  1422 ;; *************** function _SendModule *****************
  1423 ;; Defined at:
  1424 ;;		line 214 in file "user.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		None
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0
  1438 ;;      Params:         0       0
  1439 ;;      Locals:         0       0
  1440 ;;      Temps:          0       0
  1441 ;;      Totals:         0       0
  1442 ;;Total ram usage:        0 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; This function calls:
  1445 ;;		Nothing
  1446 ;; This function is called by:
  1447 ;;		_ISR
  1448 ;; This function uses a non-reentrant model
  1449 ;;
  1450                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1451                           	line	214
  1452                           global __ptext5
  1453                           __ptext5:	;psect for function _SendModule
  1454  014A                     psect	text5
  1455                           	file	"user.c"
  1456                           	line	214
  1457                           	global	__size_of_SendModule
  1458                           	__size_of_SendModule	equ	__end_of_SendModule-_SendModule
  1459  0001                     	
  1460                           _SendModule:	
  1461  014A                     ;incstack = 0
  1462                           	opt	stack 4
  1463                           ; Regs used in _SendModule: []
  1464                           	line	217
  1465                           	
  1466                           i1l108:	
  1467  014A                     	return
  1468  014A  0008               	opt stack 0
  1469                           GLOBAL	__end_of_SendModule
  1470                           	__end_of_SendModule:
  1471  014B                     	signat	_SendModule,89
  1472                           	global	_EdgeIntr
  1473                           
  1474 ;; *************** function _EdgeIntr *****************
  1475 ;; Defined at:
  1476 ;;		line 100 in file "user.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;		None
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;		None
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      void 
  1483 ;; Registers used:
  1484 ;;		wreg
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0
  1490 ;;      Params:         0       0
  1491 ;;      Locals:         0       0
  1492 ;;      Temps:          0       0
  1493 ;;      Totals:         0       0
  1494 ;;Total ram usage:        0 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; This function calls:
  1497 ;;		Nothing
  1498 ;; This function is called by:
  1499 ;;		_ISR
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  1503                           	line	100
  1504                           global __ptext6
  1505                           __ptext6:	;psect for function _EdgeIntr
  1506  013E                     psect	text6
  1507                           	file	"user.c"
  1508                           	line	100
  1509                           	global	__size_of_EdgeIntr
  1510                           	__size_of_EdgeIntr	equ	__end_of_EdgeIntr-_EdgeIntr
  1511  0007                     	
  1512                           _EdgeIntr:	
  1513  013E                     ;incstack = 0
  1514                           	opt	stack 4
  1515                           ; Regs used in _EdgeIntr: [wreg]
  1516                           	line	103
  1517                           	
  1518                           i1l911:	
  1519  013E                     ;user.c: 103: 
  1520                           	bcf	(11),3	;volatile
  1521  013E  118B               	line	106
  1522                           	
  1523                           i1l913:	
  1524  013F                     ;user.c: 106: 
  1525                           	movlw	low(06Ah)
  1526  013F  306A               	bcf	status, 5	;RP0=0, select bank0
  1527  0140  1283               	movwf	(1)	;volatile
  1528  0141  0081               	line	108
  1529                           	
  1530                           i1l915:	
  1531  0142                     ;user.c: 108: 
  1532                           	bcf	(11),2	;volatile
  1533  0142  110B               	line	109
  1534                           	
  1535                           i1l917:	
  1536  0143                     ;user.c: 109:             if (++BitCount==4)
  1537                           	bsf	(11),5	;volatile
  1538  0143  168B               	line	110
  1539                           	
  1540                           i1l84:	
  1541  0144                     	return
  1542  0144  0008               	opt stack 0
  1543                           GLOBAL	__end_of_EdgeIntr
  1544                           	__end_of_EdgeIntr:
  1545  0145                     	signat	_EdgeIntr,89
  1546                           	global	_BitIntr
  1547                           
  1548 ;; *************** function _BitIntr *****************
  1549 ;; Defined at:
  1550 ;;		line 115 in file "user.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;		None
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  Dummy           1    1[BANK0 ] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0
  1564 ;;      Params:         0       0
  1565 ;;      Locals:         0       1
  1566 ;;      Temps:          0       1
  1567 ;;      Totals:         0       2
  1568 ;;Total ram usage:        2 bytes
  1569 ;; Hardware stack levels used:    2
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_ISR
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  1577                           	line	115
  1578                           global __ptext7
  1579                           __ptext7:	;psect for function _BitIntr
  1580  001D                     psect	text7
  1581                           	file	"user.c"
  1582                           	line	115
  1583                           	global	__size_of_BitIntr
  1584                           	__size_of_BitIntr	equ	__end_of_BitIntr-_BitIntr
  1585  00A0                     	
  1586                           _BitIntr:	
  1587  001D                     ;incstack = 0
  1588                           	opt	stack 3
  1589                           ; Regs used in _BitIntr: [wreg-fsr0h+status,2+status,0+pclath]
  1590                           	line	117
  1591                           	
  1592                           i1l919:	
  1593  001D                     ;user.c: 117:         }
  1594                           	bcf	status, 5	;RP0=0, select bank0
  1595  001D  1283               		decf	((_BitData)),w
  1596  001E  0333               	btfss	status,2
  1597  001F  1D03               	goto	u19_21
  1598  0020  2822               	goto	u19_20
  1599  0021  2823               u19_21:
  1600  0022                     	goto	i1l87
  1601  0022  28B4               u19_20:
  1602  0023                     	line	121
  1603                           	
  1604                           i1l921:	
  1605  0023                     ;user.c: 118:         else if (DataState==DATA_ADDRESS);user.c: 121:             if (++B
                                 itCount==5)
  1606                           	clrc
  1607  0023  1003               	btfsc	(42/8),(42)&7	;volatile
  1608  0024  1905               	setc
  1609  0025  1403               	rlf	(_Data),f
  1610  0026  0DAD               	line	126
  1611                           	
  1612                           i1l923:	
  1613  0027                     ;user.c: 126:                     RC3=1;
  1614                           	movlw	low(09Ch)
  1615  0027  309C               	movwf	(1)	;volatile
  1616  0028  0081               	line	128
  1617                           	
  1618                           i1l925:	
  1619  0029                     ;user.c: 128:                 }
  1620                           	bcf	(11),2	;volatile
  1621  0029  110B               	line	129
  1622                           	
  1623                           i1l927:	
  1624  002A                     ;user.c: 129:                 else
  1625                           	bsf	(11),5	;volatile
  1626  002A  168B               	line	132
  1627                           	
  1628                           i1l929:	
  1629  002B                     ;user.c: 132:                 }
  1630                           	clrf	(_BitData)
  1631  002B  01B3               	line	134
  1632                           ;user.c: 134:                 DataState = DATA_SIZE;
  1633                           	movf	((_DataState)),w
  1634  002C  082C               	btfss	status,2
  1635  002D  1D03               	goto	u20_21
  1636  002E  2830               	goto	u20_20
  1637  002F  2831               u20_21:
  1638  0030                     	goto	i1l945
  1639  0030  284A               u20_20:
  1640  0031                     	line	137
  1641                           	
  1642                           i1l931:	
  1643  0031                     ;user.c: 135:             };user.c: 137:         else if (DataState==DATA_SIZE)
  1644                           	clrf	(_TickCount)
  1645  0031  01B4               	line	141
  1646                           	
  1647                           i1l933:	
  1648  0032                     ;user.c: 141:             {
  1649                           	bsf	(60/8),(60)&7	;volatile
  1650  0032  1607               	line	142
  1651                           	
  1652                           i1l935:	
  1653  0033                     ;user.c: 142:                 if (Data < 31)
  1654                           	bcf	(60/8),(60)&7	;volatile
  1655  0033  1207               	line	146
  1656                           	
  1657                           i1l937:	
  1658  0034                     ;user.c: 146:             }
  1659                           	movlw	low(01h)
  1660  0034  3001               	movwf	(??_BitIntr+0)+0
  1661  0035  00A0               	movf	(??_BitIntr+0)+0,w
  1662  0036  0820               	addwf	(_BitCount),f
  1663  0037  07B2               		movlw	4
  1664  0038  3004               	xorwf	(((_BitCount))),w
  1665  0039  0632               	btfss	status,2
  1666  003A  1D03               	goto	u21_21
  1667  003B  283D               	goto	u21_20
  1668  003C  283E               u21_21:
  1669  003D                     	goto	i1l105
  1670  003D  28BC               u21_20:
  1671  003E                     	line	148
  1672                           	
  1673                           i1l939:	
  1674  003E                     ;user.c: 147:         };user.c: 148:         else if (DataState==DATA_LAMPS)
  1675                           		movlw	9
  1676  003E  3009               	xorwf	((_Data)),w
  1677  003F  062D               	btfss	status,2
  1678  0040  1D03               	goto	u22_21
  1679  0041  2843               	goto	u22_20
  1680  0042  2844               u22_21:
  1681  0043                     	goto	i1l105
  1682  0043  28BC               u22_20:
  1683  0044                     	line	150
  1684                           	
  1685                           i1l941:	
  1686  0044                     ;user.c: 149:         {;user.c: 150: 
  1687                           	clrf	(_Data)
  1688  0044  01AD               	line	151
  1689                           	
  1690                           i1l943:	
  1691  0045                     ;user.c: 151: 
  1692                           	clrf	(_DataState)
  1693  0045  01AC               	incf	(_DataState),f
  1694  0046  0AAC               	goto	i1l105
  1695  0047  28BC               	line	152
  1696                           ;user.c: 152:             if (Addressed==1)
  1697                           	
  1698                           i1l90:	
  1699  0048                     	goto	i1l105
  1700  0048  28BC               	line	153
  1701                           ;user.c: 153:             {
  1702                           	
  1703                           i1l89:	
  1704  0049                     	line	154
  1705                           ;user.c: 154:                 Lamps = Data;
  1706                           	goto	i1l105
  1707  0049  28BC               	line	155
  1708                           ;user.c: 155:                 RC5=1;
  1709                           	
  1710                           i1l88:	
  1711  004A                     	
  1712                           i1l945:	
  1713  004A                     		decf	((_DataState)),w
  1714  004A  032C               	btfss	status,2
  1715  004B  1D03               	goto	u23_21
  1716  004C  284E               	goto	u23_20
  1717  004D  284F               u23_21:
  1718  004E                     	goto	i1l957
  1719  004E  2870               u23_20:
  1720  004F                     	line	158
  1721                           	
  1722                           i1l947:	
  1723  004F                     ;user.c: 156:                 RC5=0;;user.c: 158: 
  1724                           	movlw	low(01h)
  1725  004F  3001               	movwf	(??_BitIntr+0)+0
  1726  0050  00A0               	movf	(??_BitIntr+0)+0,w
  1727  0051  0820               	addwf	(_BitCount),f
  1728  0052  07B2               		movlw	5
  1729  0053  3005               	xorwf	(((_BitCount))),w
  1730  0054  0632               	btfss	status,2
  1731  0055  1D03               	goto	u24_21
  1732  0056  2858               	goto	u24_20
  1733  0057  2859               u24_21:
  1734  0058                     	goto	i1l105
  1735  0058  28BC               u24_20:
  1736  0059                     	line	160
  1737                           	
  1738                           i1l949:	
  1739  0059                     ;user.c: 159:             if (++BitCount==BoxSize);user.c: 160:                 DataStat
                                 e = DATA_ADDRESS;
  1740                           	movlw	low((_BOX_ADDRESS-__stringbase))
  1741  0059  3001               	movwf	fsr0
  1742  005A  0084               	fcall	stringdir
  1743  005B  2137               	movwf	(??_BitIntr+0)+0
  1744  005C  00A0               	movf	(_Data),w
  1745  005D  082D               	xorwf	(??_BitIntr+0)+0,w
  1746  005E  0620               	skipz
  1747  005F  1D03               	goto	u25_21
  1748  0060  2862               	goto	u25_20
  1749  0061  2863               u25_21:
  1750  0062                     	goto	i1l953
  1751  0062  2868               u25_20:
  1752  0063                     	line	162
  1753                           	
  1754                           i1l951:	
  1755  0063                     ;user.c: 161: ;user.c: 162:         }
  1756                           	clrf	(_Addressed)
  1757  0063  01AB               	incf	(_Addressed),f
  1758  0064  0AAB               	line	163
  1759                           ;user.c: 163:     }
  1760                           	bsf	(59/8),(59)&7	;volatile
  1761  0065  1587               	line	164
  1762                           ;user.c: 164:     else
  1763                           	bcf	(59/8),(59)&7	;volatile
  1764  0066  1187               	line	165
  1765                           ;user.c: 165:     {
  1766                           	goto	i1l955
  1767  0067  286A               	line	166
  1768                           ;user.c: 166: 
  1769                           	
  1770                           i1l94:	
  1771  0068                     	line	168
  1772                           	
  1773                           i1l953:	
  1774  0068                     ;user.c: 167:         BitData = 1;;user.c: 168: 
  1775                           	clrf	(_Addressed)
  1776  0068  01AB               	goto	i1l955
  1777  0069  286A               	line	169
  1778                           ;user.c: 169:         uint8_t Dummy = PORTA;
  1779                           	
  1780                           i1l95:	
  1781  006A                     	line	171
  1782                           	
  1783                           i1l955:	
  1784  006A                     ;user.c: 171:         INTCONbits.RAIE = 0;
  1785                           	movlw	low(02h)
  1786  006A  3002               	movwf	(??_BitIntr+0)+0
  1787  006B  00A0               	movf	(??_BitIntr+0)+0,w
  1788  006C  0820               	movwf	(_DataState)
  1789  006D  00AC               	goto	i1l105
  1790  006E  28BC               	line	172
  1791                           ;user.c: 172:     }
  1792                           	
  1793                           i1l93:	
  1794  006F                     	line	173
  1795                           ;user.c: 173: }
  1796                           	goto	i1l105
  1797  006F  28BC               	line	174
  1798                           ;user.c: 174: 
  1799                           	
  1800                           i1l92:	
  1801  0070                     	
  1802                           i1l957:	
  1803  0070                     		movlw	2
  1804  0070  3002               	xorwf	((_DataState)),w
  1805  0071  062C               	btfss	status,2
  1806  0072  1D03               	goto	u26_21
  1807  0073  2875               	goto	u26_20
  1808  0074  2876               u26_21:
  1809  0075                     	goto	i1l965
  1810  0075  2890               u26_20:
  1811  0076                     	line	177
  1812                           	
  1813                           i1l959:	
  1814  0076                     ;user.c: 175: ;user.c: 177: void SendModule( void)
  1815                           	movlw	low(01h)
  1816  0076  3001               	movwf	(??_BitIntr+0)+0
  1817  0077  00A0               	movf	(??_BitIntr+0)+0,w
  1818  0078  0820               	addwf	(_BitCount),f
  1819  0079  07B2               		movlw	5
  1820  007A  3005               	xorwf	(((_BitCount))),w
  1821  007B  0632               	btfss	status,2
  1822  007C  1D03               	goto	u27_21
  1823  007D  287F               	goto	u27_20
  1824  007E  2880               u27_21:
  1825  007F                     	goto	i1l105
  1826  007F  28BC               u27_20:
  1827  0080                     	line	179
  1828                           	
  1829                           i1l961:	
  1830  0080                     ;user.c: 178: {;user.c: 179: 
  1831                           	movlw	low(01Fh)
  1832  0080  301F               	subwf	(_Data),w
  1833  0081  022D               	skipnc
  1834  0082  1803               	goto	u28_21
  1835  0083  2885               	goto	u28_20
  1836  0084  2886               u28_21:
  1837  0085                     	goto	i1l99
  1838  0085  288A               u28_20:
  1839  0086                     	line	180
  1840                           	
  1841                           i1l963:	
  1842  0086                     ;user.c: 180: }
  1843                           	movf	(_Data),w
  1844  0086  082D               	movwf	(??_BitIntr+0)+0
  1845  0087  00A0               	movf	(??_BitIntr+0)+0,w
  1846  0088  0820               	movwf	(_BoxSize)
  1847  0089  00AF               	
  1848                           i1l99:	
  1849  008A                     	line	182
  1850                           	movlw	low(03h)
  1851  008A  3003               	movwf	(??_BitIntr+0)+0
  1852  008B  00A0               	movf	(??_BitIntr+0)+0,w
  1853  008C  0820               	movwf	(_DataState)
  1854  008D  00AC               	goto	i1l105
  1855  008E  28BC               	line	183
  1856                           	
  1857                           i1l98:	
  1858  008F                     	line	184
  1859                           	goto	i1l105
  1860  008F  28BC               	line	185
  1861                           	
  1862                           i1l97:	
  1863  0090                     	
  1864                           i1l965:	
  1865  0090                     		movlw	3
  1866  0090  3003               	xorwf	((_DataState)),w
  1867  0091  062C               	btfss	status,2
  1868  0092  1D03               	goto	u29_21
  1869  0093  2895               	goto	u29_20
  1870  0094  2896               u29_21:
  1871  0095                     	goto	i1l105
  1872  0095  28BC               u29_20:
  1873  0096                     	line	189
  1874                           	
  1875                           i1l967:	
  1876  0096                     		decf	((_Addressed)),w
  1877  0096  032B               	btfss	status,2
  1878  0097  1D03               	goto	u30_21
  1879  0098  289A               	goto	u30_20
  1880  0099  289B               u30_21:
  1881  009A                     	goto	i1l975
  1882  009A  28A2               u30_20:
  1883  009B                     	line	191
  1884                           	
  1885                           i1l969:	
  1886  009B                     	movf	(_Data),w
  1887  009B  082D               	movwf	(??_BitIntr+0)+0
  1888  009C  00A0               	movf	(??_BitIntr+0)+0,w
  1889  009D  0820               	movwf	(_Lamps)
  1890  009E  00AE               	line	192
  1891                           	
  1892                           i1l971:	
  1893  009F                     	bsf	(61/8),(61)&7	;volatile
  1894  009F  1687               	line	193
  1895                           	
  1896                           i1l973:	
  1897  00A0                     	bcf	(61/8),(61)&7	;volatile
  1898  00A0  1287               	goto	i1l975
  1899  00A1  28A2               	line	194
  1900                           	
  1901                           i1l102:	
  1902  00A2                     	line	196
  1903                           	
  1904                           i1l975:	
  1905  00A2                     	movlw	low(01h)
  1906  00A2  3001               	movwf	(??_BitIntr+0)+0
  1907  00A3  00A0               	movf	(??_BitIntr+0)+0,w
  1908  00A4  0820               	addwf	(_BitCount),f
  1909  00A5  07B2               	movf	((_BitCount)),w
  1910  00A6  0832               	xorwf	(_BoxSize),w
  1911  00A7  062F               	skipz
  1912  00A8  1D03               	goto	u31_21
  1913  00A9  28AB               	goto	u31_20
  1914  00AA  28AC               u31_21:
  1915  00AB                     	goto	i1l105
  1916  00AB  28BC               u31_20:
  1917  00AC                     	line	197
  1918                           	
  1919                           i1l977:	
  1920  00AC                     	clrf	(_DataState)
  1921  00AC  01AC               	incf	(_DataState),f
  1922  00AD  0AAC               	goto	i1l105
  1923  00AE  28BC               	
  1924                           i1l103:	
  1925  00AF                     	goto	i1l105
  1926  00AF  28BC               	line	199
  1927                           	
  1928                           i1l101:	
  1929  00B0                     	goto	i1l105
  1930  00B0  28BC               	
  1931                           i1l100:	
  1932  00B1                     	goto	i1l105
  1933  00B1  28BC               	
  1934                           i1l96:	
  1935  00B2                     	goto	i1l105
  1936  00B2  28BC               	
  1937                           i1l91:	
  1938  00B3                     	line	200
  1939                           	goto	i1l105
  1940  00B3  28BC               	line	201
  1941                           	
  1942                           i1l87:	
  1943  00B4                     	line	204
  1944                           	clrf	(_BitData)
  1945  00B4  01B3               	incf	(_BitData),f
  1946  00B5  0AB3               	line	206
  1947                           	
  1948                           i1l979:	
  1949  00B6                     	movf	(5),w	;volatile
  1950  00B6  0805               	movwf	(??_BitIntr+0)+0
  1951  00B7  00A0               	movf	(??_BitIntr+0)+0,w
  1952  00B8  0820               	movwf	(BitIntr@Dummy)
  1953  00B9  00A1               	line	208
  1954                           	
  1955                           i1l981:	
  1956  00BA                     	bcf	(11),3	;volatile
  1957  00BA  118B               	goto	i1l105
  1958  00BB  28BC               	line	209
  1959                           	
  1960                           i1l104:	
  1961  00BC                     	line	210
  1962                           	
  1963                           i1l105:	
  1964  00BC                     	return
  1965  00BC  0008               	opt stack 0
  1966                           GLOBAL	__end_of_BitIntr
  1967                           	__end_of_BitIntr:
  1968  00BD                     	signat	_BitIntr,89
  1969                           global	___latbits
  1970                           ___latbits	equ	0
  1971  0000                     	global	btemp
  1972                           	btemp set 05Eh
  1973  005E                     
  1974                           	DABS	1,94,2	;btemp
  1975                           	global	wtemp0
  1976                           	wtemp0 set btemp+0
  1977  005E                     	end


Data Sizes:
    Strings     0
    Constant    1
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     11      21

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _Initialise->_BitDataInit

Critical Paths under _ISR in BANK0

    _ISR->_BitIntr

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      69
                         _Initialise
 ---------------------------------------------------------------------------------
 (1) _Initialise                                           0     0      0      69
                        _BitDataInit
                     _StartTickTimer
 ---------------------------------------------------------------------------------
 (4) _StartTickTimer                                       1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _BitDataInit                                          4     4      0      46
                                              7 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0      24
                                              2 BANK0      5     5      0
                            _BitIntr
                           _EdgeIntr
                         _SendModule
                     _StartTickTimer
 ---------------------------------------------------------------------------------
 (4) _StartTickTimer                                       1     1      0      23
 ---------------------------------------------------------------------------------
 (4) _SendModule                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EdgeIntr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _BitIntr                                              2     2      0       1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialise
     _BitDataInit
     _StartTickTimer

 _ISR (ROOT)
   _BitIntr
   _EdgeIntr
   _SendModule
   _StartTickTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      B      15       4       33.9%
ABS                  0      0      15       5        0.0%
DATA                 0      0      15       6        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Oct 26 14:25:27 2018

                      l9 0148                        pc 0002              __CFG_CP$OFF 0000  
                     l10 0148                       l11 0149                       l12 0149  
                     l27 0123                       l80 0108                       l81 010E  
                     l79 00FA                       fsr 0004                      l851 00ED  
                    l861 0100                      l853 00F1                      l863 0104  
                    l855 00F2                      l871 0112                      l865 0106  
                    l857 00F7                      l881 0118                      l873 0114  
                    l859 00FD                      l867 0108                      l891 0120  
                    l883 0119                      l875 0115                      l893 0122  
                    l885 011D                      l877 0116                      l869 010F  
                    l887 011E                      l879 0117                      l983 0145  
                    l889 011F                      l985 0146                      _RA2 002A  
                    _RC1 0039                      _RC3 003B                      _RC4 003C  
                    _RC5 003D                      u180 00F7                      u181 00F6  
           __CFG_CPD$OFF 0000                      _ISR 00BD                      fsr0 0004  
           __CFG_FOSC$EC 0000                     ?_ISR 0020                     i1l90 0048  
                   i1l91 00B3                     i1l92 0070                     i1l84 0144  
                   i1l76 0136                     i1l93 006F                     i1l94 0068  
                   i1l95 006A                     i1l87 00B4                     i1l96 00B2  
                   i1l88 004A                     i1l97 0090                     i1l89 0049  
                   i1l98 008F                     i1l99 008A                     _TMR0 0001  
                   _Data 002D                     _Sync 0031                     _main 0145  
                   btemp 005E                     start 000F          __end_of_BitIntr 00BD  
            _BitDataInit 00EB                    ??_ISR 0022                    ?_main 0020  
          __CFG_WDTE$OFF 0000                    i1l100 00B1                    i1l101 00B0  
                  i1l102 00A2                    i1l103 00AF                    i1l104 00BC  
                  i1l105 00BC                    i1l130 00DF                    i1l108 014A  
                  i1l125 00D3                    i1l126 00CC                    i1l127 00D2  
                  i1l128 00D9                    i1l129 00DF                    i1l901 012B  
                  i1l911 013E                    i1l903 012C                    i1l921 0023  
                  i1l913 013F                    i1l905 012E                    i1l931 0031  
                  i1l923 0027                    i1l915 0142                    i1l907 0130  
                  i1l941 0044                    i1l933 0032                    i1l925 0029  
                  i1l917 0143                    i1l909 0131                    i1l951 0063  
                  i1l943 0045                    i1l935 0033                    i1l927 002A  
                  i1l919 001D                    i1l961 0080                    i1l953 0068  
                  i1l937 0034                    i1l945 004A                    i1l929 002B  
                  i1l971 009F                    i1l963 0086                    i1l955 006A  
                  i1l947 004F                    i1l939 003E                    i1l981 00BA  
                  i1l973 00A0                    i1l965 0090                    i1l949 0059  
                  i1l957 0070                    i1l975 00A2                    i1l967 0096  
                  i1l959 0076                    i1l895 0124                    i1l991 00C2  
                  i1l977 00AC                    i1l969 009B                    i1l897 0129  
                  i1l993 00C9                    i1l979 00B6                    i1l899 012A  
                  i1l995 00CA                    i1l987 00BD                    i1l997 00CC  
                  i1l989 00C1                    i1l999 00D3                    u20_20 0031  
                  u20_21 0030                    u21_20 003E                    u21_21 003D  
                  u30_20 009B                    u22_20 0044                    u30_21 009A  
                  u22_21 0043                    u31_20 00AC                    u23_20 004F  
                  u31_21 00AB                    u23_21 004E                    u24_20 0059  
                  u32_20 00C1                    u24_21 0058                    u32_21 00C0  
                  u25_20 0063                    u33_20 00C9                    u25_21 0062  
                  u33_21 00C8                    _TMR1H 000F                    _TMR1L 000E  
                  u26_20 0076                    u34_20 00D7                    u26_21 0075  
                  u34_21 00D6                    u27_20 0080                    u19_20 0023  
                  u35_20 00DD                    u27_21 007F                    u19_21 0022  
                  u35_21 00DC                    _PORTA 0005                    u28_20 0086  
                  u28_21 0085                    u29_20 0096                    u29_21 0095  
                  _Lamps 002E           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003         __end_of_EdgeIntr 0145                    wtemp0 005E  
         __CFG_MCLRE$OFF 0000          __initialization 0010             __end_of_main 014A  
             _Initialise 010F                   ??_main 0000               _SendModule 014A  
                 i1l1001 00D7                   i1l1003 00D9                   i1l1005 00DD  
              ??_BitIntr 0020         ??_StartTickTimer 0000           __CFG_PWRTE$OFF 0000  
                 saved_w 005E  __end_of__initialization 001B           __pcstackCOMMON 0000  
            ?_Initialise 0020                ?_EdgeIntr 0020        BitDataInit@ModeTx 0029  
            ?_SendModule 0020               __pbssBANK0 002B               __pmaintext 0145  
           ?_BitDataInit 0020               __pintentry 0004               ??_EdgeIntr 0000  
             __stringtab 0137                  _Address 0030                  _BitData 0033  
                _BitIntr 001D      __size_of_Initialise 0015                  _BoxSize 002F  
              _CMCONbits 0019      __size_of_SendModule 0001                  __ptext1 010F  
                __ptext2 00EB                  __ptext3 00BD                  __ptext4 0124  
                __ptext5 014A                  __ptext6 013E                  __ptext7 001D  
   BitDataInit@IntEnable 002A             __size_of_ISR 002E                _T1CONbits 0010  
   end_of_initialization 001B  StartTickTimer@IntEnable 0020                _TRISCbits 0087  
              _Addressed 002B             BitIntr@Dummy 0021                _DataState 002C  
           ??_Initialise 0000     __size_of_BitDataInit 0024      start_initialization 0010  
            __end_of_ISR 00EB        __size_of_EdgeIntr 0007             ??_SendModule 0000  
     __end_of_Initialise 0124                _TickCount 0034      __end_of_BOX_ADDRESS 013E  
__size_of_StartTickTimer 0013       __end_of_SendModule 014B                ___latbits 0000  
          __pcstackBANK0 0020                 ?_BitIntr 0020         BitDataInit@Dummy 0028  
              __pstrings 0137        interrupt_function 0004              _BOX_ADDRESS 013D  
               _IOCAbits 0096              __stringbase 013C                 _EdgeIntr 013E  
               _BitCount 0032         __size_of_BitIntr 00A0           _StartTickTimer 0124  
     __end_of__stringtab 013D            __size_of_main 0005   __end_of_StartTickTimer 0137  
          ??_BitDataInit 0027               _INTCONbits 000B                 intlevel1 0000  
              stringcode 0137          ?_StartTickTimer 0020      __end_of_BitDataInit 010F  
               stringdir 0137                 stringtab 0137  
