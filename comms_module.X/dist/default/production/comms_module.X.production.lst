

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Oct 26 19:54:45 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F630 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   100                           PORTC equ 07h ;# 
   101  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   116                           CMCON equ 019h ;# 
   117  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   118                           OPTION_REG equ 081h ;# 
   119  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   120                           TRISA equ 085h ;# 
   121  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   122                           TRISC equ 087h ;# 
   123  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   124                           PIE1 equ 08Ch ;# 
   125  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   126                           PCON equ 08Eh ;# 
   127  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   128                           OSCCAL equ 090h ;# 
   129  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   130                           WPUA equ 095h ;# 
   131  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   132                           WPU equ 095h ;# 
   133  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   134                           IOCA equ 096h ;# 
   135  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   136                           IOC equ 096h ;# 
   137  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   138                           VRCON equ 099h ;# 
   139  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   140                           EEDAT equ 09Ah ;# 
   141  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   142                           EEDATA equ 09Ah ;# 
   143  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   144                           EEADR equ 09Bh ;# 
   145  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   146                           EECON1 equ 09Ch ;# 
   147  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   148                           EECON2 equ 09Dh ;# 
   149  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   150                           INDF equ 00h ;# 
   151  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   152                           TMR0 equ 01h ;# 
   153  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   154                           PCL equ 02h ;# 
   155  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   156                           STATUS equ 03h ;# 
   157  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   158                           FSR equ 04h ;# 
   159  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   160                           PORTA equ 05h ;# 
   161  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   162                           PORTC equ 07h ;# 
   163  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   164                           PCLATH equ 0Ah ;# 
   165  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   166                           INTCON equ 0Bh ;# 
   167  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   168                           PIR1 equ 0Ch ;# 
   169  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   170                           TMR1 equ 0Eh ;# 
   171  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   172                           TMR1L equ 0Eh ;# 
   173  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   174                           TMR1H equ 0Fh ;# 
   175  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   176                           T1CON equ 010h ;# 
   177  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   178                           CMCON equ 019h ;# 
   179  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   180                           OPTION_REG equ 081h ;# 
   181  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   182                           TRISA equ 085h ;# 
   183  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   184                           TRISC equ 087h ;# 
   185  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   186                           PIE1 equ 08Ch ;# 
   187  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   188                           PCON equ 08Eh ;# 
   189  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   190                           OSCCAL equ 090h ;# 
   191  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   192                           WPUA equ 095h ;# 
   193  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   194                           WPU equ 095h ;# 
   195  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   196                           IOCA equ 096h ;# 
   197  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   198                           IOC equ 096h ;# 
   199  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   200                           VRCON equ 099h ;# 
   201  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   202                           EEDAT equ 09Ah ;# 
   203  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   204                           EEDATA equ 09Ah ;# 
   205  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   206                           EEADR equ 09Bh ;# 
   207  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   208                           EECON1 equ 09Ch ;# 
   209  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   210                           EECON2 equ 09Dh ;# 
   211  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   212                           INDF equ 00h ;# 
   213  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   214                           TMR0 equ 01h ;# 
   215  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   216                           PCL equ 02h ;# 
   217  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   218                           STATUS equ 03h ;# 
   219  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   220                           FSR equ 04h ;# 
   221  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   222                           PORTA equ 05h ;# 
   223  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   224                           PORTC equ 07h ;# 
   225  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   226                           PCLATH equ 0Ah ;# 
   227  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   228                           INTCON equ 0Bh ;# 
   229  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   230                           PIR1 equ 0Ch ;# 
   231  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   232                           TMR1 equ 0Eh ;# 
   233  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   234                           TMR1L equ 0Eh ;# 
   235  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   236                           TMR1H equ 0Fh ;# 
   237  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   238                           T1CON equ 010h ;# 
   239  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   240                           CMCON equ 019h ;# 
   241  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   242                           OPTION_REG equ 081h ;# 
   243  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   244                           TRISA equ 085h ;# 
   245  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   246                           TRISC equ 087h ;# 
   247  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   248                           PIE1 equ 08Ch ;# 
   249  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   250                           PCON equ 08Eh ;# 
   251  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   252                           OSCCAL equ 090h ;# 
   253  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   254                           WPUA equ 095h ;# 
   255  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   256                           WPU equ 095h ;# 
   257  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   258                           IOCA equ 096h ;# 
   259  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   260                           IOC equ 096h ;# 
   261  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   262                           VRCON equ 099h ;# 
   263  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   264                           EEDAT equ 09Ah ;# 
   265  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   266                           EEDATA equ 09Ah ;# 
   267  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   268                           EEADR equ 09Bh ;# 
   269  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   270                           EECON1 equ 09Ch ;# 
   271  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   272                           EECON2 equ 09Dh ;# 
   273  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   274                           INDF equ 00h ;# 
   275  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   276                           TMR0 equ 01h ;# 
   277  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   278                           PCL equ 02h ;# 
   279  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   280                           STATUS equ 03h ;# 
   281  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   282                           FSR equ 04h ;# 
   283  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   284                           PORTA equ 05h ;# 
   285  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   286                           PORTC equ 07h ;# 
   287  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   288                           PCLATH equ 0Ah ;# 
   289  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   290                           INTCON equ 0Bh ;# 
   291  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   292                           PIR1 equ 0Ch ;# 
   293  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   294                           TMR1 equ 0Eh ;# 
   295  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   296                           TMR1L equ 0Eh ;# 
   297  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   298                           TMR1H equ 0Fh ;# 
   299  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   300                           T1CON equ 010h ;# 
   301  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   302                           CMCON equ 019h ;# 
   303  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   304                           OPTION_REG equ 081h ;# 
   305  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   306                           TRISA equ 085h ;# 
   307  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   308                           TRISC equ 087h ;# 
   309  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   310                           PIE1 equ 08Ch ;# 
   311  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   312                           PCON equ 08Eh ;# 
   313  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   314                           OSCCAL equ 090h ;# 
   315  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   316                           WPUA equ 095h ;# 
   317  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   318                           WPU equ 095h ;# 
   319  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   320                           IOCA equ 096h ;# 
   321  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   322                           IOC equ 096h ;# 
   323  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   324                           VRCON equ 099h ;# 
   325  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   326                           EEDAT equ 09Ah ;# 
   327  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   328                           EEDATA equ 09Ah ;# 
   329  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   330                           EEADR equ 09Bh ;# 
   331  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   332                           EECON1 equ 09Ch ;# 
   333  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   334                           EECON2 equ 09Dh ;# 
   335  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   336                           INDF equ 00h ;# 
   337  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   338                           TMR0 equ 01h ;# 
   339  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   340                           PCL equ 02h ;# 
   341  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   342                           STATUS equ 03h ;# 
   343  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   344                           FSR equ 04h ;# 
   345  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   346                           PORTA equ 05h ;# 
   347  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   348                           PORTC equ 07h ;# 
   349  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   350                           PCLATH equ 0Ah ;# 
   351  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   352                           INTCON equ 0Bh ;# 
   353  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   354                           PIR1 equ 0Ch ;# 
   355  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   364                           CMCON equ 019h ;# 
   365  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   366                           OPTION_REG equ 081h ;# 
   367  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   368                           TRISA equ 085h ;# 
   369  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   370                           TRISC equ 087h ;# 
   371  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   372                           PIE1 equ 08Ch ;# 
   373  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   374                           PCON equ 08Eh ;# 
   375  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   376                           OSCCAL equ 090h ;# 
   377  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   378                           WPUA equ 095h ;# 
   379  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   380                           WPU equ 095h ;# 
   381  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   382                           IOCA equ 096h ;# 
   383  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   384                           IOC equ 096h ;# 
   385  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   386                           VRCON equ 099h ;# 
   387  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   388                           EEDAT equ 09Ah ;# 
   389  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   390                           EEDATA equ 09Ah ;# 
   391  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   392                           EEADR equ 09Bh ;# 
   393  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   394                           EECON1 equ 09Ch ;# 
   395  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   396                           EECON2 equ 09Dh ;# 
   397  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   398                           INDF equ 00h ;# 
   399  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   400                           TMR0 equ 01h ;# 
   401  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   402                           PCL equ 02h ;# 
   403  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   404                           STATUS equ 03h ;# 
   405  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   406                           FSR equ 04h ;# 
   407  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   408                           PORTA equ 05h ;# 
   409  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   410                           PORTC equ 07h ;# 
   411  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   412                           PCLATH equ 0Ah ;# 
   413  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   414                           INTCON equ 0Bh ;# 
   415  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   416                           PIR1 equ 0Ch ;# 
   417  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   418                           TMR1 equ 0Eh ;# 
   419  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   420                           TMR1L equ 0Eh ;# 
   421  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   422                           TMR1H equ 0Fh ;# 
   423  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   424                           T1CON equ 010h ;# 
   425  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   426                           CMCON equ 019h ;# 
   427  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   428                           OPTION_REG equ 081h ;# 
   429  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   430                           TRISA equ 085h ;# 
   431  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   432                           TRISC equ 087h ;# 
   433  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   434                           PIE1 equ 08Ch ;# 
   435  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   436                           PCON equ 08Eh ;# 
   437  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   438                           OSCCAL equ 090h ;# 
   439  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   440                           WPUA equ 095h ;# 
   441  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   442                           WPU equ 095h ;# 
   443  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   444                           IOCA equ 096h ;# 
   445  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   446                           IOC equ 096h ;# 
   447  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   448                           VRCON equ 099h ;# 
   449  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   450                           EEDAT equ 09Ah ;# 
   451  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   452                           EEDATA equ 09Ah ;# 
   453  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   454                           EEADR equ 09Bh ;# 
   455  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   456                           EECON1 equ 09Ch ;# 
   457  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   458                           EECON2 equ 09Dh ;# 
   459  009D                     	FNCALL	_main,_Initialise
   460                           	FNCALL	_Initialise,_BitDataInit
   461                           	FNCALL	_Initialise,_StartTickTimer
   462                           	FNROOT	_main
   463                           	FNCALL	_ISR,_BitIntr
   464                           	FNCALL	_ISR,_EdgeIntr
   465                           	FNCALL	_ISR,_SendModule
   466                           	FNCALL	_ISR,_StartTickTimer
   467                           	FNCALL	intlevel1,_ISR
   468                           	global	intlevel1
   469                           	FNROOT	intlevel1
   470                           	global	_BOX_ADDRESS
   471                           psect	strings,class=STRING,delta=2,noexec
   472                           global __pstrings
   473                           __pstrings:
   474  0141                     stringtab:
   475  0141                     	global    __stringtab
   476                           __stringtab:
   477  0141                     ;	String table - string pointers are 1 byte each
   478                           stringcode:stringdir:
   479  0141                     movlw high(stringdir)
      + 0141                     stringdir:	
   480  0141  3001               movwf pclath
   481  0142  008A               movf fsr,w
   482  0143  0804               incf fsr
   483  0144  0A84               	addwf pc
   484  0145  0782               	global __stringbase
   485                           __stringbase:
   486  0146                     	retlw	0
   487  0146  3400               psect	strings
   488                           	global    __end_of__stringtab
   489                           __end_of__stringtab:
   490  0147                     	file	"user.c"
   491                           	line	14
   492                           _BOX_ADDRESS:
   493  0147                     	retlw	low(0)
   494  0147  3400               	global __end_of_BOX_ADDRESS
   495                           __end_of_BOX_ADDRESS:
   496  0148                     	global	_BOX_ADDRESS
   497                           	global	_Addressed
   498                           	global	_DataState
   499                           	global	_Data
   500                           	global	_Lamps
   501                           	global	_BoxSize
   502                           	global	_BitCount
   503                           	global	_BitData
   504                           	global	_TickCount
   505                           	global	_TMR0
   506                           _TMR0	set	0x1
   507  0001                     	global	_PORTA
   508                           _PORTA	set	0x5
   509  0005                     	global	_TMR1L
   510                           _TMR1L	set	0xE
   511  000E                     	global	_TMR1H
   512                           _TMR1H	set	0xF
   513  000F                     	global	_PIR1bits
   514                           _PIR1bits	set	0xC
   515  000C                     	global	_T1CONbits
   516                           _T1CONbits	set	0x10
   517  0010                     	global	_CMCONbits
   518                           _CMCONbits	set	0x19
   519  0019                     	global	_INTCONbits
   520                           _INTCONbits	set	0xB
   521  000B                     	global	_RC5
   522                           _RC5	set	0x3D
   523  003D                     	global	_RA2
   524                           _RA2	set	0x2A
   525  002A                     	global	_RC3
   526                           _RC3	set	0x3B
   527  003B                     	global	_RC4
   528                           _RC4	set	0x3C
   529  003C                     	global	_RC1
   530                           _RC1	set	0x39
   531  0039                     	global	_IOCAbits
   532                           _IOCAbits	set	0x96
   533  0096                     	global	_OPTION_REGbits
   534                           _OPTION_REGbits	set	0x81
   535  0081                     	global	_TRISCbits
   536                           _TRISCbits	set	0x87
   537  0087                     	global	_TRISAbits
   538                           _TRISAbits	set	0x85
   539  0085                     ; #config settings
   540                           global __CFG_FOSC$EC
   541                           __CFG_FOSC$EC equ 0x0
   542  0000                     global __CFG_WDTE$OFF
   543                           __CFG_WDTE$OFF equ 0x0
   544  0000                     global __CFG_PWRTE$OFF
   545                           __CFG_PWRTE$OFF equ 0x0
   546  0000                     global __CFG_MCLRE$OFF
   547                           __CFG_MCLRE$OFF equ 0x0
   548  0000                     global __CFG_BOREN$OFF
   549                           __CFG_BOREN$OFF equ 0x0
   550  0000                     global __CFG_CP$OFF
   551                           __CFG_CP$OFF equ 0x0
   552  0000                     global __CFG_CPD$OFF
   553                           __CFG_CPD$OFF equ 0x0
   554  0000                     	file	"C:\Users\abaker\AppData\Local\Temp\s2rk."
   555                           	line	#
   556                           psect cinit,class=CODE,delta=2
   557                           global start_initialization
   558                           start_initialization:
   559  0010                     
   560                           global __initialization
   561                           __initialization:
   562  0010                     psect	bssBANK0,class=BANK0,space=1,noexec
   563                           global __pbssBANK0
   564                           __pbssBANK0:
   565  002B                     _Addressed:
   566  002B                            ds      1
   567  002B                     
   568                           _DataState:
   569  002C                            ds      1
   570  002C                     
   571                           _Data:
   572  002D                            ds      1
   573  002D                     
   574                           _Lamps:
   575  002E                            ds      1
   576  002E                     
   577                           _BoxSize:
   578  002F                            ds      1
   579  002F                     
   580                           _Address:
   581  0030                            ds      1
   582  0030                     
   583                           _Sync:
   584  0031                            ds      1
   585  0031                     
   586                           _BitCount:
   587  0032                            ds      1
   588  0032                     
   589                           _BitData:
   590  0033                            ds      1
   591  0033                     
   592                           _TickCount:
   593  0034                            ds      1
   594  0034                     
   595                           	file	"C:\Users\abaker\AppData\Local\Temp\s2rk."
   596                           	line	#
   597                           ; Clear objects allocated to BANK0
   598                           psect cinit,class=CODE,delta=2,merge=1
   599                           	bcf	status, 5	;RP0=0, select bank0
   600  0010  1283               	clrf	((__pbssBANK0)+0)&07Fh
   601  0011  01AB               	clrf	((__pbssBANK0)+1)&07Fh
   602  0012  01AC               	clrf	((__pbssBANK0)+2)&07Fh
   603  0013  01AD               	clrf	((__pbssBANK0)+3)&07Fh
   604  0014  01AE               	clrf	((__pbssBANK0)+4)&07Fh
   605  0015  01AF               	clrf	((__pbssBANK0)+5)&07Fh
   606  0016  01B0               	clrf	((__pbssBANK0)+6)&07Fh
   607  0017  01B1               	clrf	((__pbssBANK0)+7)&07Fh
   608  0018  01B2               	clrf	((__pbssBANK0)+8)&07Fh
   609  0019  01B3               	clrf	((__pbssBANK0)+9)&07Fh
   610  001A  01B4               psect cinit,class=CODE,delta=2,merge=1
   611                           global end_of_initialization,__end_of__initialization
   612                           
   613                           ;End of C runtime variable initialization code
   614                           
   615                           end_of_initialization:
   616  001B                     __end_of__initialization:
   617  001B                     clrf status
   618  001B  0183               ljmp _main	;jump to C main() function
   619  001C  2948               psect	cstackCOMMON,class=COMMON,space=1,noexec
   620                           global __pcstackCOMMON
   621                           __pcstackCOMMON:
   622  0000                     ??_Initialise:	; 1 bytes @ 0x0
   623  0000                     ??_StartTickTimer:	; 1 bytes @ 0x0
   624  0000                     ??_main:	; 1 bytes @ 0x0
   625  0000                     ??_EdgeIntr:	; 1 bytes @ 0x0
   626  0000                     ??_SendModule:	; 1 bytes @ 0x0
   627  0000                     psect	cstackBANK0,class=BANK0,space=1,noexec
   628                           global __pcstackBANK0
   629                           __pcstackBANK0:
   630  0020                     ?_Initialise:	; 1 bytes @ 0x0
   631  0020                     ?_StartTickTimer:	; 1 bytes @ 0x0
   632  0020                     ?_BitDataInit:	; 1 bytes @ 0x0
   633  0020                     ?_main:	; 1 bytes @ 0x0
   634  0020                     ?_EdgeIntr:	; 1 bytes @ 0x0
   635  0020                     ?_BitIntr:	; 1 bytes @ 0x0
   636  0020                     ??_BitIntr:	; 1 bytes @ 0x0
   637  0020                     ?_SendModule:	; 1 bytes @ 0x0
   638  0020                     ?_ISR:	; 1 bytes @ 0x0
   639  0020                     	global	StartTickTimer@IntEnable
   640                           StartTickTimer@IntEnable:	; 1 bytes @ 0x0
   641  0020                     	ds	1
   642  0020                     	global	BitIntr@Dummy
   643                           BitIntr@Dummy:	; 1 bytes @ 0x1
   644  0021                     	ds	1
   645  0021                     ??_ISR:	; 1 bytes @ 0x2
   646  0022                     	ds	5
   647  0022                     ??_BitDataInit:	; 1 bytes @ 0x7
   648  0027                     	ds	1
   649  0027                     	global	BitDataInit@Dummy
   650                           BitDataInit@Dummy:	; 1 bytes @ 0x8
   651  0028                     	ds	1
   652  0028                     	global	BitDataInit@ModeTx
   653                           BitDataInit@ModeTx:	; 1 bytes @ 0x9
   654  0029                     	ds	1
   655  0029                     	global	BitDataInit@IntEnable
   656                           BitDataInit@IntEnable:	; 1 bytes @ 0xA
   657  002A                     	ds	1
   658  002A                     ;!
   659                           ;!Data Sizes:
   660                           ;!    Strings     0
   661                           ;!    Constant    1
   662                           ;!    Data        0
   663                           ;!    BSS         10
   664                           ;!    Persistent  0
   665                           ;!    Stack       0
   666                           ;!
   667                           ;!Auto Spaces:
   668                           ;!    Space          Size  Autos    Used
   669                           ;!    COMMON            0      0       0
   670                           ;!    BANK0            62     11      21
   671                           
   672                           ;!
   673                           ;!Pointer List with Targets:
   674                           ;!
   675                           ;!    None.
   676                           
   677                           
   678                           ;!
   679                           ;!Critical Paths under _main in COMMON
   680                           ;!
   681                           ;!    None.
   682                           ;!
   683                           ;!Critical Paths under _ISR in COMMON
   684                           ;!
   685                           ;!    None.
   686                           ;!
   687                           ;!Critical Paths under _main in BANK0
   688                           ;!
   689                           ;!    _Initialise->_BitDataInit
   690                           ;!
   691                           ;!Critical Paths under _ISR in BANK0
   692                           ;!
   693                           ;!    _ISR->_BitIntr
   694                           
   695 ;;
   696 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   697 ;;
   698                           
   699                           ;!
   700                           ;!Call Graph Tables:
   701                           ;!
   702                           ;! ---------------------------------------------------------------------------------
   703                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   704                           ;! ---------------------------------------------------------------------------------
   705                           ;! (0) _main                                                 0     0      0      69
   706                           ;!                         _Initialise
   707                           ;! ---------------------------------------------------------------------------------
   708                           ;! (1) _Initialise                                           0     0      0      69
   709                           ;!                        _BitDataInit
   710                           ;!                     _StartTickTimer
   711                           ;! ---------------------------------------------------------------------------------
   712                           ;! (4) _StartTickTimer                                       1     1      0      23
   713                           ;! ---------------------------------------------------------------------------------
   714                           ;! (2) _BitDataInit                                          4     4      0      46
   715                           ;!                                              7 BANK0      4     4      0
   716                           ;! ---------------------------------------------------------------------------------
   717                           ;! Estimated maximum stack depth 4
   718                           ;! ---------------------------------------------------------------------------------
   719                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   720                           ;! ---------------------------------------------------------------------------------
   721                           ;! (3) _ISR                                                  5     5      0      24
   722                           ;!                                              2 BANK0      5     5      0
   723                           ;!                            _BitIntr
   724                           ;!                           _EdgeIntr
   725                           ;!                         _SendModule
   726                           ;!                     _StartTickTimer
   727                           ;! ---------------------------------------------------------------------------------
   728                           ;! (4) _StartTickTimer                                       1     1      0      23
   729                           ;! ---------------------------------------------------------------------------------
   730                           ;! (4) _SendModule                                           0     0      0       0
   731                           ;! ---------------------------------------------------------------------------------
   732                           ;! (4) _EdgeIntr                                             0     0      0       0
   733                           ;! ---------------------------------------------------------------------------------
   734                           ;! (5) _BitIntr                                              2     2      0       1
   735                           ;!                                              0 BANK0      2     2      0
   736                           ;! ---------------------------------------------------------------------------------
   737                           ;! Estimated maximum stack depth 5
   738                           ;! ---------------------------------------------------------------------------------
   739                           ;!
   740                           ;! Call Graph Graphs:
   741                           ;!
   742                           ;! _main (ROOT)
   743                           ;!   _Initialise
   744                           ;!     _BitDataInit
   745                           ;!     _StartTickTimer
   746                           ;!
   747                           ;! _ISR (ROOT)
   748                           ;!   _BitIntr
   749                           ;!   _EdgeIntr
   750                           ;!   _SendModule
   751                           ;!   _StartTickTimer
   752                           ;!
   753                           
   754                           ;! Address spaces:
   755                           
   756                           ;!Name               Size   Autos  Total    Cost      Usage
   757                           ;!BITCOMMON            0      0       0       0        0.0%
   758                           ;!EEDATA              80      0       0       0        0.0%
   759                           ;!NULL                 0      0       0       0        0.0%
   760                           ;!CODE                 0      0       0       0        0.0%
   761                           ;!BITSFR0              0      0       0       1        0.0%
   762                           ;!SFR0                 0      0       0       1        0.0%
   763                           ;!COMMON               0      0       0       1        0.0%
   764                           ;!BITSFR1              0      0       0       2        0.0%
   765                           ;!SFR1                 0      0       0       2        0.0%
   766                           ;!STACK                0      0       0       2        0.0%
   767                           ;!BITBANK0            3E      0       0       3        0.0%
   768                           ;!BANK0               3E      B      15       4       33.9%
   769                           ;!ABS                  0      0      15       5        0.0%
   770                           ;!DATA                 0      0      15       6        0.0%
   771                           
   772                           	global	_main
   773                           
   774 ;; *************** function _main *****************
   775 ;; Defined at:
   776 ;;		line 7 in file "main.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,2, status,0, pclath, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : B00/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0
   790 ;;      Params:         0       0
   791 ;;      Locals:         0       0
   792 ;;      Temps:          0       0
   793 ;;      Totals:         0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels required when called:    5
   796 ;; This function calls:
   797 ;;		_Initialise
   798 ;; This function is called by:
   799 ;;		Startup code after reset
   800 ;; This function uses a non-reentrant model
   801 ;;
   802                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   803                           	file	"main.c"
   804                           	line	7
   805                           global __pmaintext
   806                           __pmaintext:	;psect for function _main
   807  0148                     psect	maintext
   808                           	file	"main.c"
   809                           	line	7
   810                           	global	__size_of_main
   811                           	__size_of_main	equ	__end_of_main-_main
   812  0004                     	
   813                           _main:	
   814  0148                     ;incstack = 0
   815                           	opt	stack 3
   816                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   817                           	line	9
   818                           	
   819                           l999:	
   820  0148                     ;main.c: 9:     Initialise();
   821                           	fcall	_Initialise
   822  0148  210D               	line	12
   823                           	
   824                           l1001:	
   825  0149                     ;main.c: 12:     INTCONbits.GIE = 1;
   826                           	bsf	(11),7	;volatile
   827  0149  178B               	line	14
   828                           ;main.c: 14:     while(1)
   829                           	
   830                           l9:	
   831  014A                     	line	17
   832                           ;main.c: 15:     {;main.c: 17:     }
   833                           	
   834                           l10:	
   835  014A                     	goto	l9
   836  014A  294A               	
   837                           l11:	
   838  014B                     	line	19
   839                           	
   840                           l12:	
   841  014B                     	global	start
   842                           	ljmp	start
   843  014B  280F               	opt stack 0
   844                           GLOBAL	__end_of_main
   845                           	__end_of_main:
   846  014C                     	signat	_main,89
   847                           	global	_Initialise
   848                           
   849 ;; *************** function _Initialise *****************
   850 ;; Defined at:
   851 ;;		line 14 in file "system.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;                  1    wreg      void 
   858 ;; Registers used:
   859 ;;		wreg, status,2, status,0, pclath, cstack
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0
   865 ;;      Params:         0       0
   866 ;;      Locals:         0       0
   867 ;;      Temps:          0       0
   868 ;;      Totals:         0       0
   869 ;;Total ram usage:        0 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; Hardware stack levels required when called:    4
   872 ;; This function calls:
   873 ;;		_BitDataInit
   874 ;;		_StartTickTimer
   875 ;; This function is called by:
   876 ;;		_main
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   880                           	file	"system.c"
   881                           	line	14
   882                           global __ptext1
   883                           __ptext1:	;psect for function _Initialise
   884  010D                     psect	text1
   885                           	file	"system.c"
   886                           	line	14
   887                           	global	__size_of_Initialise
   888                           	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
   889  0018                     	
   890                           _Initialise:	
   891  010D                     ;incstack = 0
   892                           	opt	stack 3
   893                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
   894                           	line	18
   895                           	
   896                           l883:	
   897  010D                     ;system.c: 18:     CMCONbits.CM = 7;
   898                           	movlw	(07h & ((1<<3)-1))<<0
   899  010D  3007               	bcf	status, 5	;RP0=0, select bank0
   900  010E  1283               	iorwf	(25),f	;volatile
   901  010F  0499               	line	20
   902                           	
   903                           l885:	
   904  0110                     ;system.c: 20:     TRISAbits.TRISA2 = 1;
   905                           	bsf	status, 5	;RP0=1, select bank1
   906  0110  1683               	bsf	(133)^080h,2	;volatile
   907  0111  1505               	line	24
   908                           	
   909                           l887:	
   910  0112                     ;system.c: 24:     TRISCbits.TRISC1 = 0;
   911                           	bcf	(135)^080h,1	;volatile
   912  0112  1087               	line	25
   913                           	
   914                           l889:	
   915  0113                     ;system.c: 25:     TRISCbits.TRISC2 = 0;
   916                           	bcf	(135)^080h,2	;volatile
   917  0113  1107               	line	26
   918                           	
   919                           l891:	
   920  0114                     ;system.c: 26:     TRISCbits.TRISC3 = 0;
   921                           	bcf	(135)^080h,3	;volatile
   922  0114  1187               	line	27
   923                           	
   924                           l893:	
   925  0115                     ;system.c: 27:     TRISCbits.TRISC4 = 0;
   926                           	bcf	(135)^080h,4	;volatile
   927  0115  1207               	line	28
   928                           	
   929                           l895:	
   930  0116                     ;system.c: 28:     TRISCbits.TRISC5 = 0;
   931                           	bcf	(135)^080h,5	;volatile
   932  0116  1287               	line	31
   933                           	
   934                           l897:	
   935  0117                     ;system.c: 31:     T1CONbits.TMR1CS = 0;
   936                           	bcf	status, 5	;RP0=0, select bank0
   937  0117  1283               	bcf	(16),1	;volatile
   938  0118  1090               	line	32
   939                           ;system.c: 32:     T1CONbits.T1CKPS = 0;
   940                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
   941  0119  30CF               	andwf	(16),f	;volatile
   942  011A  0590               	line	33
   943                           	
   944                           l899:	
   945  011B                     ;system.c: 33:     T1CONbits.nT1SYNC = 1;
   946                           	bsf	(16),2	;volatile
   947  011B  1510               	line	34
   948                           	
   949                           l901:	
   950  011C                     ;system.c: 34:     T1CONbits.TMR1GE = 0;
   951                           	bcf	(16),6	;volatile
   952  011C  1310               	line	37
   953                           	
   954                           l903:	
   955  011D                     ;system.c: 37:     StartTickTimer();
   956                           	fcall	_StartTickTimer
   957  011D  2125               	line	40
   958                           	
   959                           l905:	
   960  011E                     ;system.c: 40:     OPTION_REGbits.T0CS = 0;
   961                           	bsf	status, 5	;RP0=1, select bank1
   962  011E  1683               	bcf	(129)^080h,5	;volatile
   963  011F  1281               	line	41
   964                           	
   965                           l907:	
   966  0120                     ;system.c: 41:     OPTION_REGbits.PSA = 1;
   967                           	bsf	(129)^080h,3	;volatile
   968  0120  1581               	line	44
   969                           	
   970                           l909:	
   971  0121                     ;system.c: 44:     BitDataInit( 0);
   972                           	movlw	low(0)
   973  0121  3000               	fcall	_BitDataInit
   974  0122  20E9               	line	47
   975                           	
   976                           l911:	
   977  0123                     ;system.c: 47:     INTCONbits.PEIE = 1;
   978                           	bsf	(11),6	;volatile
   979  0123  170B               	line	48
   980                           	
   981                           l31:	
   982  0124                     	return
   983  0124  0008               	opt stack 0
   984                           GLOBAL	__end_of_Initialise
   985                           	__end_of_Initialise:
   986  0125                     	signat	_Initialise,89
   987                           	global	_BitDataInit
   988                           
   989 ;; *************** function _BitDataInit *****************
   990 ;; Defined at:
   991 ;;		line 58 in file "user.c"
   992 ;; Parameters:    Size  Location     Type
   993 ;;  ModeTx          1    wreg     unsigned char 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  ModeTx          1    9[BANK0 ] unsigned char 
   996 ;;  IntEnable       1   10[BANK0 ] unsigned char 
   997 ;;  Dummy           1    8[BANK0 ] unsigned char 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0
  1007 ;;      Params:         0       0
  1008 ;;      Locals:         0       3
  1009 ;;      Temps:          0       1
  1010 ;;      Totals:         0       4
  1011 ;;Total ram usage:        4 bytes
  1012 ;; Hardware stack levels used:    1
  1013 ;; Hardware stack levels required when called:    3
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_Initialise
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1021                           	file	"user.c"
  1022                           	line	58
  1023                           global __ptext2
  1024                           __ptext2:	;psect for function _BitDataInit
  1025  00E9                     psect	text2
  1026                           	file	"user.c"
  1027                           	line	58
  1028                           	global	__size_of_BitDataInit
  1029                           	__size_of_BitDataInit	equ	__end_of_BitDataInit-_BitDataInit
  1030  0024                     	
  1031                           _BitDataInit:	
  1032  00E9                     ;incstack = 0
  1033                           	opt	stack 3
  1034                           ; Regs used in _BitDataInit: [wreg+status,2+status,0]
  1035                           ;BitDataInit@ModeTx stored from wreg
  1036                           	bcf	status, 5	;RP0=0, select bank0
  1037  00E9  1283               	movwf	(BitDataInit@ModeTx)
  1038  00EA  00A9               	line	64
  1039                           	
  1040                           l865:	
  1041  00EB                     ;user.c: 58:     INTCONbits.GIE = IntEnable;;user.c: 59: };user.c: 60: ;user.c: 61: ;use
                                 r.c: 64: {
  1042                           	movlw	0
  1043  00EB  3000               	btfsc	(11),7	;volatile
  1044  00EC  1B8B               	movlw	1
  1045  00ED  3001               	movwf	(BitDataInit@IntEnable)
  1046  00EE  00AA               	line	65
  1047                           	
  1048                           l867:	
  1049  00EF                     ;user.c: 65: 
  1050                           	bcf	(11),7	;volatile
  1051  00EF  138B               	line	67
  1052                           	
  1053                           l869:	
  1054  00F0                     ;user.c: 67: 
  1055                           		decf	((BitDataInit@ModeTx)),w
  1056  00F0  0329               	btfss	status,2
  1057  00F1  1D03               	goto	u181
  1058  00F2  28F4               	goto	u180
  1059  00F3  28F5               u181:
  1060  00F4                     	goto	l85
  1061  00F4  28F8               u180:
  1062  00F5                     	line	70
  1063                           	
  1064                           l871:	
  1065  00F5                     ;user.c: 68:     RC4=1;;user.c: 70: 
  1066                           	bsf	(11),3	;volatile
  1067  00F5  158B               	line	73
  1068                           ;user.c: 73: 
  1069                           	bsf	(57/8),(57)&7	;volatile
  1070  00F6  1487               	line	74
  1071                           ;user.c: 74:     INTCONbits.T0IF = 0;
  1072                           	goto	l881
  1073  00F7  2906               	line	75
  1074                           ;user.c: 75:     INTCONbits.T0IE = 1;
  1075                           	
  1076                           l85:	
  1077  00F8                     	line	78
  1078                           ;user.c: 76: };user.c: 78: 
  1079                           	bcf	(57/8),(57)&7	;volatile
  1080  00F8  1087               	line	81
  1081                           ;user.c: 81: void BitIntr( void)
  1082                           	clrf	(_BitData)
  1083  00F9  01B3               	incf	(_BitData),f
  1084  00FA  0AB3               	line	82
  1085                           	
  1086                           l873:	
  1087  00FB                     ;user.c: 82: {
  1088                           	clrf	(_DataState)
  1089  00FB  01AC               	line	83
  1090                           ;user.c: 83:     RC3=1;
  1091                           	clrf	(_Data)
  1092  00FC  01AD               	line	84
  1093                           ;user.c: 84:     RC3=0;
  1094                           	clrf	(_Addressed)
  1095  00FD  01AB               	line	87
  1096                           	
  1097                           l875:	
  1098  00FE                     ;user.c: 87:     {
  1099                           	movf	(5),w	;volatile
  1100  00FE  0805               	movwf	(??_BitDataInit+0)+0
  1101  00FF  00A7               	movf	(??_BitDataInit+0)+0,w
  1102  0100  0827               	movwf	(BitDataInit@Dummy)
  1103  0101  00A8               	line	90
  1104                           	
  1105                           l877:	
  1106  0102                     ;user.c: 90:         Data = (Data<<1) | RA2;
  1107                           	bsf	status, 5	;RP0=1, select bank1
  1108  0102  1683               	bsf	(150)^080h,2	;volatile
  1109  0103  1516               	line	91
  1110                           	
  1111                           l879:	
  1112  0104                     ;user.c: 91: 
  1113                           	bsf	(11),3	;volatile
  1114  0104  158B               	goto	l881
  1115  0105  2906               	line	92
  1116                           ;user.c: 92: 
  1117                           	
  1118                           l86:	
  1119  0106                     	line	95
  1120                           	
  1121                           l881:	
  1122  0106                     ;user.c: 95:         TMR0 = 156;
  1123                           	bcf	status, 5	;RP0=0, select bank0
  1124  0106  1283               	rrf	(BitDataInit@IntEnable),w
  1125  0107  0C2A               	skipc
  1126  0108  1C03               	bcf	(11),7	;volatile
  1127  0109  138B               	skipnc
  1128  010A  1803               	bsf	(11),7	;volatile
  1129  010B  178B               	line	96
  1130                           	
  1131                           l87:	
  1132  010C                     	return
  1133  010C  0008               	opt stack 0
  1134                           GLOBAL	__end_of_BitDataInit
  1135                           	__end_of_BitDataInit:
  1136  010D                     	signat	_BitDataInit,4217
  1137                           	global	_ISR
  1138                           
  1139 ;; *************** function _ISR *****************
  1140 ;; Defined at:
  1141 ;;		line 16 in file "interrupts.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0
  1155 ;;      Params:         0       0
  1156 ;;      Locals:         0       0
  1157 ;;      Temps:          0       5
  1158 ;;      Totals:         0       5
  1159 ;;Total ram usage:        5 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; Hardware stack levels required when called:    2
  1162 ;; This function calls:
  1163 ;;		_BitIntr
  1164 ;;		_EdgeIntr
  1165 ;;		_SendModule
  1166 ;;		_StartTickTimer
  1167 ;; This function is called by:
  1168 ;;		Interrupt level 1
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1172                           	file	"interrupts.c"
  1173                           	line	16
  1174                           global __ptext3
  1175                           __ptext3:	;psect for function _ISR
  1176  00BB                     psect	text3
  1177                           	file	"interrupts.c"
  1178                           	line	16
  1179                           	global	__size_of_ISR
  1180                           	__size_of_ISR	equ	__end_of_ISR-_ISR
  1181  002E                     	
  1182                           _ISR:	
  1183  00BB                     ;incstack = 0
  1184                           	opt	stack 3
  1185                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1186                           psect	intentry,class=CODE,delta=2
  1187                           global __pintentry
  1188                           __pintentry:
  1189  0004                     global interrupt_function
  1190                           interrupt_function:
  1191  0004                     	global saved_w
  1192                           	saved_w	set	btemp+0
  1193  005E                     	movwf	saved_w
  1194  0004  00DE               	swapf	status,w
  1195  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  1196  0006  1283               	movwf	(??_ISR+1)
  1197  0007  00A3               	movf	fsr0,w
  1198  0008  0804               	movwf	(??_ISR+2)
  1199  0009  00A4               	movf	pclath,w
  1200  000A  080A               	movwf	(??_ISR+3)
  1201  000B  00A5               	movf	btemp+1,w
  1202  000C  085F               	movwf	(??_ISR+4)
  1203  000D  00A6               	ljmp	_ISR
  1204  000E  28BB               psect	text3
  1205                           	line	19
  1206                           	
  1207                           i1l1003:	
  1208  00BB                     ;interrupts.c: 19:     if (PIR1bits.TMR1IF==1)
  1209                           	btfss	(12),0	;volatile
  1210  00BB  1C0C               	goto	u32_21
  1211  00BC  28BE               	goto	u32_20
  1212  00BD  28BF               u32_21:
  1213  00BE                     	goto	i1l1015
  1214  00BE  28D1               u32_20:
  1215  00BF                     	line	21
  1216                           	
  1217                           i1l1005:	
  1218  00BF                     ;interrupts.c: 20:     {;interrupts.c: 21:         StartTickTimer();
  1219                           	fcall	_StartTickTimer
  1220  00BF  2125               	line	24
  1221                           	
  1222                           i1l1007:	
  1223  00C0                     ;interrupts.c: 24:         if (TickCount==9)
  1224                           		movlw	9
  1225  00C0  3009               	bcf	status, 5	;RP0=0, select bank0
  1226  00C1  1283               	xorwf	((_TickCount)),w
  1227  00C2  0634               	btfss	status,2
  1228  00C3  1D03               	goto	u33_21
  1229  00C4  28C6               	goto	u33_20
  1230  00C5  28C7               u33_21:
  1231  00C6                     	goto	i1l1013
  1232  00C6  28CA               u33_20:
  1233  00C7                     	line	26
  1234                           	
  1235                           i1l1009:	
  1236  00C7                     ;interrupts.c: 25:         {;interrupts.c: 26:             TickCount = 0;
  1237                           	clrf	(_TickCount)
  1238  00C7  01B4               	line	27
  1239                           	
  1240                           i1l1011:	
  1241  00C8                     ;interrupts.c: 27:             SendModule();
  1242                           	fcall	_SendModule
  1243  00C8  214C               	line	28
  1244                           ;interrupts.c: 28:         }
  1245                           	goto	i1l1015
  1246  00C9  28D1               	line	29
  1247                           ;interrupts.c: 29:         else
  1248                           	
  1249                           i1l134:	
  1250  00CA                     	line	31
  1251                           	
  1252                           i1l1013:	
  1253  00CA                     ;interrupts.c: 30:         {;interrupts.c: 31:             TickCount++;
  1254                           	movlw	low(01h)
  1255  00CA  3001               	bcf	status, 5	;RP0=0, select bank0
  1256  00CB  1283               	movwf	(??_ISR+0)+0
  1257  00CC  00A2               	movf	(??_ISR+0)+0,w
  1258  00CD  0822               	addwf	(_TickCount),f
  1259  00CE  07B4               	goto	i1l1015
  1260  00CF  28D1               	line	32
  1261                           ;interrupts.c: 32:         }
  1262                           	
  1263                           i1l135:	
  1264  00D0                     	goto	i1l1015
  1265  00D0  28D1               	line	33
  1266                           ;interrupts.c: 33:     }
  1267                           	
  1268                           i1l133:	
  1269  00D1                     	line	36
  1270                           	
  1271                           i1l1015:	
  1272  00D1                     ;interrupts.c: 36:     if (INTCONbits.RAIF==1)
  1273                           	btfss	(11),0	;volatile
  1274  00D1  1C0B               	goto	u34_21
  1275  00D2  28D4               	goto	u34_20
  1276  00D3  28D5               u34_21:
  1277  00D4                     	goto	i1l1019
  1278  00D4  28D7               u34_20:
  1279  00D5                     	line	38
  1280                           	
  1281                           i1l1017:	
  1282  00D5                     ;interrupts.c: 37:     {;interrupts.c: 38:         EdgeIntr();
  1283                           	fcall	_EdgeIntr
  1284  00D5  2138               	goto	i1l1019
  1285  00D6  28D7               	line	39
  1286                           ;interrupts.c: 39:     }
  1287                           	
  1288                           i1l136:	
  1289  00D7                     	line	42
  1290                           	
  1291                           i1l1019:	
  1292  00D7                     ;interrupts.c: 42:     if (INTCONbits.T0IF==1)
  1293                           	btfss	(11),2	;volatile
  1294  00D7  1D0B               	goto	u35_21
  1295  00D8  28DA               	goto	u35_20
  1296  00D9  28DB               u35_21:
  1297  00DA                     	goto	i1l138
  1298  00DA  28DD               u35_20:
  1299  00DB                     	line	44
  1300                           	
  1301                           i1l1021:	
  1302  00DB                     ;interrupts.c: 43:     {;interrupts.c: 44:         BitIntr();
  1303                           	fcall	_BitIntr
  1304  00DB  201D               	goto	i1l138
  1305  00DC  28DD               	line	45
  1306                           ;interrupts.c: 45:     }
  1307                           	
  1308                           i1l137:	
  1309  00DD                     	line	47
  1310                           	
  1311                           i1l138:	
  1312  00DD                     	bcf	status, 5	;RP0=0, select bank0
  1313  00DD  1283               	movf	(??_ISR+4),w
  1314  00DE  0826               	movwf	btemp+1
  1315  00DF  00DF               	movf	(??_ISR+3),w
  1316  00E0  0825               	movwf	pclath
  1317  00E1  008A               	movf	(??_ISR+2),w
  1318  00E2  0824               	movwf	fsr0
  1319  00E3  0084               	swapf	(??_ISR+1)^00h,w
  1320  00E4  0E23               	movwf	status
  1321  00E5  0083               	swapf	saved_w,f
  1322  00E6  0EDE               	swapf	saved_w,w
  1323  00E7  0E5E               	retfie
  1324  00E8  0009               	opt stack 0
  1325                           GLOBAL	__end_of_ISR
  1326                           	__end_of_ISR:
  1327  00E9                     	signat	_ISR,89
  1328                           	global	_StartTickTimer
  1329                           
  1330 ;; *************** function _StartTickTimer *****************
  1331 ;; Defined at:
  1332 ;;		line 36 in file "user.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  IntEnable       1    0[BANK0 ] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0
  1346 ;;      Params:         0       0
  1347 ;;      Locals:         0       0
  1348 ;;      Temps:          0       0
  1349 ;;      Totals:         0       0
  1350 ;;Total ram usage:        0 bytes
  1351 ;; Hardware stack levels used:    1
  1352 ;; Hardware stack levels required when called:    3
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_Initialise
  1357 ;;		_ISR
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1361                           	file	"user.c"
  1362                           	line	36
  1363                           global __ptext4
  1364                           __ptext4:	;psect for function _StartTickTimer
  1365  0125                     psect	text4
  1366                           	file	"user.c"
  1367                           	line	36
  1368                           	global	__size_of_StartTickTimer
  1369                           	__size_of_StartTickTimer	equ	__end_of_StartTickTimer-_StartTickTimer
  1370  0013                     	
  1371                           _StartTickTimer:	
  1372  0125                     ;incstack = 0
  1373                           	opt	stack 1
  1374                           ; Regs used in _StartTickTimer: [wreg+status,2+status,0]
  1375                           	line	41
  1376                           	
  1377                           i1l913:	
  1378  0125                     ;user.c: 38:     else;user.c: 41:         RC1 = 0;
  1379                           	movlw	0
  1380  0125  3000               	btfsc	(11),7	;volatile
  1381  0126  1B8B               	movlw	1
  1382  0127  3001               	bcf	status, 5	;RP0=0, select bank0
  1383  0128  1283               	movwf	(StartTickTimer@IntEnable)
  1384  0129  00A0               	line	42
  1385                           	
  1386                           i1l915:	
  1387  012A                     ;user.c: 42: 
  1388                           	bcf	(11),7	;volatile
  1389  012A  138B               	line	45
  1390                           	
  1391                           i1l917:	
  1392  012B                     ;user.c: 45:         DataState = DATA_SYNC;
  1393                           	bcf	(16),0	;volatile
  1394  012B  1010               	line	47
  1395                           	
  1396                           i1l919:	
  1397  012C                     ;user.c: 47:         Addressed = 0;
  1398                           	bcf	(12),0	;volatile
  1399  012C  100C               	line	49
  1400                           	
  1401                           i1l921:	
  1402  012D                     ;user.c: 49: 
  1403                           	movlw	low(0C3h)
  1404  012D  30C3               	movwf	(15)	;volatile
  1405  012E  008F               	line	50
  1406                           	
  1407                           i1l923:	
  1408  012F                     ;user.c: 50:         Dummy = PORTA;
  1409                           	movlw	low(050h)
  1410  012F  3050               	movwf	(14)	;volatile
  1411  0130  008E               	line	51
  1412                           	
  1413                           i1l925:	
  1414  0131                     ;user.c: 51: 
  1415                           	bsf	(16),0	;volatile
  1416  0131  1410               	line	54
  1417                           	
  1418                           i1l927:	
  1419  0132                     ;user.c: 54:         INTCONbits.RAIE = 1;
  1420                           	rrf	(StartTickTimer@IntEnable),w
  1421  0132  0C20               	skipc
  1422  0133  1C03               	bcf	(11),7	;volatile
  1423  0134  138B               	skipnc
  1424  0135  1803               	bsf	(11),7	;volatile
  1425  0136  178B               	line	55
  1426                           	
  1427                           i1l82:	
  1428  0137                     	return
  1429  0137  0008               	opt stack 0
  1430                           GLOBAL	__end_of_StartTickTimer
  1431                           	__end_of_StartTickTimer:
  1432  0138                     	signat	_StartTickTimer,89
  1433                           	global	_SendModule
  1434                           
  1435 ;; *************** function _SendModule *****************
  1436 ;; Defined at:
  1437 ;;		line 220 in file "user.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;		None
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		None
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0
  1451 ;;      Params:         0       0
  1452 ;;      Locals:         0       0
  1453 ;;      Temps:          0       0
  1454 ;;      Totals:         0       0
  1455 ;;Total ram usage:        0 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_ISR
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1464                           	line	220
  1465                           global __ptext5
  1466                           __ptext5:	;psect for function _SendModule
  1467  014C                     psect	text5
  1468                           	file	"user.c"
  1469                           	line	220
  1470                           	global	__size_of_SendModule
  1471                           	__size_of_SendModule	equ	__end_of_SendModule-_SendModule
  1472  0001                     	
  1473                           _SendModule:	
  1474  014C                     ;incstack = 0
  1475                           	opt	stack 4
  1476                           ; Regs used in _SendModule: []
  1477                           	line	223
  1478                           	
  1479                           i1l114:	
  1480  014C                     	return
  1481  014C  0008               	opt stack 0
  1482                           GLOBAL	__end_of_SendModule
  1483                           	__end_of_SendModule:
  1484  014D                     	signat	_SendModule,89
  1485                           	global	_EdgeIntr
  1486                           
  1487 ;; *************** function _EdgeIntr *****************
  1488 ;; Defined at:
  1489 ;;		line 100 in file "user.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;		None
  1492 ;; Auto vars:     Size  Location     Type
  1493 ;;		None
  1494 ;; Return value:  Size  Location     Type
  1495 ;;                  1    wreg      void 
  1496 ;; Registers used:
  1497 ;;		wreg
  1498 ;; Tracked objects:
  1499 ;;		On entry : 0/0
  1500 ;;		On exit  : 0/0
  1501 ;;		Unchanged: 0/0
  1502 ;; Data sizes:     COMMON   BANK0
  1503 ;;      Params:         0       0
  1504 ;;      Locals:         0       0
  1505 ;;      Temps:          0       0
  1506 ;;      Totals:         0       0
  1507 ;;Total ram usage:        0 bytes
  1508 ;; Hardware stack levels used:    1
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_ISR
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  1516                           	line	100
  1517                           global __ptext6
  1518                           __ptext6:	;psect for function _EdgeIntr
  1519  0138                     psect	text6
  1520                           	file	"user.c"
  1521                           	line	100
  1522                           	global	__size_of_EdgeIntr
  1523                           	__size_of_EdgeIntr	equ	__end_of_EdgeIntr-_EdgeIntr
  1524  0009                     	
  1525                           _EdgeIntr:	
  1526  0138                     ;incstack = 0
  1527                           	opt	stack 4
  1528                           ; Regs used in _EdgeIntr: [wreg]
  1529                           	line	103
  1530                           	
  1531                           i1l929:	
  1532  0138                     ;user.c: 103:         if (DataState==DATA_SYNC)
  1533                           	bcf	(11),3	;volatile
  1534  0138  118B               	line	105
  1535                           ;user.c: 105: 
  1536                           	bcf	status, 5	;RP0=0, select bank0
  1537  0139  1283               	bsf	(60/8),(60)&7	;volatile
  1538  013A  1607               	line	106
  1539                           ;user.c: 106:             TickCount = 0;
  1540                           	bcf	(60/8),(60)&7	;volatile
  1541  013B  1207               	line	109
  1542                           	
  1543                           i1l931:	
  1544  013C                     	movlw	low(06Ah)
  1545  013C  306A               	movwf	(1)	;volatile
  1546  013D  0081               	line	111
  1547                           	
  1548                           i1l933:	
  1549  013E                     	bcf	(11),2	;volatile
  1550  013E  110B               	line	112
  1551                           	
  1552                           i1l935:	
  1553  013F                     	bsf	(11),5	;volatile
  1554  013F  168B               	line	113
  1555                           	
  1556                           i1l90:	
  1557  0140                     	return
  1558  0140  0008               	opt stack 0
  1559                           GLOBAL	__end_of_EdgeIntr
  1560                           	__end_of_EdgeIntr:
  1561  0141                     	signat	_EdgeIntr,89
  1562                           	global	_BitIntr
  1563                           
  1564 ;; *************** function _BitIntr *****************
  1565 ;; Defined at:
  1566 ;;		line 118 in file "user.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;  Dummy           1    1[BANK0 ] unsigned char 
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0
  1580 ;;      Params:         0       0
  1581 ;;      Locals:         0       1
  1582 ;;      Temps:          0       1
  1583 ;;      Totals:         0       2
  1584 ;;Total ram usage:        2 bytes
  1585 ;; Hardware stack levels used:    2
  1586 ;; This function calls:
  1587 ;;		Nothing
  1588 ;; This function is called by:
  1589 ;;		_ISR
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  1593                           	line	118
  1594                           global __ptext7
  1595                           __ptext7:	;psect for function _BitIntr
  1596  001D                     psect	text7
  1597                           	file	"user.c"
  1598                           	line	118
  1599                           	global	__size_of_BitIntr
  1600                           	__size_of_BitIntr	equ	__end_of_BitIntr-_BitIntr
  1601  009E                     	
  1602                           _BitIntr:	
  1603  001D                     ;incstack = 0
  1604                           	opt	stack 3
  1605                           ; Regs used in _BitIntr: [wreg-fsr0h+status,2+status,0+pclath]
  1606                           	line	120
  1607                           	
  1608                           i1l937:	
  1609  001D                     	bcf	status, 5	;RP0=0, select bank0
  1610  001D  1283               	bsf	(59/8),(59)&7	;volatile
  1611  001E  1587               	line	121
  1612                           	bcf	(59/8),(59)&7	;volatile
  1613  001F  1187               	line	123
  1614                           	
  1615                           i1l939:	
  1616  0020                     		decf	((_BitData)),w
  1617  0020  0333               	btfss	status,2
  1618  0021  1D03               	goto	u19_21
  1619  0022  2824               	goto	u19_20
  1620  0023  2825               u19_21:
  1621  0024                     	goto	i1l93
  1622  0024  28B2               u19_20:
  1623  0025                     	line	127
  1624                           	
  1625                           i1l941:	
  1626  0025                     	clrc
  1627  0025  1003               	btfsc	(42/8),(42)&7	;volatile
  1628  0026  1905               	setc
  1629  0027  1403               	rlf	(_Data),f
  1630  0028  0DAD               	line	132
  1631                           	
  1632                           i1l943:	
  1633  0029                     	movlw	low(09Ch)
  1634  0029  309C               	movwf	(1)	;volatile
  1635  002A  0081               	line	134
  1636                           	
  1637                           i1l945:	
  1638  002B                     	bcf	(11),2	;volatile
  1639  002B  110B               	line	135
  1640                           	
  1641                           i1l947:	
  1642  002C                     	bsf	(11),5	;volatile
  1643  002C  168B               	line	138
  1644                           	
  1645                           i1l949:	
  1646  002D                     	clrf	(_BitData)
  1647  002D  01B3               	line	140
  1648                           	movf	((_DataState)),w
  1649  002E  082C               	btfss	status,2
  1650  002F  1D03               	goto	u20_21
  1651  0030  2832               	goto	u20_20
  1652  0031  2833               u20_21:
  1653  0032                     	goto	i1l961
  1654  0032  284A               u20_20:
  1655  0033                     	line	143
  1656                           	
  1657                           i1l951:	
  1658  0033                     	clrf	(_TickCount)
  1659  0033  01B4               	line	152
  1660                           	
  1661                           i1l953:	
  1662  0034                     ;user.c: 152:             if (++BitCount==4)
  1663                           	movlw	low(01h)
  1664  0034  3001               	movwf	(??_BitIntr+0)+0
  1665  0035  00A0               	movf	(??_BitIntr+0)+0,w
  1666  0036  0820               	addwf	(_BitCount),f
  1667  0037  07B2               		movlw	4
  1668  0038  3004               	xorwf	(((_BitCount))),w
  1669  0039  0632               	btfss	status,2
  1670  003A  1D03               	goto	u21_21
  1671  003B  283D               	goto	u21_20
  1672  003C  283E               u21_21:
  1673  003D                     	goto	i1l111
  1674  003D  28BA               u21_20:
  1675  003E                     	line	154
  1676                           	
  1677                           i1l955:	
  1678  003E                     ;user.c: 153:             {;user.c: 154:                  if (Data==0x9)
  1679                           		movlw	9
  1680  003E  3009               	xorwf	((_Data)),w
  1681  003F  062D               	btfss	status,2
  1682  0040  1D03               	goto	u22_21
  1683  0041  2843               	goto	u22_20
  1684  0042  2844               u22_21:
  1685  0043                     	goto	i1l111
  1686  0043  28BA               u22_20:
  1687  0044                     	line	156
  1688                           	
  1689                           i1l957:	
  1690  0044                     ;user.c: 155:                  {;user.c: 156:                     Data = 0;
  1691                           	clrf	(_Data)
  1692  0044  01AD               	line	157
  1693                           	
  1694                           i1l959:	
  1695  0045                     ;user.c: 157:                     DataState = DATA_ADDRESS;
  1696                           	clrf	(_DataState)
  1697  0045  01AC               	incf	(_DataState),f
  1698  0046  0AAC               	goto	i1l111
  1699  0047  28BA               	line	158
  1700                           ;user.c: 158:                  }
  1701                           	
  1702                           i1l96:	
  1703  0048                     	goto	i1l111
  1704  0048  28BA               	line	159
  1705                           ;user.c: 159:             }
  1706                           	
  1707                           i1l95:	
  1708  0049                     	line	160
  1709                           ;user.c: 160:         }
  1710                           	goto	i1l111
  1711  0049  28BA               	line	161
  1712                           ;user.c: 161:         else if (DataState==DATA_ADDRESS)
  1713                           	
  1714                           i1l94:	
  1715  004A                     	
  1716                           i1l961:	
  1717  004A                     		decf	((_DataState)),w
  1718  004A  032C               	btfss	status,2
  1719  004B  1D03               	goto	u23_21
  1720  004C  284E               	goto	u23_20
  1721  004D  284F               u23_21:
  1722  004E                     	goto	i1l973
  1723  004E  286E               u23_20:
  1724  004F                     	line	164
  1725                           	
  1726                           i1l963:	
  1727  004F                     ;user.c: 162:         {;user.c: 164:             if (++BitCount==5)
  1728                           	movlw	low(01h)
  1729  004F  3001               	movwf	(??_BitIntr+0)+0
  1730  0050  00A0               	movf	(??_BitIntr+0)+0,w
  1731  0051  0820               	addwf	(_BitCount),f
  1732  0052  07B2               		movlw	5
  1733  0053  3005               	xorwf	(((_BitCount))),w
  1734  0054  0632               	btfss	status,2
  1735  0055  1D03               	goto	u24_21
  1736  0056  2858               	goto	u24_20
  1737  0057  2859               u24_21:
  1738  0058                     	goto	i1l111
  1739  0058  28BA               u24_20:
  1740  0059                     	line	166
  1741                           	
  1742                           i1l965:	
  1743  0059                     ;user.c: 165:             {;user.c: 166:                 if (Data==BOX_ADDRESS)
  1744                           	movlw	low((_BOX_ADDRESS-__stringbase))
  1745  0059  3001               	movwf	fsr0
  1746  005A  0084               	fcall	stringdir
  1747  005B  2141               	movwf	(??_BitIntr+0)+0
  1748  005C  00A0               	movf	(_Data),w
  1749  005D  082D               	xorwf	(??_BitIntr+0)+0,w
  1750  005E  0620               	skipz
  1751  005F  1D03               	goto	u25_21
  1752  0060  2862               	goto	u25_20
  1753  0061  2863               u25_21:
  1754  0062                     	goto	i1l969
  1755  0062  2866               u25_20:
  1756  0063                     	line	168
  1757                           	
  1758                           i1l967:	
  1759  0063                     ;user.c: 167:                 {;user.c: 168:                     Addressed = 1;
  1760                           	clrf	(_Addressed)
  1761  0063  01AB               	incf	(_Addressed),f
  1762  0064  0AAB               	line	171
  1763                           ;user.c: 171:                 }
  1764                           	goto	i1l971
  1765  0065  2868               	line	172
  1766                           ;user.c: 172:                 else
  1767                           	
  1768                           i1l100:	
  1769  0066                     	line	174
  1770                           	
  1771                           i1l969:	
  1772  0066                     ;user.c: 173:                 {;user.c: 174:                     Addressed = 0;
  1773                           	clrf	(_Addressed)
  1774  0066  01AB               	goto	i1l971
  1775  0067  2868               	line	175
  1776                           ;user.c: 175:                 }
  1777                           	
  1778                           i1l101:	
  1779  0068                     	line	177
  1780                           	
  1781                           i1l971:	
  1782  0068                     ;user.c: 177:                 DataState = DATA_SIZE;
  1783                           	movlw	low(02h)
  1784  0068  3002               	movwf	(??_BitIntr+0)+0
  1785  0069  00A0               	movf	(??_BitIntr+0)+0,w
  1786  006A  0820               	movwf	(_DataState)
  1787  006B  00AC               	goto	i1l111
  1788  006C  28BA               	line	178
  1789                           ;user.c: 178:             }
  1790                           	
  1791                           i1l99:	
  1792  006D                     	line	179
  1793                           ;user.c: 179:         }
  1794                           	goto	i1l111
  1795  006D  28BA               	line	180
  1796                           ;user.c: 180:         else if (DataState==DATA_SIZE)
  1797                           	
  1798                           i1l98:	
  1799  006E                     	
  1800                           i1l973:	
  1801  006E                     		movlw	2
  1802  006E  3002               	xorwf	((_DataState)),w
  1803  006F  062C               	btfss	status,2
  1804  0070  1D03               	goto	u26_21
  1805  0071  2873               	goto	u26_20
  1806  0072  2874               u26_21:
  1807  0073                     	goto	i1l981
  1808  0073  288E               u26_20:
  1809  0074                     	line	183
  1810                           	
  1811                           i1l975:	
  1812  0074                     ;user.c: 181:         {;user.c: 183:             if (++BitCount==5)
  1813                           	movlw	low(01h)
  1814  0074  3001               	movwf	(??_BitIntr+0)+0
  1815  0075  00A0               	movf	(??_BitIntr+0)+0,w
  1816  0076  0820               	addwf	(_BitCount),f
  1817  0077  07B2               		movlw	5
  1818  0078  3005               	xorwf	(((_BitCount))),w
  1819  0079  0632               	btfss	status,2
  1820  007A  1D03               	goto	u27_21
  1821  007B  287D               	goto	u27_20
  1822  007C  287E               u27_21:
  1823  007D                     	goto	i1l111
  1824  007D  28BA               u27_20:
  1825  007E                     	line	185
  1826                           	
  1827                           i1l977:	
  1828  007E                     ;user.c: 184:             {;user.c: 185:                 if (Data < 31)
  1829                           	movlw	low(01Fh)
  1830  007E  301F               	subwf	(_Data),w
  1831  007F  022D               	skipnc
  1832  0080  1803               	goto	u28_21
  1833  0081  2883               	goto	u28_20
  1834  0082  2884               u28_21:
  1835  0083                     	goto	i1l105
  1836  0083  2888               u28_20:
  1837  0084                     	line	186
  1838                           	
  1839                           i1l979:	
  1840  0084                     ;user.c: 186:                     BoxSize = Data;
  1841                           	movf	(_Data),w
  1842  0084  082D               	movwf	(??_BitIntr+0)+0
  1843  0085  00A0               	movf	(??_BitIntr+0)+0,w
  1844  0086  0820               	movwf	(_BoxSize)
  1845  0087  00AF               	
  1846                           i1l105:	
  1847  0088                     	line	188
  1848                           ;user.c: 188:                 DataState = DATA_LAMPS;
  1849                           	movlw	low(03h)
  1850  0088  3003               	movwf	(??_BitIntr+0)+0
  1851  0089  00A0               	movf	(??_BitIntr+0)+0,w
  1852  008A  0820               	movwf	(_DataState)
  1853  008B  00AC               	goto	i1l111
  1854  008C  28BA               	line	189
  1855                           ;user.c: 189:             }
  1856                           	
  1857                           i1l104:	
  1858  008D                     	line	190
  1859                           ;user.c: 190:         }
  1860                           	goto	i1l111
  1861  008D  28BA               	line	191
  1862                           ;user.c: 191:         else if (DataState==DATA_LAMPS)
  1863                           	
  1864                           i1l103:	
  1865  008E                     	
  1866                           i1l981:	
  1867  008E                     		movlw	3
  1868  008E  3003               	xorwf	((_DataState)),w
  1869  008F  062C               	btfss	status,2
  1870  0090  1D03               	goto	u29_21
  1871  0091  2893               	goto	u29_20
  1872  0092  2894               u29_21:
  1873  0093                     	goto	i1l111
  1874  0093  28BA               u29_20:
  1875  0094                     	line	195
  1876                           	
  1877                           i1l983:	
  1878  0094                     ;user.c: 192:         {;user.c: 195:             if (Addressed==1)
  1879                           		decf	((_Addressed)),w
  1880  0094  032B               	btfss	status,2
  1881  0095  1D03               	goto	u30_21
  1882  0096  2898               	goto	u30_20
  1883  0097  2899               u30_21:
  1884  0098                     	goto	i1l991
  1885  0098  28A0               u30_20:
  1886  0099                     	line	197
  1887                           	
  1888                           i1l985:	
  1889  0099                     ;user.c: 196:             {;user.c: 197:                 Lamps = Data;
  1890                           	movf	(_Data),w
  1891  0099  082D               	movwf	(??_BitIntr+0)+0
  1892  009A  00A0               	movf	(??_BitIntr+0)+0,w
  1893  009B  0820               	movwf	(_Lamps)
  1894  009C  00AE               	line	198
  1895                           	
  1896                           i1l987:	
  1897  009D                     ;user.c: 198:                 RC5=1;
  1898                           	bsf	(61/8),(61)&7	;volatile
  1899  009D  1687               	line	199
  1900                           	
  1901                           i1l989:	
  1902  009E                     ;user.c: 199:                 RC5=0;
  1903                           	bcf	(61/8),(61)&7	;volatile
  1904  009E  1287               	goto	i1l991
  1905  009F  28A0               	line	200
  1906                           ;user.c: 200:             }
  1907                           	
  1908                           i1l108:	
  1909  00A0                     	line	202
  1910                           	
  1911                           i1l991:	
  1912  00A0                     ;user.c: 202:             if (++BitCount==BoxSize)
  1913                           	movlw	low(01h)
  1914  00A0  3001               	movwf	(??_BitIntr+0)+0
  1915  00A1  00A0               	movf	(??_BitIntr+0)+0,w
  1916  00A2  0820               	addwf	(_BitCount),f
  1917  00A3  07B2               	movf	((_BitCount)),w
  1918  00A4  0832               	xorwf	(_BoxSize),w
  1919  00A5  062F               	skipz
  1920  00A6  1D03               	goto	u31_21
  1921  00A7  28A9               	goto	u31_20
  1922  00A8  28AA               u31_21:
  1923  00A9                     	goto	i1l111
  1924  00A9  28BA               u31_20:
  1925  00AA                     	line	203
  1926                           	
  1927                           i1l993:	
  1928  00AA                     ;user.c: 203:                 DataState = DATA_ADDRESS;
  1929                           	clrf	(_DataState)
  1930  00AA  01AC               	incf	(_DataState),f
  1931  00AB  0AAC               	goto	i1l111
  1932  00AC  28BA               	
  1933                           i1l109:	
  1934  00AD                     	goto	i1l111
  1935  00AD  28BA               	line	205
  1936                           ;user.c: 205:         }
  1937                           	
  1938                           i1l107:	
  1939  00AE                     	goto	i1l111
  1940  00AE  28BA               	
  1941                           i1l106:	
  1942  00AF                     	goto	i1l111
  1943  00AF  28BA               	
  1944                           i1l102:	
  1945  00B0                     	goto	i1l111
  1946  00B0  28BA               	
  1947                           i1l97:	
  1948  00B1                     	line	206
  1949                           ;user.c: 206:     }
  1950                           	goto	i1l111
  1951  00B1  28BA               	line	207
  1952                           ;user.c: 207:     else
  1953                           	
  1954                           i1l93:	
  1955  00B2                     	line	210
  1956                           ;user.c: 208:     {;user.c: 210:         BitData = 1;
  1957                           	clrf	(_BitData)
  1958  00B2  01B3               	incf	(_BitData),f
  1959  00B3  0AB3               	line	212
  1960                           	
  1961                           i1l995:	
  1962  00B4                     ;user.c: 212:         uint8_t Dummy = PORTA;
  1963                           	movf	(5),w	;volatile
  1964  00B4  0805               	movwf	(??_BitIntr+0)+0
  1965  00B5  00A0               	movf	(??_BitIntr+0)+0,w
  1966  00B6  0820               	movwf	(BitIntr@Dummy)
  1967  00B7  00A1               	line	214
  1968                           	
  1969                           i1l997:	
  1970  00B8                     ;user.c: 214:         INTCONbits.RAIE = 0;
  1971                           	bcf	(11),3	;volatile
  1972  00B8  118B               	goto	i1l111
  1973  00B9  28BA               	line	215
  1974                           ;user.c: 215:     }
  1975                           	
  1976                           i1l110:	
  1977  00BA                     	line	216
  1978                           	
  1979                           i1l111:	
  1980  00BA                     	return
  1981  00BA  0008               	opt stack 0
  1982                           GLOBAL	__end_of_BitIntr
  1983                           	__end_of_BitIntr:
  1984  00BB                     	signat	_BitIntr,89
  1985                           global	___latbits
  1986                           ___latbits	equ	0
  1987  0000                     	global	btemp
  1988                           	btemp set 05Eh
  1989  005E                     
  1990                           	DABS	1,94,2	;btemp
  1991                           	global	wtemp0
  1992                           	wtemp0 set btemp+0
  1993  005E                     	end


Data Sizes:
    Strings     0
    Constant    1
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     11      21

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _Initialise->_BitDataInit

Critical Paths under _ISR in BANK0

    _ISR->_BitIntr

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      69
                         _Initialise
 ---------------------------------------------------------------------------------
 (1) _Initialise                                           0     0      0      69
                        _BitDataInit
                     _StartTickTimer
 ---------------------------------------------------------------------------------
 (4) _StartTickTimer                                       1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _BitDataInit                                          4     4      0      46
                                              7 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  5     5      0      24
                                              2 BANK0      5     5      0
                            _BitIntr
                           _EdgeIntr
                         _SendModule
                     _StartTickTimer
 ---------------------------------------------------------------------------------
 (4) _StartTickTimer                                       1     1      0      23
 ---------------------------------------------------------------------------------
 (4) _SendModule                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EdgeIntr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _BitIntr                                              2     2      0       1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialise
     _BitDataInit
     _StartTickTimer

 _ISR (ROOT)
   _BitIntr
   _EdgeIntr
   _SendModule
   _StartTickTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      B      15       4       33.9%
ABS                  0      0      15       5        0.0%
DATA                 0      0      15       6        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Oct 26 19:54:45 2018

                      l9 014A                        pc 0002              __CFG_CP$OFF 0000  
                     l10 014A                       l11 014B                       l12 014B  
                     l31 0124                       l85 00F8                       l86 0106  
                     l87 010C                       fsr 0004                      l901 011C  
                    l911 0123                      l903 011D                      l905 011E  
                    l907 0120                      l909 0121                      l871 00F5  
                    l873 00FB                      l881 0106                      l865 00EB  
                    l875 00FE                      l867 00EF                      l891 0114  
                    l883 010D                      l877 0102                      l869 00F0  
                    l893 0115                      l885 0110                      l879 0104  
                    l895 0116                      l887 0112                      l897 0117  
                    l889 0113                      l899 011B                      l999 0148  
                    _RA2 002A                      _RC1 0039                      _RC3 003B  
                    _RC4 003C                      _RC5 003D                      u180 00F5  
                    u181 00F4             __CFG_CPD$OFF 0000                      _ISR 00BB  
                    fsr0 0004             __CFG_FOSC$EC 0000                     ?_ISR 0020  
                   l1001 0149                     i1l90 0140                     i1l82 0137  
                   i1l93 00B2                     i1l94 004A                     i1l95 0049  
                   i1l96 0048                     i1l97 00B1                     i1l98 006E  
                   i1l99 006D                     _TMR0 0001                     _Data 002D  
                   _Sync 0031                     _main 0148                     btemp 005E  
                   start 000F          __end_of_BitIntr 00BB              _BitDataInit 00E9  
                  ??_ISR 0022                    ?_main 0020            __CFG_WDTE$OFF 0000  
                  i1l100 0066                    i1l101 0068                    i1l110 00BA  
                  i1l102 00B0                    i1l103 008E                    i1l111 00BA  
                  i1l104 008D                    i1l105 0088                    i1l106 00AF  
                  i1l114 014C                    i1l107 00AE                    i1l108 00A0  
                  i1l109 00AD                    i1l133 00D1                    i1l134 00CA  
                  i1l135 00D0                    i1l136 00D7                    i1l137 00DD  
                  i1l138 00DD                    i1l921 012D                    i1l913 0125  
                  i1l931 013C                    i1l923 012F                    i1l915 012A  
                  i1l941 0025                    i1l933 013E                    i1l925 0131  
                  i1l917 012B                    i1l951 0033                    i1l943 0029  
                  i1l935 013F                    i1l927 0132                    i1l919 012C  
                  i1l953 0034                    i1l961 004A                    i1l945 002B  
                  i1l937 001D                    i1l929 0138                    i1l971 0068  
                  i1l963 004F                    i1l955 003E                    i1l947 002C  
                  i1l939 0020                    i1l981 008E                    i1l965 0059  
                  i1l973 006E                    i1l957 0044                    i1l949 002D  
                  i1l991 00A0                    i1l983 0094                    i1l975 0074  
                  i1l967 0063                    i1l959 0045                    i1l993 00AA  
                  i1l985 0099                    i1l977 007E                    i1l969 0066  
                  i1l995 00B4                    i1l987 009D                    i1l979 0084  
                  i1l997 00B8                    i1l989 009E                    u20_20 0033  
                  u20_21 0032                    u21_20 003E                    u21_21 003D  
                  u30_20 0099                    u22_20 0044                    u30_21 0098  
                  u22_21 0043                    u31_20 00AA                    u23_20 004F  
                  u31_21 00A9                    u23_21 004E                    u24_20 0059  
                  u32_20 00BF                    u24_21 0058                    u32_21 00BE  
                  u25_20 0063                    u33_20 00C7                    u25_21 0062  
                  u33_21 00C6                    _TMR1H 000F                    _TMR1L 000E  
                  u26_20 0074                    u34_20 00D5                    u26_21 0073  
                  u34_21 00D4                    u27_20 007E                    u19_20 0025  
                  u35_20 00DB                    u27_21 007D                    u19_21 0024  
                  u35_21 00DA                    _PORTA 0005                    u28_20 0084  
                  u28_21 0083                    u29_20 0094                    u29_21 0093  
                  _Lamps 002E           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003         __end_of_EdgeIntr 0141                    wtemp0 005E  
         __CFG_MCLRE$OFF 0000          __initialization 0010             __end_of_main 014C  
             _Initialise 010D                   ??_main 0000               _SendModule 014C  
                 i1l1011 00C8                   i1l1003 00BB                   i1l1021 00DB  
                 i1l1013 00CA                   i1l1005 00BF                   i1l1007 00C0  
                 i1l1015 00D1                   i1l1017 00D5                   i1l1009 00C7  
                 i1l1019 00D7                ??_BitIntr 0020         ??_StartTickTimer 0000  
         __CFG_PWRTE$OFF 0000                   saved_w 005E  __end_of__initialization 001B  
         __pcstackCOMMON 0000              ?_Initialise 0020                ?_EdgeIntr 0020  
         _OPTION_REGbits 0081        BitDataInit@ModeTx 0029              ?_SendModule 0020  
             __pbssBANK0 002B               __pmaintext 0148             ?_BitDataInit 0020  
             __pintentry 0004               ??_EdgeIntr 0000               __stringtab 0141  
                _Address 0030                  _BitData 0033                  _BitIntr 001D  
    __size_of_Initialise 0018                  _BoxSize 002F                _CMCONbits 0019  
    __size_of_SendModule 0001                  __ptext1 010D                  __ptext2 00E9  
                __ptext3 00BB                  __ptext4 0125                  __ptext5 014C  
                __ptext6 0138                  __ptext7 001D     BitDataInit@IntEnable 002A  
           __size_of_ISR 002E                _T1CONbits 0010     end_of_initialization 001B  
StartTickTimer@IntEnable 0020                _TRISAbits 0085                _TRISCbits 0087  
              _Addressed 002B             BitIntr@Dummy 0021                _DataState 002C  
           ??_Initialise 0000     __size_of_BitDataInit 0024      start_initialization 0010  
            __end_of_ISR 00E9        __size_of_EdgeIntr 0009             ??_SendModule 0000  
     __end_of_Initialise 0125                _TickCount 0034      __end_of_BOX_ADDRESS 0148  
__size_of_StartTickTimer 0013       __end_of_SendModule 014D                ___latbits 0000  
          __pcstackBANK0 0020                 ?_BitIntr 0020         BitDataInit@Dummy 0028  
              __pstrings 0141        interrupt_function 0004              _BOX_ADDRESS 0147  
               _IOCAbits 0096                 _PIR1bits 000C              __stringbase 0146  
               _EdgeIntr 0138                 _BitCount 0032         __size_of_BitIntr 009E  
         _StartTickTimer 0125       __end_of__stringtab 0147            __size_of_main 0004  
 __end_of_StartTickTimer 0138            ??_BitDataInit 0027               _INTCONbits 000B  
               intlevel1 0000                stringcode 0141          ?_StartTickTimer 0020  
    __end_of_BitDataInit 010D                 stringdir 0141                 stringtab 0141  
