

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Nov 09 11:02:31 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F630 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   100                           PORTC equ 07h ;# 
   101  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   116                           CMCON equ 019h ;# 
   117  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   118                           OPTION_REG equ 081h ;# 
   119  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   120                           TRISA equ 085h ;# 
   121  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   122                           TRISC equ 087h ;# 
   123  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   124                           PIE1 equ 08Ch ;# 
   125  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   126                           PCON equ 08Eh ;# 
   127  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   128                           OSCCAL equ 090h ;# 
   129  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   130                           WPUA equ 095h ;# 
   131  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   132                           WPU equ 095h ;# 
   133  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   134                           IOCA equ 096h ;# 
   135  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   136                           IOC equ 096h ;# 
   137  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   138                           VRCON equ 099h ;# 
   139  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   140                           EEDAT equ 09Ah ;# 
   141  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   142                           EEDATA equ 09Ah ;# 
   143  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   144                           EEADR equ 09Bh ;# 
   145  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   146                           EECON1 equ 09Ch ;# 
   147  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   148                           EECON2 equ 09Dh ;# 
   149  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   150                           INDF equ 00h ;# 
   151  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   152                           TMR0 equ 01h ;# 
   153  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   154                           PCL equ 02h ;# 
   155  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   156                           STATUS equ 03h ;# 
   157  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   158                           FSR equ 04h ;# 
   159  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   160                           PORTA equ 05h ;# 
   161  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   162                           PORTC equ 07h ;# 
   163  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   164                           PCLATH equ 0Ah ;# 
   165  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   166                           INTCON equ 0Bh ;# 
   167  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   168                           PIR1 equ 0Ch ;# 
   169  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   170                           TMR1 equ 0Eh ;# 
   171  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   172                           TMR1L equ 0Eh ;# 
   173  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   174                           TMR1H equ 0Fh ;# 
   175  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   176                           T1CON equ 010h ;# 
   177  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   178                           CMCON equ 019h ;# 
   179  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   180                           OPTION_REG equ 081h ;# 
   181  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   182                           TRISA equ 085h ;# 
   183  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   184                           TRISC equ 087h ;# 
   185  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   186                           PIE1 equ 08Ch ;# 
   187  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   188                           PCON equ 08Eh ;# 
   189  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   190                           OSCCAL equ 090h ;# 
   191  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   192                           WPUA equ 095h ;# 
   193  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   194                           WPU equ 095h ;# 
   195  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   196                           IOCA equ 096h ;# 
   197  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   198                           IOC equ 096h ;# 
   199  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   200                           VRCON equ 099h ;# 
   201  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   202                           EEDAT equ 09Ah ;# 
   203  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   204                           EEDATA equ 09Ah ;# 
   205  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   206                           EEADR equ 09Bh ;# 
   207  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   208                           EECON1 equ 09Ch ;# 
   209  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   210                           EECON2 equ 09Dh ;# 
   211  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   212                           INDF equ 00h ;# 
   213  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   214                           TMR0 equ 01h ;# 
   215  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   216                           PCL equ 02h ;# 
   217  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   218                           STATUS equ 03h ;# 
   219  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   220                           FSR equ 04h ;# 
   221  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   222                           PORTA equ 05h ;# 
   223  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   224                           PORTC equ 07h ;# 
   225  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   226                           PCLATH equ 0Ah ;# 
   227  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   228                           INTCON equ 0Bh ;# 
   229  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   230                           PIR1 equ 0Ch ;# 
   231  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   232                           TMR1 equ 0Eh ;# 
   233  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   234                           TMR1L equ 0Eh ;# 
   235  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   236                           TMR1H equ 0Fh ;# 
   237  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   238                           T1CON equ 010h ;# 
   239  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   240                           CMCON equ 019h ;# 
   241  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   242                           OPTION_REG equ 081h ;# 
   243  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   244                           TRISA equ 085h ;# 
   245  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   246                           TRISC equ 087h ;# 
   247  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   248                           PIE1 equ 08Ch ;# 
   249  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   250                           PCON equ 08Eh ;# 
   251  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   252                           OSCCAL equ 090h ;# 
   253  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   254                           WPUA equ 095h ;# 
   255  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   256                           WPU equ 095h ;# 
   257  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   258                           IOCA equ 096h ;# 
   259  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   260                           IOC equ 096h ;# 
   261  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   262                           VRCON equ 099h ;# 
   263  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   264                           EEDAT equ 09Ah ;# 
   265  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   266                           EEDATA equ 09Ah ;# 
   267  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   268                           EEADR equ 09Bh ;# 
   269  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   270                           EECON1 equ 09Ch ;# 
   271  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   272                           EECON2 equ 09Dh ;# 
   273  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   274                           INDF equ 00h ;# 
   275  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   276                           TMR0 equ 01h ;# 
   277  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   278                           PCL equ 02h ;# 
   279  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   280                           STATUS equ 03h ;# 
   281  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   282                           FSR equ 04h ;# 
   283  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   284                           PORTA equ 05h ;# 
   285  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   286                           PORTC equ 07h ;# 
   287  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   288                           PCLATH equ 0Ah ;# 
   289  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   290                           INTCON equ 0Bh ;# 
   291  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   292                           PIR1 equ 0Ch ;# 
   293  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   294                           TMR1 equ 0Eh ;# 
   295  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   296                           TMR1L equ 0Eh ;# 
   297  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   298                           TMR1H equ 0Fh ;# 
   299  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   300                           T1CON equ 010h ;# 
   301  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   302                           CMCON equ 019h ;# 
   303  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   304                           OPTION_REG equ 081h ;# 
   305  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   306                           TRISA equ 085h ;# 
   307  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   308                           TRISC equ 087h ;# 
   309  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   310                           PIE1 equ 08Ch ;# 
   311  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   312                           PCON equ 08Eh ;# 
   313  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   314                           OSCCAL equ 090h ;# 
   315  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   316                           WPUA equ 095h ;# 
   317  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   318                           WPU equ 095h ;# 
   319  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   320                           IOCA equ 096h ;# 
   321  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   322                           IOC equ 096h ;# 
   323  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   324                           VRCON equ 099h ;# 
   325  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   326                           EEDAT equ 09Ah ;# 
   327  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   328                           EEDATA equ 09Ah ;# 
   329  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   330                           EEADR equ 09Bh ;# 
   331  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   332                           EECON1 equ 09Ch ;# 
   333  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   334                           EECON2 equ 09Dh ;# 
   335  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   336                           INDF equ 00h ;# 
   337  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   338                           TMR0 equ 01h ;# 
   339  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   340                           PCL equ 02h ;# 
   341  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   342                           STATUS equ 03h ;# 
   343  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   344                           FSR equ 04h ;# 
   345  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   346                           PORTA equ 05h ;# 
   347  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   348                           PORTC equ 07h ;# 
   349  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   350                           PCLATH equ 0Ah ;# 
   351  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   352                           INTCON equ 0Bh ;# 
   353  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   354                           PIR1 equ 0Ch ;# 
   355  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   364                           CMCON equ 019h ;# 
   365  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   366                           OPTION_REG equ 081h ;# 
   367  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   368                           TRISA equ 085h ;# 
   369  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   370                           TRISC equ 087h ;# 
   371  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   372                           PIE1 equ 08Ch ;# 
   373  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   374                           PCON equ 08Eh ;# 
   375  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   376                           OSCCAL equ 090h ;# 
   377  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   378                           WPUA equ 095h ;# 
   379  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   380                           WPU equ 095h ;# 
   381  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   382                           IOCA equ 096h ;# 
   383  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   384                           IOC equ 096h ;# 
   385  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   386                           VRCON equ 099h ;# 
   387  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   388                           EEDAT equ 09Ah ;# 
   389  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   390                           EEDATA equ 09Ah ;# 
   391  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   392                           EEADR equ 09Bh ;# 
   393  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   394                           EECON1 equ 09Ch ;# 
   395  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   396                           EECON2 equ 09Dh ;# 
   397  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   398                           INDF equ 00h ;# 
   399  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   400                           TMR0 equ 01h ;# 
   401  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   402                           PCL equ 02h ;# 
   403  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   404                           STATUS equ 03h ;# 
   405  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   406                           FSR equ 04h ;# 
   407  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   408                           PORTA equ 05h ;# 
   409  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   410                           PORTC equ 07h ;# 
   411  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   412                           PCLATH equ 0Ah ;# 
   413  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   414                           INTCON equ 0Bh ;# 
   415  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   416                           PIR1 equ 0Ch ;# 
   417  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   418                           TMR1 equ 0Eh ;# 
   419  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   420                           TMR1L equ 0Eh ;# 
   421  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   422                           TMR1H equ 0Fh ;# 
   423  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   424                           T1CON equ 010h ;# 
   425  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   426                           CMCON equ 019h ;# 
   427  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   428                           OPTION_REG equ 081h ;# 
   429  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   430                           TRISA equ 085h ;# 
   431  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   432                           TRISC equ 087h ;# 
   433  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   434                           PIE1 equ 08Ch ;# 
   435  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   436                           PCON equ 08Eh ;# 
   437  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   438                           OSCCAL equ 090h ;# 
   439  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   440                           WPUA equ 095h ;# 
   441  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   442                           WPU equ 095h ;# 
   443  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   444                           IOCA equ 096h ;# 
   445  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   446                           IOC equ 096h ;# 
   447  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   448                           VRCON equ 099h ;# 
   449  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   450                           EEDAT equ 09Ah ;# 
   451  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   452                           EEDATA equ 09Ah ;# 
   453  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   454                           EEADR equ 09Bh ;# 
   455  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   456                           EECON1 equ 09Ch ;# 
   457  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   458                           EECON2 equ 09Dh ;# 
   459  009D                     	FNCALL	_main,_BitDataInit
   460                           	FNCALL	_main,_Initialise
   461                           	FNCALL	_main,_StartTickTimer
   462                           	FNCALL	_main,_UARTSend
   463                           	FNCALL	_StartTickTimer,_BitDataInit
   464                           	FNCALL	_Initialise,_UARTInit
   465                           	FNROOT	_main
   466                           	FNCALL	_ISR,_BitIntr
   467                           	FNCALL	_ISR,_EdgeIntr
   468                           	FNCALL	_ISR,_StartTickTimer
   469                           	FNCALL	_StartTickTimer,_BitDataInit
   470                           	FNCALL	intlevel1,_ISR
   471                           	global	intlevel1
   472                           	FNROOT	intlevel1
   473                           	global	_EdgeDetect
   474                           	global	_DataState
   475                           	global	_Addressed
   476                           	global	_OneWireMode
   477                           	global	_DoneSend
   478                           	global	_Lamps
   479                           	global	_BoxSize
   480                           	global	_BitCount
   481                           	global	_TickCount
   482                           	global	_IntrData
   483                           	global	_RxData
   484                           	global	_IntrNewBit
   485                           	global	_TMR0
   486                           _TMR0	set	0x1
   487  0001                     	global	_PIR1bits
   488                           _PIR1bits	set	0xC
   489  000C                     	global	_TMR1L
   490                           _TMR1L	set	0xE
   491  000E                     	global	_TMR1H
   492                           _TMR1H	set	0xF
   493  000F                     	global	_T1CONbits
   494                           _T1CONbits	set	0x10
   495  0010                     	global	_CMCON
   496                           _CMCON	set	0x19
   497  0019                     	global	_INTCONbits
   498                           _INTCONbits	set	0xB
   499  000B                     	global	_RA0
   500                           _RA0	set	0x28
   501  0028                     	global	_RA2
   502                           _RA2	set	0x2A
   503  002A                     	global	_RC4
   504                           _RC4	set	0x3C
   505  003C                     	global	_RC3
   506                           _RC3	set	0x3B
   507  003B                     	global	_RC5
   508                           _RC5	set	0x3D
   509  003D                     	global	_RC1
   510                           _RC1	set	0x39
   511  0039                     	global	_TRISAbits
   512                           _TRISAbits	set	0x85
   513  0085                     	global	_PIE1bits
   514                           _PIE1bits	set	0x8C
   515  008C                     	global	_TRISC
   516                           _TRISC	set	0x87
   517  0087                     	global	_OPTION_REGbits
   518                           _OPTION_REGbits	set	0x81
   519  0081                     	global	_TRISA
   520                           _TRISA	set	0x85
   521  0085                     ; #config settings
   522                           global __CFG_FOSC$EC
   523                           __CFG_FOSC$EC equ 0x0
   524  0000                     global __CFG_WDTE$OFF
   525                           __CFG_WDTE$OFF equ 0x0
   526  0000                     global __CFG_PWRTE$OFF
   527                           __CFG_PWRTE$OFF equ 0x0
   528  0000                     global __CFG_MCLRE$OFF
   529                           __CFG_MCLRE$OFF equ 0x0
   530  0000                     global __CFG_BOREN$OFF
   531                           __CFG_BOREN$OFF equ 0x0
   532  0000                     global __CFG_CP$OFF
   533                           __CFG_CP$OFF equ 0x0
   534  0000                     global __CFG_CPD$OFF
   535                           __CFG_CPD$OFF equ 0x0
   536  0000                     	file	"C:\Users\abaker\AppData\Local\Temp\sokg."
   537                           	line	#
   538                           psect cinit,class=CODE,delta=2
   539                           global start_initialization
   540                           start_initialization:
   541  000C                     
   542                           global __initialization
   543                           __initialization:
   544  000C                     psect	bssBANK0,class=BANK0,space=1,noexec
   545                           global __pbssBANK0
   546                           __pbssBANK0:
   547  0020                     _EdgeDetect:
   548  0020                            ds      1
   549  0020                     
   550                           _DataState:
   551  0021                            ds      1
   552  0021                     
   553                           _Addressed:
   554  0022                            ds      1
   555  0022                     
   556                           _OneWireMode:
   557  0023                            ds      1
   558  0023                     
   559                           _DoneSend:
   560  0024                            ds      1
   561  0024                     
   562                           _Lamps:
   563  0025                            ds      1
   564  0025                     
   565                           _BoxSize:
   566  0026                            ds      1
   567  0026                     
   568                           _BitCount:
   569  0027                            ds      1
   570  0027                     
   571                           _TickCount:
   572  0028                            ds      1
   573  0028                     
   574                           _IntrData:
   575  0029                            ds      1
   576  0029                     
   577                           _RxData:
   578  002A                            ds      1
   579  002A                     
   580                           _IntrNewBit:
   581  002B                            ds      1
   582  002B                     
   583                           	file	"C:\Users\abaker\AppData\Local\Temp\sokg."
   584                           	line	#
   585                           psect clrtext,class=CODE,delta=2
   586                           global clear_ram0
   587                           ;	Called with FSR containing the base address, and
   588                           ;	W with the last address+1
   589                           clear_ram0:
   590  018A                     	clrwdt			;clear the watchdog before getting into this loop
   591  018A  0064               clrloop0:
   592  018B                     	clrf	indf		;clear RAM location pointed to by FSR
   593  018B  0180               	incf	fsr,f		;increment pointer
   594  018C  0A84               	xorwf	fsr,w		;XOR with final address
   595  018D  0604               	btfsc	status,2	;have we reached the end yet?
   596  018E  1903               	retlw	0		;all done for this memory range, return
   597  018F  3400               	xorwf	fsr,w		;XOR again to restore value
   598  0190  0604               	goto	clrloop0		;do the next byte
   599  0191  298B               
   600                           ; Clear objects allocated to BANK0
   601                           psect cinit,class=CODE,delta=2,merge=1
   602                           	bcf	status, 7	;select IRP bank0
   603  000C  1383               	movlw	low(__pbssBANK0)
   604  000D  3020               	movwf	fsr
   605  000E  0084               	movlw	low((__pbssBANK0)+0Ch)
   606  000F  302C               	fcall	clear_ram0
   607  0010  218A               psect cinit,class=CODE,delta=2,merge=1
   608                           global end_of_initialization,__end_of__initialization
   609                           
   610                           ;End of C runtime variable initialization code
   611                           
   612                           end_of_initialization:
   613  0011                     __end_of__initialization:
   614  0011                     clrf status
   615  0011  0183               ljmp _main	;jump to C main() function
   616  0012  2813               psect	cstackCOMMON,class=COMMON,space=1,noexec
   617                           global __pcstackCOMMON
   618                           __pcstackCOMMON:
   619  0000                     ??_Initialise:	; 1 bytes @ 0x0
   620  0000                     ??_UARTInit:	; 1 bytes @ 0x0
   621  0000                     ??_BitDataInit:	; 1 bytes @ 0x0
   622  0000                     ??_EdgeIntr:	; 1 bytes @ 0x0
   623  0000                     ??_BitIntr:	; 1 bytes @ 0x0
   624  0000                     psect	cstackBANK0,class=BANK0,space=1,noexec
   625                           global __pcstackBANK0
   626                           __pcstackBANK0:
   627  002C                     ?_Initialise:	; 1 bytes @ 0x0
   628  002C                     ?_StartTickTimer:	; 1 bytes @ 0x0
   629  002C                     ?_UARTSend:	; 1 bytes @ 0x0
   630  002C                     ?_UARTInit:	; 1 bytes @ 0x0
   631  002C                     ?_BitDataInit:	; 1 bytes @ 0x0
   632  002C                     ?_main:	; 1 bytes @ 0x0
   633  002C                     ?_EdgeIntr:	; 1 bytes @ 0x0
   634  002C                     ?_BitIntr:	; 1 bytes @ 0x0
   635  002C                     ?_ISR:	; 1 bytes @ 0x0
   636  002C                     	global	BitDataInit@ModeTx
   637                           BitDataInit@ModeTx:	; 1 bytes @ 0x0
   638  002C                     	ds	1
   639  002C                     	global	BitDataInit@IntEnable
   640                           BitDataInit@IntEnable:	; 1 bytes @ 0x1
   641  002D                     	ds	1
   642  002D                     ??_StartTickTimer:	; 1 bytes @ 0x2
   643  002E                     	ds	1
   644  002E                     	global	StartTickTimer@ReSync
   645                           StartTickTimer@ReSync:	; 1 bytes @ 0x3
   646  002F                     	ds	1
   647  002F                     ??_ISR:	; 1 bytes @ 0x4
   648  0030                     	ds	2
   649  0030                     ??_UARTSend:	; 1 bytes @ 0x6
   650  0032                     	ds	2
   651  0032                     	global	UARTSend@DataValue
   652                           UARTSend@DataValue:	; 1 bytes @ 0x8
   653  0034                     	ds	1
   654  0034                     	global	UARTSend@i
   655                           UARTSend@i:	; 1 bytes @ 0x9
   656  0035                     	ds	1
   657  0035                     ??_main:	; 1 bytes @ 0xA
   658  0036                     	ds	1
   659  0036                     ;!
   660                           ;!Data Sizes:
   661                           ;!    Strings     0
   662                           ;!    Constant    0
   663                           ;!    Data        0
   664                           ;!    BSS         12
   665                           ;!    Persistent  0
   666                           ;!    Stack       0
   667                           ;!
   668                           ;!Auto Spaces:
   669                           ;!    Space          Size  Autos    Used
   670                           ;!    COMMON            0      0       0
   671                           ;!    BANK0            62     11      23
   672                           
   673                           ;!
   674                           ;!Pointer List with Targets:
   675                           ;!
   676                           ;!    None.
   677                           
   678                           
   679                           ;!
   680                           ;!Critical Paths under _main in COMMON
   681                           ;!
   682                           ;!    None.
   683                           ;!
   684                           ;!Critical Paths under _ISR in COMMON
   685                           ;!
   686                           ;!    None.
   687                           ;!
   688                           ;!Critical Paths under _main in BANK0
   689                           ;!
   690                           ;!    _main->_UARTSend
   691                           ;!
   692                           ;!Critical Paths under _ISR in BANK0
   693                           ;!
   694                           ;!    None.
   695                           
   696 ;;
   697 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   698 ;;
   699                           
   700                           ;!
   701                           ;!Call Graph Tables:
   702                           ;!
   703                           ;! ---------------------------------------------------------------------------------
   704                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   705                           ;! ---------------------------------------------------------------------------------
   706                           ;! (0) _main                                                 1     1      0     203
   707                           ;!                                             10 BANK0      1     1      0
   708                           ;!                        _BitDataInit
   709                           ;!                         _Initialise
   710                           ;!                     _StartTickTimer
   711                           ;!                           _UARTSend
   712                           ;! ---------------------------------------------------------------------------------
   713                           ;! (1) _UARTSend                                             4     4      0      69
   714                           ;!                                              6 BANK0      4     4      0
   715                           ;! ---------------------------------------------------------------------------------
   716                           ;! (4) _StartTickTimer                                       2     2      0      89
   717                           ;!                        _BitDataInit
   718                           ;! ---------------------------------------------------------------------------------
   719                           ;! (5) _BitDataInit                                          2     2      0      45
   720                           ;! ---------------------------------------------------------------------------------
   721                           ;! (1) _Initialise                                           0     0      0       0
   722                           ;!                           _UARTInit
   723                           ;! ---------------------------------------------------------------------------------
   724                           ;! (2) _UARTInit                                             0     0      0       0
   725                           ;! ---------------------------------------------------------------------------------
   726                           ;! Estimated maximum stack depth 5
   727                           ;! ---------------------------------------------------------------------------------
   728                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   729                           ;! ---------------------------------------------------------------------------------
   730                           ;! (3) _ISR                                                  2     2      0      89
   731                           ;!                                              4 BANK0      2     2      0
   732                           ;!                            _BitIntr
   733                           ;!                           _EdgeIntr
   734                           ;!                     _StartTickTimer
   735                           ;! ---------------------------------------------------------------------------------
   736                           ;! (4) _StartTickTimer                                       2     2      0      89
   737                           ;!                        _BitDataInit
   738                           ;! ---------------------------------------------------------------------------------
   739                           ;! (5) _BitDataInit                                          2     2      0      45
   740                           ;! ---------------------------------------------------------------------------------
   741                           ;! (4) _EdgeIntr                                             0     0      0       0
   742                           ;! ---------------------------------------------------------------------------------
   743                           ;! (4) _BitIntr                                              0     0      0       0
   744                           ;! ---------------------------------------------------------------------------------
   745                           ;! Estimated maximum stack depth 5
   746                           ;! ---------------------------------------------------------------------------------
   747                           ;!
   748                           ;! Call Graph Graphs:
   749                           ;!
   750                           ;! _main (ROOT)
   751                           ;!   _BitDataInit
   752                           ;!   _Initialise
   753                           ;!     _UARTInit
   754                           ;!   _StartTickTimer
   755                           ;!     _BitDataInit
   756                           ;!   _UARTSend
   757                           ;!
   758                           ;! _ISR (ROOT)
   759                           ;!   _BitIntr
   760                           ;!   _EdgeIntr
   761                           ;!   _StartTickTimer
   762                           ;!     _BitDataInit
   763                           ;!
   764                           
   765                           ;! Address spaces:
   766                           
   767                           ;!Name               Size   Autos  Total    Cost      Usage
   768                           ;!BITCOMMON            0      0       0       0        0.0%
   769                           ;!EEDATA              80      0       0       0        0.0%
   770                           ;!NULL                 0      0       0       0        0.0%
   771                           ;!CODE                 0      0       0       0        0.0%
   772                           ;!BITSFR0              0      0       0       1        0.0%
   773                           ;!SFR0                 0      0       0       1        0.0%
   774                           ;!COMMON               0      0       0       1        0.0%
   775                           ;!BITSFR1              0      0       0       2        0.0%
   776                           ;!SFR1                 0      0       0       2        0.0%
   777                           ;!STACK                0      0       0       2        0.0%
   778                           ;!BITBANK0            3E      0       0       3        0.0%
   779                           ;!BANK0               3E      B      17       4       37.1%
   780                           ;!ABS                  0      0      17       5        0.0%
   781                           ;!DATA                 0      0      17       6        0.0%
   782                           
   783                           	global	_main
   784                           
   785 ;; *************** function _main *****************
   786 ;; Defined at:
   787 ;;		line 75 in file "main.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, status,2, status,0, pclath, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : B00/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0
   801 ;;      Params:         0       0
   802 ;;      Locals:         0       0
   803 ;;      Temps:          0       1
   804 ;;      Totals:         0       1
   805 ;;Total ram usage:        1 bytes
   806 ;; Hardware stack levels required when called:    5
   807 ;; This function calls:
   808 ;;		_BitDataInit
   809 ;;		_Initialise
   810 ;;		_StartTickTimer
   811 ;;		_UARTSend
   812 ;; This function is called by:
   813 ;;		Startup code after reset
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   817                           	file	"main.c"
   818                           	line	75
   819                           global __pmaintext
   820                           __pmaintext:	;psect for function _main
   821  0013                     psect	maintext
   822                           	file	"main.c"
   823                           	line	75
   824                           	global	__size_of_main
   825                           	__size_of_main	equ	__end_of_main-_main
   826  00A3                     	
   827                           _main:	
   828  0013                     ;incstack = 0
   829                           	opt	stack 3
   830                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   831                           	line	77
   832                           	
   833                           l1030:	
   834  0013                     ;main.c: 77:                     StartTickTimer( 1);
   835                           	fcall	_Initialise
   836  0013  212A               	line	80
   837                           ;main.c: 80:             }
   838                           	movlw	low(0)
   839  0014  3000               	fcall	_BitDataInit
   840  0015  2164               	line	83
   841                           	
   842                           l1032:	
   843  0016                     ;main.c: 83: 
   844                           	bsf	(11),7	;volatile
   845  0016  178B               	goto	l1034
   846  0017  2818               	line	85
   847                           ;main.c: 85:                 {
   848                           	
   849                           l48:	
   850  0018                     	line	87
   851                           	
   852                           l1034:	
   853  0018                     ;main.c: 86:                     BitCount = 0;;main.c: 87: 
   854                           	bcf	status, 5	;RP0=0, select bank0
   855  0018  1283               		decf	((_IntrNewBit)),w
   856  0019  032B               	btfss	status,2
   857  001A  1D03               	goto	u361
   858  001B  281D               	goto	u360
   859  001C  281E               u361:
   860  001D                     	goto	l1098
   861  001D  289E               u360:
   862  001E                     	line	93
   863                           	
   864                           l1036:	
   865  001E                     ;main.c: 88:                     if ((RxData&0x1F)==3);main.c: 93:                      
                                    RC3=0;
   866                           	bcf	(11),5	;volatile
   867  001E  128B               	line	94
   868                           	
   869                           l1038:	
   870  001F                     ;main.c: 94: 
   871                           	movf	(_IntrData),w
   872  001F  0829               	movwf	(??_main+0)+0
   873  0020  00B6               	movf	(??_main+0)+0,w
   874  0021  0836               	movwf	(_RxData)
   875  0022  00AA               	line	95
   876                           	
   877                           l1040:	
   878  0023                     ;main.c: 95:                     }
   879                           	clrf	(_IntrNewBit)
   880  0023  01AB               	line	96
   881                           	
   882                           l1042:	
   883  0024                     ;main.c: 96:                     else
   884                           	bcf	(11),5	;volatile
   885  0024  128B               	line	99
   886                           	
   887                           l1044:	
   888  0025                     ;main.c: 99:                     }
   889                           	movlw	low(01h)
   890  0025  3001               	movwf	(??_main+0)+0
   891  0026  00B6               	movf	(??_main+0)+0,w
   892  0027  0836               	addwf	(_BitCount),f
   893  0028  07A7               	line	102
   894                           	
   895                           l1046:	
   896  0029                     ;main.c: 102:                 }
   897                           	movf	((_DataState)),w
   898  0029  0821               	btfss	status,2
   899  002A  1D03               	goto	u371
   900  002B  282D               	goto	u370
   901  002C  282E               u371:
   902  002D                     	goto	l1062
   903  002D  2843               u370:
   904  002E                     	line	105
   905                           	
   906                           l1048:	
   907  002E                     ;main.c: 103:             };main.c: 105:             {
   908                           	movlw	low(0Fh)
   909  002E  300F               	andwf	(_RxData),w
   910  002F  052A               	movwf	(??_main+0)+0
   911  0030  00B6               		movlw	9
   912  0031  3009               	xorwf	((??_main+0)+0),w
   913  0032  0636               	btfss	status,2
   914  0033  1D03               	goto	u381
   915  0034  2836               	goto	u380
   916  0035  2837               u381:
   917  0036                     	goto	l1098
   918  0036  289E               u380:
   919  0037                     	line	109
   920                           	
   921                           l1050:	
   922  0037                     ;main.c: 106: ;main.c: 109:                     BitCount = 0;
   923                           	bsf	(61/8),(61)&7	;volatile
   924  0037  1687               	line	110
   925                           ;main.c: 110: 
   926                           	bcf	(61/8),(61)&7	;volatile
   927  0038  1287               	line	113
   928                           	
   929                           l1052:	
   930  0039                     ;main.c: 113:                 }
   931                           	clrf	(_BitCount)
   932  0039  01A7               	line	114
   933                           ;main.c: 114:             }
   934                           	clrf	(_Addressed)
   935  003A  01A2               	line	115
   936                           	
   937                           l1054:	
   938  003B                     ;main.c: 115:             else if (DataState==DATA_LAMPS)
   939                           	clrf	(_DataState)
   940  003B  01A1               	incf	(_DataState),f
   941  003C  0AA1               	line	118
   942                           	
   943                           l1056:	
   944  003D                     ;main.c: 118: 
   945                           	bcf	(11),7	;volatile
   946  003D  138B               	line	119
   947                           	
   948                           l1058:	
   949  003E                     ;main.c: 119:                 if (Addressed==1)
   950                           	movlw	low(01h)
   951  003E  3001               	fcall	_StartTickTimer
   952  003F  20F5               	line	120
   953                           	
   954                           l1060:	
   955  0040                     ;main.c: 120:                 {
   956                           	bsf	(11),7	;volatile
   957  0040  178B               	goto	l1098
   958  0041  289E               	line	121
   959                           ;main.c: 121: 
   960                           	
   961                           l51:	
   962  0042                     	line	122
   963                           ;main.c: 122: 
   964                           	goto	l1098
   965  0042  289E               	line	123
   966                           ;main.c: 123:                     Lamps = RxData;
   967                           	
   968                           l50:	
   969  0043                     	
   970                           l1062:	
   971  0043                     	bcf	status, 5	;RP0=0, select bank0
   972  0043  1283               		decf	((_DataState)),w
   973  0044  0321               	btfss	status,2
   974  0045  1D03               	goto	u391
   975  0046  2848               	goto	u390
   976  0047  2849               u391:
   977  0048                     	goto	l1076
   978  0048  2866               u390:
   979  0049                     	line	126
   980                           	
   981                           l1064:	
   982  0049                     ;main.c: 124: ;main.c: 126:                     RC4=0;
   983                           	movlw	low(05h)
   984  0049  3005               	subwf	(_BitCount),w
   985  004A  0227               	skipc
   986  004B  1C03               	goto	u401
   987  004C  284E               	goto	u400
   988  004D  284F               u401:
   989  004E                     	goto	l1098
   990  004E  289E               u400:
   991  004F                     	line	128
   992                           	
   993                           l1066:	
   994  004F                     ;main.c: 127: ;main.c: 128:                 }
   995                           	clrf	(_BitCount)
   996  004F  01A7               	line	130
   997                           	
   998                           l1068:	
   999  0050                     ;main.c: 130:                 if (BitCount>=BoxSize)
  1000                           	movlw	low(01Fh)
  1001  0050  301F               	andwf	(_RxData),w
  1002  0051  052A               	movwf	(??_main+0)+0
  1003  0052  00B6               		movlw	3
  1004  0053  3003               	xorwf	((??_main+0)+0),w
  1005  0054  0636               	btfss	status,2
  1006  0055  1D03               	goto	u411
  1007  0056  2858               	goto	u410
  1008  0057  2859               u411:
  1009  0058                     	goto	l1072
  1010  0058  285E               u410:
  1011  0059                     	line	132
  1012                           	
  1013                           l1070:	
  1014  0059                     ;main.c: 131:                 {;main.c: 132:                     BitCount = 0;
  1015                           	clrf	(_Addressed)
  1016  0059  01A2               	incf	(_Addressed),f
  1017  005A  0AA2               	line	134
  1018                           ;main.c: 134:                 }
  1019                           	bsf	(59/8),(59)&7	;volatile
  1020  005B  1587               	line	135
  1021                           ;main.c: 135:             }
  1022                           	bcf	(59/8),(59)&7	;volatile
  1023  005C  1187               	line	137
  1024                           ;main.c: 137: 
  1025                           	goto	l1074
  1026  005D  2860               	line	138
  1027                           ;main.c: 138: 
  1028                           	
  1029                           l55:	
  1030  005E                     	line	140
  1031                           	
  1032                           l1072:	
  1033  005E                     ;main.c: 139:         if (TickCount==8);main.c: 140:         {
  1034                           	clrf	(_Addressed)
  1035  005E  01A2               	goto	l1074
  1036  005F  2860               	line	141
  1037                           ;main.c: 141:             if (DoneSend==0)
  1038                           	
  1039                           l56:	
  1040  0060                     	line	143
  1041                           	
  1042                           l1074:	
  1043  0060                     ;main.c: 143:                 UARTSend( Lamps);
  1044                           	movlw	low(02h)
  1045  0060  3002               	movwf	(??_main+0)+0
  1046  0061  00B6               	movf	(??_main+0)+0,w
  1047  0062  0836               	movwf	(_DataState)
  1048  0063  00A1               	goto	l1098
  1049  0064  289E               	line	144
  1050                           ;main.c: 144:                 DoneSend = 1;
  1051                           	
  1052                           l54:	
  1053  0065                     	line	145
  1054                           ;main.c: 145:             }
  1055                           	goto	l1098
  1056  0065  289E               	line	146
  1057                           ;main.c: 146:         }
  1058                           	
  1059                           l53:	
  1060  0066                     	
  1061                           l1076:	
  1062  0066                     		movlw	2
  1063  0066  3002               	xorwf	((_DataState)),w
  1064  0067  0621               	btfss	status,2
  1065  0068  1D03               	goto	u421
  1066  0069  286B               	goto	u420
  1067  006A  286C               u421:
  1068  006B                     	goto	l1084
  1069  006B  287E               u420:
  1070  006C                     	line	149
  1071                           	
  1072                           l1078:	
  1073  006C                     ;main.c: 147:         else;main.c: 149:             DoneSend = 0;
  1074                           	movlw	low(05h)
  1075  006C  3005               	subwf	(_BitCount),w
  1076  006D  0227               	skipc
  1077  006E  1C03               	goto	u431
  1078  006F  2871               	goto	u430
  1079  0070  2872               u431:
  1080  0071                     	goto	l1098
  1081  0071  289E               u430:
  1082  0072                     	line	151
  1083                           	
  1084                           l1080:	
  1085  0072                     ;main.c: 150:         };main.c: 151:     }
  1086                           	clrf	(_BitCount)
  1087  0072  01A7               	line	153
  1088                           	
  1089                           l1082:	
  1090  0073                     ;main.c: 153: }
  1091                           	movf	(_RxData),w
  1092  0073  082A               	andlw	01Fh
  1093  0074  391F               	movwf	(??_main+0)+0
  1094  0075  00B6               	movf	(??_main+0)+0,w
  1095  0076  0836               	movwf	(_BoxSize)
  1096  0077  00A6               	line	154
  1097                           	movlw	low(03h)
  1098  0078  3003               	movwf	(??_main+0)+0
  1099  0079  00B6               	movf	(??_main+0)+0,w
  1100  007A  0836               	movwf	(_DataState)
  1101  007B  00A1               	goto	l1098
  1102  007C  289E               	line	155
  1103                           	
  1104                           l59:	
  1105  007D                     	line	156
  1106                           	goto	l1098
  1107  007D  289E               	line	157
  1108                           	
  1109                           l58:	
  1110  007E                     	
  1111                           l1084:	
  1112  007E                     		movlw	3
  1113  007E  3003               	xorwf	((_DataState)),w
  1114  007F  0621               	btfss	status,2
  1115  0080  1D03               	goto	u441
  1116  0081  2883               	goto	u440
  1117  0082  2884               u441:
  1118  0083                     	goto	l1098
  1119  0083  289E               u440:
  1120  0084                     	line	161
  1121                           	
  1122                           l1086:	
  1123  0084                     		decf	((_Addressed)),w
  1124  0084  0322               	btfss	status,2
  1125  0085  1D03               	goto	u451
  1126  0086  2888               	goto	u450
  1127  0087  2889               u451:
  1128  0088                     	goto	l62
  1129  0088  288F               u450:
  1130  0089                     	line	165
  1131                           	
  1132                           l1088:	
  1133  0089                     	movf	(_RxData),w
  1134  0089  082A               	movwf	(??_main+0)+0
  1135  008A  00B6               	movf	(??_main+0)+0,w
  1136  008B  0836               	movwf	(_Lamps)
  1137  008C  00A5               	line	167
  1138                           	
  1139                           l1090:	
  1140  008D                     	bsf	(60/8),(60)&7	;volatile
  1141  008D  1607               	line	168
  1142                           	
  1143                           l1092:	
  1144  008E                     	bcf	(60/8),(60)&7	;volatile
  1145  008E  1207               	line	170
  1146                           	
  1147                           l62:	
  1148  008F                     	line	172
  1149                           	movf	(_BoxSize),w
  1150  008F  0826               	subwf	(_BitCount),w
  1151  0090  0227               	skipc
  1152  0091  1C03               	goto	u461
  1153  0092  2894               	goto	u460
  1154  0093  2895               u461:
  1155  0094                     	goto	l1098
  1156  0094  289E               u460:
  1157  0095                     	line	174
  1158                           	
  1159                           l1094:	
  1160  0095                     	clrf	(_BitCount)
  1161  0095  01A7               	line	175
  1162                           	
  1163                           l1096:	
  1164  0096                     	clrf	(_DataState)
  1165  0096  01A1               	incf	(_DataState),f
  1166  0097  0AA1               	goto	l1098
  1167  0098  289E               	line	176
  1168                           	
  1169                           l63:	
  1170  0099                     	goto	l1098
  1171  0099  289E               	line	177
  1172                           	
  1173                           l61:	
  1174  009A                     	goto	l1098
  1175  009A  289E               	
  1176                           l60:	
  1177  009B                     	goto	l1098
  1178  009B  289E               	
  1179                           l57:	
  1180  009C                     	goto	l1098
  1181  009C  289E               	
  1182                           l52:	
  1183  009D                     	goto	l1098
  1184  009D  289E               	line	178
  1185                           	
  1186                           l49:	
  1187  009E                     	line	181
  1188                           	
  1189                           l1098:	
  1190  009E                     		movlw	8
  1191  009E  3008               	bcf	status, 5	;RP0=0, select bank0
  1192  009F  1283               	xorwf	((_TickCount)),w
  1193  00A0  0628               	btfss	status,2
  1194  00A1  1D03               	goto	u471
  1195  00A2  28A4               	goto	u470
  1196  00A3  28A5               u471:
  1197  00A4                     	goto	l1106
  1198  00A4  28B1               u470:
  1199  00A5                     	line	183
  1200                           	
  1201                           l1100:	
  1202  00A5                     	movf	((_DoneSend)),w
  1203  00A5  0824               	btfss	status,2
  1204  00A6  1D03               	goto	u481
  1205  00A7  28A9               	goto	u480
  1206  00A8  28AA               u481:
  1207  00A9                     	goto	l1034
  1208  00A9  2818               u480:
  1209  00AA                     	line	185
  1210                           	
  1211                           l1102:	
  1212  00AA                     	movf	(_Lamps),w
  1213  00AA  0825               	fcall	_UARTSend
  1214  00AB  20B6               	line	186
  1215                           	
  1216                           l1104:	
  1217  00AC                     	bcf	status, 5	;RP0=0, select bank0
  1218  00AC  1283               	clrf	(_DoneSend)
  1219  00AD  01A4               	incf	(_DoneSend),f
  1220  00AE  0AA4               	goto	l1034
  1221  00AF  2818               	line	187
  1222                           	
  1223                           l65:	
  1224  00B0                     	line	188
  1225                           	goto	l1034
  1226  00B0  2818               	line	189
  1227                           	
  1228                           l64:	
  1229  00B1                     	line	191
  1230                           	
  1231                           l1106:	
  1232  00B1                     	clrf	(_DoneSend)
  1233  00B1  01A4               	goto	l1034
  1234  00B2  2818               	line	192
  1235                           	
  1236                           l66:	
  1237  00B3                     	goto	l1034
  1238  00B3  2818               	line	193
  1239                           	
  1240                           l67:	
  1241  00B4                     	goto	l1034
  1242  00B4  2818               	
  1243                           l68:	
  1244  00B5                     	line	195
  1245                           	
  1246                           l69:	
  1247  00B5                     	global	start
  1248                           	ljmp	start
  1249  00B5  280B               	opt stack 0
  1250                           GLOBAL	__end_of_main
  1251                           	__end_of_main:
  1252  00B6                     	signat	_main,89
  1253                           	global	_UARTSend
  1254                           
  1255 ;; *************** function _UARTSend *****************
  1256 ;; Defined at:
  1257 ;;		line 96 in file "user.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;  DataValue       1    wreg     unsigned char 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  DataValue       1    8[BANK0 ] unsigned char 
  1262 ;;  i               1    9[BANK0 ] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0
  1272 ;;      Params:         0       0
  1273 ;;      Locals:         0       2
  1274 ;;      Temps:          0       2
  1275 ;;      Totals:         0       4
  1276 ;;Total ram usage:        4 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    3
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1286                           	file	"user.c"
  1287                           	line	96
  1288                           global __ptext1
  1289                           __ptext1:	;psect for function _UARTSend
  1290  00B6                     psect	text1
  1291                           	file	"user.c"
  1292                           	line	96
  1293                           	global	__size_of_UARTSend
  1294                           	__size_of_UARTSend	equ	__end_of_UARTSend-_UARTSend
  1295  003F                     	
  1296                           _UARTSend:	
  1297  00B6                     ;incstack = 0
  1298                           	opt	stack 4
  1299                           ; Regs used in _UARTSend: [wreg+status,2+status,0]
  1300                           ;UARTSend@DataValue stored from wreg
  1301                           	bcf	status, 5	;RP0=0, select bank0
  1302  00B6  1283               	movwf	(UARTSend@DataValue)
  1303  00B7  00B4               	line	99
  1304                           	
  1305                           l998:	
  1306  00B8                     ;user.c: 96: void UARTSend( uint8_t DataValue);user.c: 97: {;user.c: 99:  RA0 = 0;
  1307                           	bcf	(40/8),(40)&7	;volatile
  1308  00B8  1005               	line	100
  1309                           	
  1310                           l1000:	
  1311  00B9                     ;user.c: 100:  _delay((unsigned long)(((1000000/2400))*(20000000/4000000.0)));
  1312                           	opt asmopt_push
  1313                           opt asmopt_off
  1314                           movlw	3
  1315  00B9  3003               movwf	((??_UARTSend+0)+0+1),f
  1316  00BA  00B3               	movlw	178
  1317  00BB  30B2               movwf	((??_UARTSend+0)+0),f
  1318  00BC  00B2               	u567:
  1319  00BD                     decfsz	((??_UARTSend+0)+0),f
  1320  00BD  0BB2               	goto	u567
  1321  00BE  28BD               	decfsz	((??_UARTSend+0)+0+1),f
  1322  00BF  0BB3               	goto	u567
  1323  00C0  28BD               	nop
  1324  00C1  0000               opt asmopt_pop
  1325                           
  1326                           	line	102
  1327                           	
  1328                           l1002:	
  1329  00C2                     ;user.c: 102:  for ( uint8_t i = 0; i < 8; i++ )
  1330                           	bcf	status, 5	;RP0=0, select bank0
  1331  00C2  1283               	clrf	(UARTSend@i)
  1332  00C3  01B5               	
  1333                           l1004:	
  1334  00C4                     	movlw	low(08h)
  1335  00C4  3008               	subwf	(UARTSend@i),w
  1336  00C5  0235               	skipc
  1337  00C6  1C03               	goto	u311
  1338  00C7  28C9               	goto	u310
  1339  00C8  28CA               u311:
  1340  00C9                     	goto	l149
  1341  00C9  28CC               u310:
  1342  00CA                     	goto	l150
  1343  00CA  28EA               	
  1344                           l1006:	
  1345  00CB                     	goto	l150
  1346  00CB  28EA               	
  1347                           l149:	
  1348  00CC                     	line	105
  1349                           ;user.c: 103:  {;user.c: 105:   RA0 = (DataValue&0x1) ? 1 : 0;
  1350                           	btfsc	(UARTSend@DataValue),(0)&7
  1351  00CC  1834               	goto	u321
  1352  00CD  28CF               	goto	u320
  1353  00CE  28D2               	
  1354                           u321:
  1355  00CF                     	bcf	status, 5	;RP0=0, select bank0
  1356  00CF  1283               	bsf	(40/8),(40)&7	;volatile
  1357  00D0  1405               	goto	u334
  1358  00D1  28D4               u320:
  1359  00D2                     	bcf	status, 5	;RP0=0, select bank0
  1360  00D2  1283               	bcf	(40/8),(40)&7	;volatile
  1361  00D3  1005               u334:
  1362  00D4                     	line	106
  1363                           	
  1364                           l1008:	
  1365  00D4                     ;user.c: 106:         DataValue >>= 1;
  1366                           	clrc
  1367  00D4  1003               	rrf	(UARTSend@DataValue),f
  1368  00D5  0CB4               
  1369                           	line	107
  1370                           ;user.c: 107:      _delay((unsigned long)(((1000000/2400))*(20000000/4000000.0)));
  1371                           	opt asmopt_push
  1372                           opt asmopt_off
  1373                           movlw	3
  1374  00D6  3003               movwf	((??_UARTSend+0)+0+1),f
  1375  00D7  00B3               	movlw	178
  1376  00D8  30B2               movwf	((??_UARTSend+0)+0),f
  1377  00D9  00B2               	u577:
  1378  00DA                     decfsz	((??_UARTSend+0)+0),f
  1379  00DA  0BB2               	goto	u577
  1380  00DB  28DA               	decfsz	((??_UARTSend+0)+0+1),f
  1381  00DC  0BB3               	goto	u577
  1382  00DD  28DA               	nop
  1383  00DE  0000               opt asmopt_pop
  1384                           
  1385                           	line	108
  1386                           	
  1387                           l1010:	
  1388  00DF                     ;user.c: 108:  }
  1389                           	movlw	low(01h)
  1390  00DF  3001               	bcf	status, 5	;RP0=0, select bank0
  1391  00E0  1283               	movwf	(??_UARTSend+0)+0
  1392  00E1  00B2               	movf	(??_UARTSend+0)+0,w
  1393  00E2  0832               	addwf	(UARTSend@i),f
  1394  00E3  07B5               	
  1395                           l1012:	
  1396  00E4                     	movlw	low(08h)
  1397  00E4  3008               	subwf	(UARTSend@i),w
  1398  00E5  0235               	skipc
  1399  00E6  1C03               	goto	u341
  1400  00E7  28E9               	goto	u340
  1401  00E8  28EA               u341:
  1402  00E9                     	goto	l149
  1403  00E9  28CC               u340:
  1404  00EA                     	
  1405                           l150:	
  1406  00EA                     	line	111
  1407                           ;user.c: 111:  RA0 = 1;
  1408                           	bsf	(40/8),(40)&7	;volatile
  1409  00EA  1405               	line	112
  1410                           	
  1411                           l1014:	
  1412  00EB                     ;user.c: 112:  _delay((unsigned long)(((1000000/2400))*(20000000/4000000.0)));
  1413                           	opt asmopt_push
  1414                           opt asmopt_off
  1415                           movlw	3
  1416  00EB  3003               movwf	((??_UARTSend+0)+0+1),f
  1417  00EC  00B3               	movlw	178
  1418  00ED  30B2               movwf	((??_UARTSend+0)+0),f
  1419  00EE  00B2               	u587:
  1420  00EF                     decfsz	((??_UARTSend+0)+0),f
  1421  00EF  0BB2               	goto	u587
  1422  00F0  28EF               	decfsz	((??_UARTSend+0)+0+1),f
  1423  00F1  0BB3               	goto	u587
  1424  00F2  28EF               	nop
  1425  00F3  0000               opt asmopt_pop
  1426                           
  1427                           	line	113
  1428                           	
  1429                           l151:	
  1430  00F4                     	return
  1431  00F4  0008               	opt stack 0
  1432                           GLOBAL	__end_of_UARTSend
  1433                           	__end_of_UARTSend:
  1434  00F5                     	signat	_UARTSend,4217
  1435                           	global	_Initialise
  1436                           
  1437 ;; *************** function _Initialise *****************
  1438 ;; Defined at:
  1439 ;;		line 14 in file "system.c"
  1440 ;; Parameters:    Size  Location     Type
  1441 ;;		None
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, status,0, pclath, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMMON   BANK0
  1453 ;;      Params:         0       0
  1454 ;;      Locals:         0       0
  1455 ;;      Temps:          0       0
  1456 ;;      Totals:         0       0
  1457 ;;Total ram usage:        0 bytes
  1458 ;; Hardware stack levels used:    1
  1459 ;; Hardware stack levels required when called:    4
  1460 ;; This function calls:
  1461 ;;		_UARTInit
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1467                           	file	"system.c"
  1468                           	line	14
  1469                           global __ptext2
  1470                           __ptext2:	;psect for function _Initialise
  1471  012A                     psect	text2
  1472                           	file	"system.c"
  1473                           	line	14
  1474                           	global	__size_of_Initialise
  1475                           	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
  1476  001D                     	
  1477                           _Initialise:	
  1478  012A                     ;incstack = 0
  1479                           	opt	stack 3
  1480                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
  1481                           	line	17
  1482                           	
  1483                           l944:	
  1484  012A                     ;system.c: 17:     CMCON = 0x07;
  1485                           	movlw	low(07h)
  1486  012A  3007               	bcf	status, 5	;RP0=0, select bank0
  1487  012B  1283               	movwf	(25)	;volatile
  1488  012C  0099               	line	18
  1489                           ;system.c: 18:     TRISA = 0x3F;
  1490                           	movlw	low(03Fh)
  1491  012D  303F               	bsf	status, 5	;RP0=1, select bank1
  1492  012E  1683               	movwf	(133)^080h	;volatile
  1493  012F  0085               	line	19
  1494                           	
  1495                           l946:	
  1496  0130                     ;system.c: 19:     OPTION_REGbits.INTEDG = 1;
  1497                           	bsf	(129)^080h,6	;volatile
  1498  0130  1701               	line	22
  1499                           	
  1500                           l948:	
  1501  0131                     ;system.c: 22:     TRISC = 0;
  1502                           	clrf	(135)^080h	;volatile
  1503  0131  0187               	line	25
  1504                           	
  1505                           l950:	
  1506  0132                     ;system.c: 25:     T1CONbits.TMR1CS = 0;
  1507                           	bcf	status, 5	;RP0=0, select bank0
  1508  0132  1283               	bcf	(16),1	;volatile
  1509  0133  1090               	line	26
  1510                           	
  1511                           l952:	
  1512  0134                     ;system.c: 26:     T1CONbits.T1CKPS = 0;
  1513                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
  1514  0134  30CF               	andwf	(16),f	;volatile
  1515  0135  0590               	line	27
  1516                           	
  1517                           l954:	
  1518  0136                     ;system.c: 27:     T1CONbits.nT1SYNC = 1;
  1519                           	bsf	(16),2	;volatile
  1520  0136  1510               	line	28
  1521                           	
  1522                           l956:	
  1523  0137                     ;system.c: 28:     T1CONbits.TMR1GE = 0;
  1524                           	bcf	(16),6	;volatile
  1525  0137  1310               	line	29
  1526                           	
  1527                           l958:	
  1528  0138                     ;system.c: 29:     TMR1H = 0x3C;
  1529                           	movlw	low(03Ch)
  1530  0138  303C               	movwf	(15)	;volatile
  1531  0139  008F               	line	30
  1532                           	
  1533                           l960:	
  1534  013A                     ;system.c: 30:     TMR1L = 0xB0;
  1535                           	movlw	low(0B0h)
  1536  013A  30B0               	movwf	(14)	;volatile
  1537  013B  008E               	line	31
  1538                           	
  1539                           l962:	
  1540  013C                     ;system.c: 31:     PIR1bits.TMR1IF = 0;
  1541                           	bcf	(12),0	;volatile
  1542  013C  100C               	line	32
  1543                           	
  1544                           l964:	
  1545  013D                     ;system.c: 32:     PIE1bits.TMR1IE = 1;
  1546                           	bsf	status, 5	;RP0=1, select bank1
  1547  013D  1683               	bsf	(140)^080h,0	;volatile
  1548  013E  140C               	line	33
  1549                           	
  1550                           l966:	
  1551  013F                     ;system.c: 33:     T1CONbits.TMR1ON = 1;
  1552                           	bcf	status, 5	;RP0=0, select bank0
  1553  013F  1283               	bsf	(16),0	;volatile
  1554  0140  1410               	line	34
  1555                           	
  1556                           l968:	
  1557  0141                     ;system.c: 34:     INTCONbits.PEIE = 1;
  1558                           	bsf	(11),6	;volatile
  1559  0141  170B               	line	37
  1560                           	
  1561                           l970:	
  1562  0142                     ;system.c: 37:     OPTION_REGbits.T0CS = 0;
  1563                           	bsf	status, 5	;RP0=1, select bank1
  1564  0142  1683               	bcf	(129)^080h,5	;volatile
  1565  0143  1281               	line	38
  1566                           	
  1567                           l972:	
  1568  0144                     ;system.c: 38:     OPTION_REGbits.PSA = 1;
  1569                           	bsf	(129)^080h,3	;volatile
  1570  0144  1581               	line	47
  1571                           	
  1572                           l974:	
  1573  0145                     ;system.c: 47:     UARTInit();
  1574                           	fcall	_UARTInit
  1575  0145  2199               	line	48
  1576                           	
  1577                           l94:	
  1578  0146                     	return
  1579  0146  0008               	opt stack 0
  1580                           GLOBAL	__end_of_Initialise
  1581                           	__end_of_Initialise:
  1582  0147                     	signat	_Initialise,89
  1583                           	global	_UARTInit
  1584                           
  1585 ;; *************** function _UARTInit *****************
  1586 ;; Defined at:
  1587 ;;		line 86 in file "user.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		None
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMMON   BANK0
  1601 ;;      Params:         0       0
  1602 ;;      Locals:         0       0
  1603 ;;      Temps:          0       0
  1604 ;;      Totals:         0       0
  1605 ;;Total ram usage:        0 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    3
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_Initialise
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1615                           	file	"user.c"
  1616                           	line	86
  1617                           global __ptext3
  1618                           __ptext3:	;psect for function _UARTInit
  1619  0199                     psect	text3
  1620                           	file	"user.c"
  1621                           	line	86
  1622                           	global	__size_of_UARTInit
  1623                           	__size_of_UARTInit	equ	__end_of_UARTInit-_UARTInit
  1624  0006                     	
  1625                           _UARTInit:	
  1626  0199                     ;incstack = 0
  1627                           	opt	stack 3
  1628                           ; Regs used in _UARTInit: []
  1629                           	line	88
  1630                           	
  1631                           l942:	
  1632  0199                     ;user.c: 88:  RA0 = 1;
  1633                           	bcf	status, 5	;RP0=0, select bank0
  1634  0199  1283               	bsf	(40/8),(40)&7	;volatile
  1635  019A  1405               	line	90
  1636                           ;user.c: 90:  TRISAbits.TRISA1 = 1;
  1637                           	bsf	status, 5	;RP0=1, select bank1
  1638  019B  1683               	bsf	(133)^080h,1	;volatile
  1639  019C  1485               	line	91
  1640                           ;user.c: 91:  TRISAbits.TRISA0 = 0;
  1641                           	bcf	(133)^080h,0	;volatile
  1642  019D  1005               	line	92
  1643                           	
  1644                           l146:	
  1645  019E                     	return
  1646  019E  0008               	opt stack 0
  1647                           GLOBAL	__end_of_UARTInit
  1648                           	__end_of_UARTInit:
  1649  019F                     	signat	_UARTInit,89
  1650                           	global	_ISR
  1651                           
  1652 ;; *************** function _ISR *****************
  1653 ;; Defined at:
  1654 ;;		line 15 in file "interrupts.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0, pclath, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0
  1668 ;;      Params:         0       0
  1669 ;;      Locals:         0       0
  1670 ;;      Temps:          0       2
  1671 ;;      Totals:         0       2
  1672 ;;Total ram usage:        2 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    2
  1675 ;; This function calls:
  1676 ;;		_BitIntr
  1677 ;;		_EdgeIntr
  1678 ;;		_StartTickTimer
  1679 ;; This function is called by:
  1680 ;;		Interrupt level 1
  1681 ;; This function uses a non-reentrant model
  1682 ;;
  1683                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1684                           	file	"interrupts.c"
  1685                           	line	15
  1686                           global __ptext4
  1687                           __ptext4:	;psect for function _ISR
  1688  0147                     psect	text4
  1689                           	file	"interrupts.c"
  1690                           	line	15
  1691                           	global	__size_of_ISR
  1692                           	__size_of_ISR	equ	__end_of_ISR-_ISR
  1693  001D                     	
  1694                           _ISR:	
  1695  0147                     ;incstack = 0
  1696                           	opt	stack 3
  1697                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1698                           psect	intentry,class=CODE,delta=2
  1699                           global __pintentry
  1700                           __pintentry:
  1701  0004                     global interrupt_function
  1702                           interrupt_function:
  1703  0004                     	global saved_w
  1704                           	saved_w	set	btemp+0
  1705  005E                     	movwf	saved_w
  1706  0004  00DE               	swapf	status,w
  1707  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  1708  0006  1283               	movwf	(??_ISR+0)
  1709  0007  00B0               	movf	pclath,w
  1710  0008  080A               	movwf	(??_ISR+1)
  1711  0009  00B1               	ljmp	_ISR
  1712  000A  2947               psect	text4
  1713                           	line	18
  1714                           	
  1715                           i1l1130:	
  1716  0147                     ;interrupts.c: 18:     if (PIR1bits.TMR1IF==1)
  1717                           	btfss	(12),0	;volatile
  1718  0147  1C0C               	goto	u53_21
  1719  0148  294A               	goto	u53_20
  1720  0149  294B               u53_21:
  1721  014A                     	goto	i1l1134
  1722  014A  294E               u53_20:
  1723  014B                     	line	19
  1724                           	
  1725                           i1l1132:	
  1726  014B                     ;interrupts.c: 19:         StartTickTimer( 0);
  1727                           	movlw	low(0)
  1728  014B  3000               	fcall	_StartTickTimer
  1729  014C  20F5               	goto	i1l1134
  1730  014D  294E               	
  1731                           i1l166:	
  1732  014E                     	line	22
  1733                           	
  1734                           i1l1134:	
  1735  014E                     ;interrupts.c: 22:     if (INTCONbits.INTF)
  1736                           	btfss	(11),1	;volatile
  1737  014E  1C8B               	goto	u54_21
  1738  014F  2951               	goto	u54_20
  1739  0150  2952               u54_21:
  1740  0151                     	goto	i1l1140
  1741  0151  2955               u54_20:
  1742  0152                     	line	24
  1743                           	
  1744                           i1l1136:	
  1745  0152                     ;interrupts.c: 23:     {;interrupts.c: 24:         INTCONbits.INTF = 0;
  1746                           	bcf	(11),1	;volatile
  1747  0152  108B               	line	25
  1748                           	
  1749                           i1l1138:	
  1750  0153                     ;interrupts.c: 25:         EdgeIntr();
  1751                           	fcall	_EdgeIntr
  1752  0153  2192               	goto	i1l1140
  1753  0154  2955               	line	26
  1754                           ;interrupts.c: 26:     }
  1755                           	
  1756                           i1l167:	
  1757  0155                     	line	29
  1758                           	
  1759                           i1l1140:	
  1760  0155                     ;interrupts.c: 29:     if (INTCONbits.T0IF==1)
  1761                           	btfss	(11),2	;volatile
  1762  0155  1D0B               	goto	u55_21
  1763  0156  2958               	goto	u55_20
  1764  0157  2959               u55_21:
  1765  0158                     	goto	i1l169
  1766  0158  295C               u55_20:
  1767  0159                     	line	31
  1768                           	
  1769                           i1l1142:	
  1770  0159                     ;interrupts.c: 30:     {;interrupts.c: 31:         INTCONbits.T0IF= 0;
  1771                           	bcf	(11),2	;volatile
  1772  0159  110B               	line	32
  1773                           	
  1774                           i1l1144:	
  1775  015A                     ;interrupts.c: 32:         BitIntr();
  1776                           	fcall	_BitIntr
  1777  015A  217F               	goto	i1l169
  1778  015B  295C               	line	33
  1779                           ;interrupts.c: 33:     }
  1780                           	
  1781                           i1l168:	
  1782  015C                     	line	35
  1783                           	
  1784                           i1l169:	
  1785  015C                     	bcf	status, 5	;RP0=0, select bank0
  1786  015C  1283               	movf	(??_ISR+1),w
  1787  015D  0831               	movwf	pclath
  1788  015E  008A               	swapf	(??_ISR+0)^00h,w
  1789  015F  0E30               	movwf	status
  1790  0160  0083               	swapf	saved_w,f
  1791  0161  0EDE               	swapf	saved_w,w
  1792  0162  0E5E               	retfie
  1793  0163  0009               	opt stack 0
  1794                           GLOBAL	__end_of_ISR
  1795                           	__end_of_ISR:
  1796  0164                     	signat	_ISR,89
  1797                           	global	_StartTickTimer
  1798                           
  1799 ;; *************** function _StartTickTimer *****************
  1800 ;; Defined at:
  1801 ;;		line 22 in file "user.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;  ReSync          1    wreg     unsigned char 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  ReSync          1    3[BANK0 ] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, pclath, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0
  1815 ;;      Params:         0       0
  1816 ;;      Locals:         0       0
  1817 ;;      Temps:          0       0
  1818 ;;      Totals:         0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    4
  1822 ;; This function calls:
  1823 ;;		_BitDataInit
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;;		_ISR
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1830                           	file	"user.c"
  1831                           	line	22
  1832                           global __ptext5
  1833                           __ptext5:	;psect for function _StartTickTimer
  1834  00F5                     psect	text5
  1835                           	file	"user.c"
  1836                           	line	22
  1837                           	global	__size_of_StartTickTimer
  1838                           	__size_of_StartTickTimer	equ	__end_of_StartTickTimer-_StartTickTimer
  1839  0035                     	
  1840                           _StartTickTimer:	
  1841  00F5                     ;incstack = 0
  1842                           	opt	stack 0
  1843                           ; Regs used in _StartTickTimer: [wreg+status,2+status,0+pclath+cstack]
  1844                           ;StartTickTimer@ReSync stored from wreg
  1845                           	bcf	status, 5	;RP0=0, select bank0
  1846  00F5  1283               	movwf	(StartTickTimer@ReSync)
  1847  00F6  00AF               	line	25
  1848                           	
  1849                           i1l976:	
  1850  00F7                     	bcf	(16),0	;volatile
  1851  00F7  1010               	line	27
  1852                           	bcf	(12),0	;volatile
  1853  00F8  100C               	line	29
  1854                           	
  1855                           i1l978:	
  1856  00F9                     	movlw	low(03Ch)
  1857  00F9  303C               	movwf	(15)	;volatile
  1858  00FA  008F               	line	30
  1859                           	movlw	low(0B0h)
  1860  00FB  30B0               	movwf	(14)	;volatile
  1861  00FC  008E               	line	32
  1862                           	
  1863                           i1l980:	
  1864  00FD                     	bsf	(16),0	;volatile
  1865  00FD  1410               	line	37
  1866                           	
  1867                           i1l982:	
  1868  00FE                     	movlw	low(01h)
  1869  00FE  3001               	movwf	(??_StartTickTimer+0)+0
  1870  00FF  00AE               	movf	(??_StartTickTimer+0)+0,w
  1871  0100  082E               	addwf	(_EdgeDetect),f
  1872  0101  07A0               	movlw	low(02h)
  1873  0102  3002               	subwf	((_EdgeDetect)),w
  1874  0103  0220               	skipc
  1875  0104  1C03               	goto	u26_21
  1876  0105  2907               	goto	u26_20
  1877  0106  2908               u26_21:
  1878  0107                     	goto	i1l990
  1879  0107  2915               u26_20:
  1880  0108                     	
  1881                           i1l984:	
  1882  0108                     	movf	((StartTickTimer@ReSync)),w
  1883  0108  082F               	btfss	status,2
  1884  0109  1D03               	goto	u27_21
  1885  010A  290C               	goto	u27_20
  1886  010B  290D               u27_21:
  1887  010C                     	goto	i1l990
  1888  010C  2915               u27_20:
  1889  010D                     	
  1890                           i1l986:	
  1891  010D                     	movf	((_OneWireMode)),w
  1892  010D  0823               	btfss	status,2
  1893  010E  1D03               	goto	u28_21
  1894  010F  2911               	goto	u28_20
  1895  0110  2912               u28_21:
  1896  0111                     	goto	i1l990
  1897  0111  2915               u28_20:
  1898  0112                     	line	38
  1899                           	
  1900                           i1l988:	
  1901  0112                     	movlw	low(0)
  1902  0112  3000               	fcall	_BitDataInit
  1903  0113  2164               	goto	i1l990
  1904  0114  2915               	
  1905                           i1l131:	
  1906  0115                     	line	41
  1907                           	
  1908                           i1l990:	
  1909  0115                     	movlw	low(09h)
  1910  0115  3009               	bcf	status, 5	;RP0=0, select bank0
  1911  0116  1283               	subwf	(_TickCount),w
  1912  0117  0228               	skipnc
  1913  0118  1803               	goto	u29_21
  1914  0119  291B               	goto	u29_20
  1915  011A  291C               u29_21:
  1916  011B                     	goto	i1l994
  1917  011B  2922               u29_20:
  1918  011C                     	
  1919                           i1l992:	
  1920  011C                     	movf	((StartTickTimer@ReSync)),w
  1921  011C  082F               	btfsc	status,2
  1922  011D  1903               	goto	u30_21
  1923  011E  2920               	goto	u30_20
  1924  011F  2921               u30_21:
  1925  0120                     	goto	i1l996
  1926  0120  2924               u30_20:
  1927  0121                     	goto	i1l994
  1928  0121  2922               	
  1929                           i1l134:	
  1930  0122                     	line	42
  1931                           	
  1932                           i1l994:	
  1933  0122                     	clrf	(_TickCount)
  1934  0122  01A8               	goto	i1l136
  1935  0123  2929               	line	43
  1936                           	
  1937                           i1l132:	
  1938  0124                     	line	44
  1939                           	
  1940                           i1l996:	
  1941  0124                     	movlw	low(01h)
  1942  0124  3001               	movwf	(??_StartTickTimer+0)+0
  1943  0125  00AE               	movf	(??_StartTickTimer+0)+0,w
  1944  0126  082E               	addwf	(_TickCount),f
  1945  0127  07A8               	goto	i1l136
  1946  0128  2929               	
  1947                           i1l135:	
  1948  0129                     	line	53
  1949                           	
  1950                           i1l136:	
  1951  0129                     	return
  1952  0129  0008               	opt stack 0
  1953                           GLOBAL	__end_of_StartTickTimer
  1954                           	__end_of_StartTickTimer:
  1955  012A                     	signat	_StartTickTimer,4217
  1956                           	global	_BitDataInit
  1957                           
  1958 ;; *************** function _BitDataInit *****************
  1959 ;; Defined at:
  1960 ;;		line 41 in file "main.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  ModeTx          1    wreg     unsigned char 
  1963 ;; Auto vars:     Size  Location     Type
  1964 ;;  ModeTx          1    0[BANK0 ] unsigned char 
  1965 ;;  IntEnable       1    1[BANK0 ] unsigned char 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0
  1975 ;;      Params:         0       0
  1976 ;;      Locals:         0       0
  1977 ;;      Temps:          0       0
  1978 ;;      Totals:         0       0
  1979 ;;Total ram usage:        0 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    3
  1982 ;; This function calls:
  1983 ;;		Nothing
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;;		_StartTickTimer
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  1990                           	file	"main.c"
  1991                           	line	41
  1992                           global __ptext6
  1993                           __ptext6:	;psect for function _BitDataInit
  1994  0164                     psect	text6
  1995                           	file	"main.c"
  1996                           	line	41
  1997                           	global	__size_of_BitDataInit
  1998                           	__size_of_BitDataInit	equ	__end_of_BitDataInit-_BitDataInit
  1999  001B                     	
  2000                           _BitDataInit:	
  2001  0164                     ;incstack = 0
  2002                           	opt	stack 0
  2003                           ; Regs used in _BitDataInit: [wreg+status,2+status,0]
  2004                           ;BitDataInit@ModeTx stored from wreg
  2005                           	bcf	status, 5	;RP0=0, select bank0
  2006  0164  1283               	movwf	(BitDataInit@ModeTx)
  2007  0165  00AC               	line	44
  2008                           	
  2009                           i1l928:	
  2010  0166                     ;main.c: 41:     INTCONbits.GIE = 1;;main.c: 42: ;main.c: 44:     {
  2011                           	movlw	0
  2012  0166  3000               	btfsc	(11),7	;volatile
  2013  0167  1B8B               	movlw	1
  2014  0168  3001               	movwf	(BitDataInit@IntEnable)
  2015  0169  00AD               	line	45
  2016                           	
  2017                           i1l930:	
  2018  016A                     ;main.c: 45:         if (IntrNewBit==1)
  2019                           	bcf	(11),7	;volatile
  2020  016A  138B               	line	47
  2021                           	
  2022                           i1l932:	
  2023  016B                     ;main.c: 47: 
  2024                           		decf	((BitDataInit@ModeTx)),w
  2025  016B  032C               	btfss	status,2
  2026  016C  1D03               	goto	u25_21
  2027  016D  296F               	goto	u25_20
  2028  016E  2970               u25_21:
  2029  016F                     	goto	i1l41
  2030  016F  2973               u25_20:
  2031  0170                     	line	50
  2032                           	
  2033                           i1l934:	
  2034  0170                     ;main.c: 48: ;main.c: 50: 
  2035                           	bcf	(11),4	;volatile
  2036  0170  120B               	line	53
  2037                           ;main.c: 53:             IntrNewBit = 0;
  2038                           	bsf	(57/8),(57)&7	;volatile
  2039  0171  1487               	line	54
  2040                           ;main.c: 54:             INTCONbits.T0IE = 0;
  2041                           	goto	i1l940
  2042  0172  2979               	line	55
  2043                           ;main.c: 55: 
  2044                           	
  2045                           i1l41:	
  2046  0173                     	line	58
  2047                           ;main.c: 56: ;main.c: 58: 
  2048                           	bcf	(57/8),(57)&7	;volatile
  2049  0173  1087               	line	61
  2050                           	
  2051                           i1l936:	
  2052  0174                     ;main.c: 61:             {
  2053                           	clrf	(_DataState)
  2054  0174  01A1               	line	62
  2055                           ;main.c: 62: 
  2056                           	clrf	(_Addressed)
  2057  0175  01A2               	line	63
  2058                           ;main.c: 63:                 if ((RxData&0xF)==0x09)
  2059                           	clrf	(_BitCount)
  2060  0176  01A7               	line	66
  2061                           	
  2062                           i1l938:	
  2063  0177                     ;main.c: 66: 
  2064                           	bsf	(11),4	;volatile
  2065  0177  160B               	goto	i1l940
  2066  0178  2979               	line	67
  2067                           ;main.c: 67:                     RC5=1;
  2068                           	
  2069                           i1l42:	
  2070  0179                     	line	70
  2071                           	
  2072                           i1l940:	
  2073  0179                     ;main.c: 70: 
  2074                           	rrf	(BitDataInit@IntEnable),w
  2075  0179  0C2D               	skipc
  2076  017A  1C03               	bcf	(11),7	;volatile
  2077  017B  138B               	skipnc
  2078  017C  1803               	bsf	(11),7	;volatile
  2079  017D  178B               	line	71
  2080                           	
  2081                           i1l43:	
  2082  017E                     	return
  2083  017E  0008               	opt stack 0
  2084                           GLOBAL	__end_of_BitDataInit
  2085                           	__end_of_BitDataInit:
  2086  017F                     	signat	_BitDataInit,4217
  2087                           	global	_EdgeIntr
  2088                           
  2089 ;; *************** function _EdgeIntr *****************
  2090 ;; Defined at:
  2091 ;;		line 57 in file "user.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;		None
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;		None
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0
  2105 ;;      Params:         0       0
  2106 ;;      Locals:         0       0
  2107 ;;      Temps:          0       0
  2108 ;;      Totals:         0       0
  2109 ;;Total ram usage:        0 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_ISR
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2118                           	file	"user.c"
  2119                           	line	57
  2120                           global __ptext7
  2121                           __ptext7:	;psect for function _EdgeIntr
  2122  0192                     psect	text7
  2123                           	file	"user.c"
  2124                           	line	57
  2125                           	global	__size_of_EdgeIntr
  2126                           	__size_of_EdgeIntr	equ	__end_of_EdgeIntr-_EdgeIntr
  2127  0007                     	
  2128                           _EdgeIntr:	
  2129  0192                     ;incstack = 0
  2130                           	opt	stack 4
  2131                           ; Regs used in _EdgeIntr: [wreg+status,2]
  2132                           	line	60
  2133                           	
  2134                           i1l1016:	
  2135  0192                     ;user.c: 60:     EdgeDetect = 0;
  2136                           	bcf	status, 5	;RP0=0, select bank0
  2137  0192  1283               	clrf	(_EdgeDetect)
  2138  0193  01A0               	line	63
  2139                           	
  2140                           i1l1018:	
  2141  0194                     ;user.c: 63:     TMR0 = 175;
  2142                           	movlw	low(0AFh)
  2143  0194  30AF               	movwf	(1)	;volatile
  2144  0195  0081               	line	65
  2145                           	
  2146                           i1l1020:	
  2147  0196                     ;user.c: 65:     INTCONbits.T0IF = 0;
  2148                           	bcf	(11),2	;volatile
  2149  0196  110B               	line	66
  2150                           	
  2151                           i1l1022:	
  2152  0197                     ;user.c: 66:     INTCONbits.T0IE = 1;
  2153                           	bsf	(11),5	;volatile
  2154  0197  168B               	line	67
  2155                           	
  2156                           i1l139:	
  2157  0198                     	return
  2158  0198  0008               	opt stack 0
  2159                           GLOBAL	__end_of_EdgeIntr
  2160                           	__end_of_EdgeIntr:
  2161  0199                     	signat	_EdgeIntr,89
  2162                           	global	_BitIntr
  2163                           
  2164 ;; *************** function _BitIntr *****************
  2165 ;; Defined at:
  2166 ;;		line 73 in file "user.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMMON   BANK0
  2180 ;;      Params:         0       0
  2181 ;;      Locals:         0       0
  2182 ;;      Temps:          0       0
  2183 ;;      Totals:         0       0
  2184 ;;Total ram usage:        0 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_ISR
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2193                           	line	73
  2194                           global __ptext8
  2195                           __ptext8:	;psect for function _BitIntr
  2196  017F                     psect	text8
  2197                           	file	"user.c"
  2198                           	line	73
  2199                           	global	__size_of_BitIntr
  2200                           	__size_of_BitIntr	equ	__end_of_BitIntr-_BitIntr
  2201  000B                     	
  2202                           _BitIntr:	
  2203  017F                     ;incstack = 0
  2204                           	opt	stack 4
  2205                           ; Regs used in _BitIntr: [wreg]
  2206                           	line	76
  2207                           	
  2208                           i1l1124:	
  2209  017F                     ;user.c: 76:     IntrData <<= 1;
  2210                           	clrc
  2211  017F  1003               	bcf	status, 5	;RP0=0, select bank0
  2212  0180  1283               	rlf	(_IntrData),f
  2213  0181  0DA9               
  2214                           	line	77
  2215                           	
  2216                           i1l1126:	
  2217  0182                     ;user.c: 77:     if (RA2==1)
  2218                           	btfss	(42/8),(42)&7	;volatile
  2219  0182  1D05               	goto	u52_21
  2220  0183  2985               	goto	u52_20
  2221  0184  2986               u52_21:
  2222  0185                     	goto	i1l142
  2223  0185  2987               u52_20:
  2224  0186                     	line	78
  2225                           	
  2226                           i1l1128:	
  2227  0186                     ;user.c: 78:         IntrData |= 1;
  2228                           	bsf	(_IntrData)+(0/8),(0)&7
  2229  0186  1429               	
  2230                           i1l142:	
  2231  0187                     	line	81
  2232                           ;user.c: 81:     IntrNewBit = 1;
  2233                           	clrf	(_IntrNewBit)
  2234  0187  01AB               	incf	(_IntrNewBit),f
  2235  0188  0AAB               	line	82
  2236                           	
  2237                           i1l143:	
  2238  0189                     	return
  2239  0189  0008               	opt stack 0
  2240                           GLOBAL	__end_of_BitIntr
  2241                           	__end_of_BitIntr:
  2242  018A                     	signat	_BitIntr,89
  2243                           global	___latbits
  2244                           ___latbits	equ	0
  2245  0000                     	global	btemp
  2246                           	btemp set 05Eh
  2247  005E                     
  2248                           	DABS	1,94,2	;btemp
  2249                           	global	wtemp0
  2250                           	wtemp0 set btemp+0
  2251  005E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     11      23

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UARTSend

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     203
                                             10 BANK0      1     1      0
                        _BitDataInit
                         _Initialise
                     _StartTickTimer
                           _UARTSend
 ---------------------------------------------------------------------------------
 (1) _UARTSend                                             4     4      0      69
                                              6 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _StartTickTimer                                       2     2      0      89
                        _BitDataInit
 ---------------------------------------------------------------------------------
 (5) _BitDataInit                                          2     2      0      45
 ---------------------------------------------------------------------------------
 (1) _Initialise                                           0     0      0       0
                           _UARTInit
 ---------------------------------------------------------------------------------
 (2) _UARTInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0      89
                                              4 BANK0      2     2      0
                            _BitIntr
                           _EdgeIntr
                     _StartTickTimer
 ---------------------------------------------------------------------------------
 (4) _StartTickTimer                                       2     2      0      89
                        _BitDataInit
 ---------------------------------------------------------------------------------
 (5) _BitDataInit                                          2     2      0      45
 ---------------------------------------------------------------------------------
 (4) _EdgeIntr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _BitIntr                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BitDataInit
   _Initialise
     _UARTInit
   _StartTickTimer
     _BitDataInit
   _UARTSend

 _ISR (ROOT)
   _BitIntr
   _EdgeIntr
   _StartTickTimer
     _BitDataInit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      B      17       4       37.1%
ABS                  0      0      17       5        0.0%
DATA                 0      0      17       6        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Nov 09 11:02:31 2018

            __CFG_CP$OFF 0000                       l50 0043                       l51 0042  
                     l52 009D                       l60 009B                       l61 009A  
                     l53 0066                       l62 008F                       l54 0065  
                     l63 0099                       l55 005E                       l64 00B1  
                     l56 0060                       l48 0018                       l65 00B0  
                     l49 009E                       l57 009C                       l66 00B3  
                     l58 007E                       l67 00B4                       l59 007D  
                     l68 00B5                       l69 00B5                       l94 0146  
                     fsr 0004                      l150 00EA                      l151 00F4  
                    l146 019E                      l149 00CC                      l942 0199  
                    l950 0132                      l960 013A                      l952 0134  
                    l944 012A                      l970 0142                      l962 013C  
                    l954 0136                      l946 0130                      l972 0144  
                    l964 013D                      l956 0137                      l948 0131  
                    l974 0145                      l966 013F                      l958 0138  
                    l968 0141                      l998 00B8                      _RA0 0028  
                    _RA2 002A                      _RC1 0039                      _RC3 003B  
                    _RC4 003C                      _RC5 003D                      u310 00CA  
                    u311 00C9                      u320 00D2                      u400 004F  
                    u321 00CF                      u401 004E                      u410 0059  
                    u411 0058                      u340 00EA                      u420 006C  
                    u341 00E9                      u421 006B                      u334 00D4  
                    u430 0072                      u431 0071                      u440 0084  
                    u360 001E                      u441 0083                      u361 001D  
                    u450 0089                      u370 002E             __CFG_CPD$OFF 0000  
                    u451 0088                      u371 002D                      u460 0095  
                    u380 0037                      _ISR 0147                      u461 0094  
                    u381 0036                      u470 00A5                      u390 0049  
                    u471 00A4                      u391 0048                      u480 00AA  
                    u481 00A9                      u567 00BD                      u577 00DA  
                    u587 00EF                      indf 0000             __CFG_FOSC$EC 0000  
             _EdgeDetect 0020                     ?_ISR 002C                     l1000 00B9  
                   l1010 00DF                     l1002 00C2                     l1012 00E4  
                   l1004 00C4                     l1100 00A5                     l1014 00EB  
                   l1006 00CB                     l1102 00AA                     l1030 0013  
                   l1008 00D4                     l1104 00AC                     l1040 0023  
                   l1032 0016                     l1106 00B1                     l1050 0037  
                   l1042 0024                     l1034 0018                     l1060 0040  
                   l1052 0039                     l1044 0025                     l1036 001E  
                   l1070 0059                     l1054 003B                     l1062 0043  
                   l1046 0029                     l1038 001F                     l1080 0072  
                   l1072 005E                     l1064 0049                     l1056 003D  
                   l1048 002E                     l1090 008D                     l1082 0073  
                   l1074 0060                     l1066 004F                     l1058 003E  
                   l1092 008E                     l1084 007E                     l1068 0050  
                   l1076 0066                     l1094 0095                     l1086 0084  
                   l1078 006C                     l1096 0096                     l1088 0089  
                   l1098 009E                     i1l41 0173                     i1l42 0179  
                   i1l43 017E                     _TMR0 0001                     _main 0013  
                   btemp 005E                     start 000B          __end_of_BitIntr 018A  
   StartTickTimer@ReSync 002F              _BitDataInit 0164                    ??_ISR 0030  
                  ?_main 002C            __CFG_WDTE$OFF 0000                    _CMCON 0019  
                  i1l131 0115                    i1l132 0124                    i1l142 0187  
                  i1l134 0122                    i1l143 0189                    i1l135 0129  
                  i1l136 0129                    i1l139 0198                    i1l166 014E  
                  i1l167 0155                    i1l168 015C                    i1l169 015C  
                  i1l930 016A                    i1l940 0179                    i1l932 016B  
                  i1l934 0170                    i1l936 0174                    i1l928 0166  
                  i1l938 0177                    i1l980 00FD                    i1l990 0115  
                  i1l982 00FE                    i1l992 011C                    i1l984 0108  
                  i1l976 00F7                    i1l994 0122                    i1l986 010D  
                  i1l978 00F9                    i1l996 0124                    i1l988 0112  
                  u30_20 0121                    u30_21 0120                    u25_20 0170  
                  u25_21 016F                    _TMR1H 000F                    _TMR1L 000E  
                  u26_20 0108                    u26_21 0107                    u27_20 010D  
                  u27_21 010C                    u52_20 0186                    u28_20 0112  
                  u52_21 0185                    u28_21 0111                    u29_20 011C  
                  u53_20 014B                    u29_21 011B                    u53_21 014A  
                  u54_20 0152                    u54_21 0151                    u55_20 0159  
                  u55_21 0158                    _TRISA 0085                    _TRISC 0087  
                  _Lamps 0025         __end_of_UARTInit 019F         __end_of_UARTSend 00F5  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
       __end_of_EdgeIntr 0199                    wtemp0 005E           __CFG_MCLRE$OFF 0000  
        __initialization 000C             __end_of_main 00B6               _Initialise 012A  
             _IntrNewBit 002B                   ??_main 0036                   i1l1020 0196  
                 i1l1022 0197                   i1l1016 0192                   i1l1018 0194  
                 i1l1130 0147                   i1l1124 017F                   i1l1140 0155  
                 i1l1132 014B                   i1l1126 0182                   i1l1142 0159  
                 i1l1134 014E                   i1l1128 0186                   i1l1144 015A  
                 i1l1136 0152                   i1l1138 0153                ??_BitIntr 0000  
       ??_StartTickTimer 002E           __CFG_PWRTE$OFF 0000                   _RxData 002A  
                 saved_w 005E  __end_of__initialization 0011           __pcstackCOMMON 0000  
              ?_UARTInit 002C                ?_UARTSend 002C              ?_Initialise 002C  
              ?_EdgeIntr 002C           _OPTION_REGbits 0081        BitDataInit@ModeTx 002C  
             __pbssBANK0 0020              _OneWireMode 0023               __pmaintext 0013  
           ?_BitDataInit 002C               ??_UARTInit 0000               ??_UARTSend 0032  
             __pintentry 0004                UARTSend@i 0035               ??_EdgeIntr 0000  
                _BitIntr 017F      __size_of_Initialise 001D                  _BoxSize 0026  
                __ptext1 00B6                  __ptext2 012A                  __ptext3 0199  
                __ptext4 0147                  __ptext5 00F5                  __ptext6 0164  
                __ptext7 0192                  __ptext8 017F     BitDataInit@IntEnable 002D  
           __size_of_ISR 001D                _T1CONbits 0010                  clrloop0 018B  
   end_of_initialization 0011                _TRISAbits 0085                _Addressed 0022  
      UARTSend@DataValue 0034                _DataState 0021             ??_Initialise 0000  
   __size_of_BitDataInit 001B        __size_of_UARTInit 0006        __size_of_UARTSend 003F  
    start_initialization 000C              __end_of_ISR 0164        __size_of_EdgeIntr 0007  
     __end_of_Initialise 0147                _TickCount 0028  __size_of_StartTickTimer 0035  
              ___latbits 0000            __pcstackBANK0 002C                 ?_BitIntr 002C  
      interrupt_function 0004                clear_ram0 018A                 _PIE1bits 008C  
               _PIR1bits 000C                 _UARTInit 0199                 _UARTSend 00B6  
               _EdgeIntr 0192                 _BitCount 0027                 _DoneSend 0024  
       __size_of_BitIntr 000B                 _IntrData 0029           _StartTickTimer 00F5  
          __size_of_main 00A3   __end_of_StartTickTimer 012A            ??_BitDataInit 0000  
             _INTCONbits 000B                 intlevel1 0000          ?_StartTickTimer 002C  
    __end_of_BitDataInit 017F  
