

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Oct 15 14:29:40 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F630 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   100                           PORTC equ 07h ;# 
   101  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   116                           CMCON equ 019h ;# 
   117  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   118                           OPTION_REG equ 081h ;# 
   119  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   120                           TRISA equ 085h ;# 
   121  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   122                           TRISC equ 087h ;# 
   123  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   124                           PIE1 equ 08Ch ;# 
   125  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   126                           PCON equ 08Eh ;# 
   127  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   128                           OSCCAL equ 090h ;# 
   129  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   130                           WPUA equ 095h ;# 
   131  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   132                           WPU equ 095h ;# 
   133  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   134                           IOCA equ 096h ;# 
   135  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   136                           IOC equ 096h ;# 
   137  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   138                           VRCON equ 099h ;# 
   139  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   140                           EEDAT equ 09Ah ;# 
   141  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   142                           EEDATA equ 09Ah ;# 
   143  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   144                           EEADR equ 09Bh ;# 
   145  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   146                           EECON1 equ 09Ch ;# 
   147  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   148                           EECON2 equ 09Dh ;# 
   149  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   150                           INDF equ 00h ;# 
   151  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   152                           TMR0 equ 01h ;# 
   153  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   154                           PCL equ 02h ;# 
   155  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   156                           STATUS equ 03h ;# 
   157  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   158                           FSR equ 04h ;# 
   159  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   160                           PORTA equ 05h ;# 
   161  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   162                           PORTC equ 07h ;# 
   163  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   164                           PCLATH equ 0Ah ;# 
   165  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   166                           INTCON equ 0Bh ;# 
   167  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   168                           PIR1 equ 0Ch ;# 
   169  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   170                           TMR1 equ 0Eh ;# 
   171  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   172                           TMR1L equ 0Eh ;# 
   173  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   174                           TMR1H equ 0Fh ;# 
   175  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   176                           T1CON equ 010h ;# 
   177  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   178                           CMCON equ 019h ;# 
   179  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   180                           OPTION_REG equ 081h ;# 
   181  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   182                           TRISA equ 085h ;# 
   183  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   184                           TRISC equ 087h ;# 
   185  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   186                           PIE1 equ 08Ch ;# 
   187  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   188                           PCON equ 08Eh ;# 
   189  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   190                           OSCCAL equ 090h ;# 
   191  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   192                           WPUA equ 095h ;# 
   193  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   194                           WPU equ 095h ;# 
   195  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   196                           IOCA equ 096h ;# 
   197  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   198                           IOC equ 096h ;# 
   199  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   200                           VRCON equ 099h ;# 
   201  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   202                           EEDAT equ 09Ah ;# 
   203  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   204                           EEDATA equ 09Ah ;# 
   205  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   206                           EEADR equ 09Bh ;# 
   207  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   208                           EECON1 equ 09Ch ;# 
   209  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   210                           EECON2 equ 09Dh ;# 
   211  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   212                           INDF equ 00h ;# 
   213  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   214                           TMR0 equ 01h ;# 
   215  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   216                           PCL equ 02h ;# 
   217  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   218                           STATUS equ 03h ;# 
   219  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   220                           FSR equ 04h ;# 
   221  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   222                           PORTA equ 05h ;# 
   223  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   224                           PORTC equ 07h ;# 
   225  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   226                           PCLATH equ 0Ah ;# 
   227  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   228                           INTCON equ 0Bh ;# 
   229  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   230                           PIR1 equ 0Ch ;# 
   231  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   232                           TMR1 equ 0Eh ;# 
   233  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   234                           TMR1L equ 0Eh ;# 
   235  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   236                           TMR1H equ 0Fh ;# 
   237  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   238                           T1CON equ 010h ;# 
   239  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   240                           CMCON equ 019h ;# 
   241  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   242                           OPTION_REG equ 081h ;# 
   243  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   244                           TRISA equ 085h ;# 
   245  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   246                           TRISC equ 087h ;# 
   247  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   248                           PIE1 equ 08Ch ;# 
   249  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   250                           PCON equ 08Eh ;# 
   251  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   252                           OSCCAL equ 090h ;# 
   253  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   254                           WPUA equ 095h ;# 
   255  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   256                           WPU equ 095h ;# 
   257  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   258                           IOCA equ 096h ;# 
   259  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   260                           IOC equ 096h ;# 
   261  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   262                           VRCON equ 099h ;# 
   263  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   264                           EEDAT equ 09Ah ;# 
   265  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   266                           EEDATA equ 09Ah ;# 
   267  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   268                           EEADR equ 09Bh ;# 
   269  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   270                           EECON1 equ 09Ch ;# 
   271  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   272                           EECON2 equ 09Dh ;# 
   273  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   274                           INDF equ 00h ;# 
   275  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   276                           TMR0 equ 01h ;# 
   277  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   278                           PCL equ 02h ;# 
   279  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   280                           STATUS equ 03h ;# 
   281  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   282                           FSR equ 04h ;# 
   283  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   284                           PORTA equ 05h ;# 
   285  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   286                           PORTC equ 07h ;# 
   287  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   288                           PCLATH equ 0Ah ;# 
   289  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   290                           INTCON equ 0Bh ;# 
   291  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   292                           PIR1 equ 0Ch ;# 
   293  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   294                           TMR1 equ 0Eh ;# 
   295  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   296                           TMR1L equ 0Eh ;# 
   297  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   298                           TMR1H equ 0Fh ;# 
   299  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   300                           T1CON equ 010h ;# 
   301  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   302                           CMCON equ 019h ;# 
   303  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   304                           OPTION_REG equ 081h ;# 
   305  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   306                           TRISA equ 085h ;# 
   307  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   308                           TRISC equ 087h ;# 
   309  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   310                           PIE1 equ 08Ch ;# 
   311  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   312                           PCON equ 08Eh ;# 
   313  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   314                           OSCCAL equ 090h ;# 
   315  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   316                           WPUA equ 095h ;# 
   317  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   318                           WPU equ 095h ;# 
   319  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   320                           IOCA equ 096h ;# 
   321  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   322                           IOC equ 096h ;# 
   323  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   324                           VRCON equ 099h ;# 
   325  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   326                           EEDAT equ 09Ah ;# 
   327  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   328                           EEDATA equ 09Ah ;# 
   329  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   330                           EEADR equ 09Bh ;# 
   331  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   332                           EECON1 equ 09Ch ;# 
   333  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   334                           EECON2 equ 09Dh ;# 
   335  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   336                           INDF equ 00h ;# 
   337  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   338                           TMR0 equ 01h ;# 
   339  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   340                           PCL equ 02h ;# 
   341  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   342                           STATUS equ 03h ;# 
   343  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   344                           FSR equ 04h ;# 
   345  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   346                           PORTA equ 05h ;# 
   347  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   348                           PORTC equ 07h ;# 
   349  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   350                           PCLATH equ 0Ah ;# 
   351  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   352                           INTCON equ 0Bh ;# 
   353  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   354                           PIR1 equ 0Ch ;# 
   355  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   364                           CMCON equ 019h ;# 
   365  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   366                           OPTION_REG equ 081h ;# 
   367  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   368                           TRISA equ 085h ;# 
   369  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   370                           TRISC equ 087h ;# 
   371  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   372                           PIE1 equ 08Ch ;# 
   373  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   374                           PCON equ 08Eh ;# 
   375  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   376                           OSCCAL equ 090h ;# 
   377  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   378                           WPUA equ 095h ;# 
   379  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   380                           WPU equ 095h ;# 
   381  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   382                           IOCA equ 096h ;# 
   383  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   384                           IOC equ 096h ;# 
   385  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   386                           VRCON equ 099h ;# 
   387  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   388                           EEDAT equ 09Ah ;# 
   389  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   390                           EEDATA equ 09Ah ;# 
   391  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   392                           EEADR equ 09Bh ;# 
   393  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   394                           EECON1 equ 09Ch ;# 
   395  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   396                           EECON2 equ 09Dh ;# 
   397  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   398                           INDF equ 00h ;# 
   399  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   400                           TMR0 equ 01h ;# 
   401  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   402                           PCL equ 02h ;# 
   403  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   404                           STATUS equ 03h ;# 
   405  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   406                           FSR equ 04h ;# 
   407  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   408                           PORTA equ 05h ;# 
   409  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   410                           PORTC equ 07h ;# 
   411  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   412                           PCLATH equ 0Ah ;# 
   413  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   414                           INTCON equ 0Bh ;# 
   415  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   416                           PIR1 equ 0Ch ;# 
   417  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   418                           TMR1 equ 0Eh ;# 
   419  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   420                           TMR1L equ 0Eh ;# 
   421  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   422                           TMR1H equ 0Fh ;# 
   423  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   424                           T1CON equ 010h ;# 
   425  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   426                           CMCON equ 019h ;# 
   427  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   428                           OPTION_REG equ 081h ;# 
   429  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   430                           TRISA equ 085h ;# 
   431  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   432                           TRISC equ 087h ;# 
   433  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   434                           PIE1 equ 08Ch ;# 
   435  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   436                           PCON equ 08Eh ;# 
   437  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   438                           OSCCAL equ 090h ;# 
   439  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   440                           WPUA equ 095h ;# 
   441  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   442                           WPU equ 095h ;# 
   443  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   444                           IOCA equ 096h ;# 
   445  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   446                           IOC equ 096h ;# 
   447  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   448                           VRCON equ 099h ;# 
   449  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   450                           EEDAT equ 09Ah ;# 
   451  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   452                           EEDATA equ 09Ah ;# 
   453  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   454                           EEADR equ 09Bh ;# 
   455  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   456                           EECON1 equ 09Ch ;# 
   457  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   458                           EECON2 equ 09Dh ;# 
   459  009D                     	FNCALL	_main,_ConfigureOscillator
   460                           	FNCALL	_main,_InitApp
   461                           	FNCALL	_main,_SetLamps
   462                           	FNROOT	_main
   463                           	FNCALL	_isr,_SequenceUpdate
   464                           	FNCALL	_SequenceUpdate,_SetLamps
   465                           	FNCALL	intlevel1,_isr
   466                           	global	intlevel1
   467                           	FNROOT	intlevel1
   468                           	global	SequenceUpdate@Sequence
   469                           psect	strings,class=STRING,delta=2,noexec
   470                           global __pstrings
   471                           __pstrings:
   472  0087                     stringtab:
   473  0087                     	global    __stringtab
   474                           __stringtab:
   475  0087                     ;	String table - string pointers are 1 byte each
   476                           stringcode:stringdir:
   477  0087                     movlw high(stringdir)
      + 0087                     stringdir:	
   478  0087  3000               movwf pclath
   479  0088  008A               movf fsr,w
   480  0089  0804               incf fsr
   481  008A  0A84               	addwf pc
   482  008B  0782               	global __stringbase
   483                           __stringbase:
   484  008C                     	retlw	0
   485  008C  3400               psect	strings
   486                           	global    __end_of__stringtab
   487                           __end_of__stringtab:
   488  008D                     	file	"user.c"
   489                           	line	89
   490                           SequenceUpdate@Sequence:
   491  008D                     	retlw	077h
   492  008D  3477               	retlw	0BBh
   493  008E  34BB               	retlw	0DDh
   494  008F  34DD               	retlw	0EEh
   495  0090  34EE               	global __end_ofSequenceUpdate@Sequence
   496                           __end_ofSequenceUpdate@Sequence:
   497  0091                     	global	SequenceUpdate@Sequence
   498                           	global	SequenceUpdate@SequenceIndex
   499                           	global	SequenceUpdate@TimeCount
   500                           	global	_TMR0
   501                           _TMR0	set	0x1
   502  0001                     	global	_INTCONbits
   503                           _INTCONbits	set	0xB
   504  000B                     	global	_RA2
   505                           _RA2	set	0x2A
   506  002A                     	global	_RC0
   507                           _RC0	set	0x38
   508  0038                     	global	_RC1
   509                           _RC1	set	0x39
   510  0039                     	global	_RC2
   511                           _RC2	set	0x3A
   512  003A                     	global	_RC3
   513                           _RC3	set	0x3B
   514  003B                     	global	_RC4
   515                           _RC4	set	0x3C
   516  003C                     	global	_RC5
   517                           _RC5	set	0x3D
   518  003D                     	global	_RA1
   519                           _RA1	set	0x29
   520  0029                     	global	_TRISCbits
   521                           _TRISCbits	set	0x87
   522  0087                     	global	_TRISAbits
   523                           _TRISAbits	set	0x85
   524  0085                     	global	_OPTION_REGbits
   525                           _OPTION_REGbits	set	0x81
   526  0081                     ; #config settings
   527                           global __CFG_FOSC$INTRCIO
   528                           __CFG_FOSC$INTRCIO equ 0x0
   529  0000                     global __CFG_WDTE$OFF
   530                           __CFG_WDTE$OFF equ 0x0
   531  0000                     global __CFG_PWRTE$OFF
   532                           __CFG_PWRTE$OFF equ 0x0
   533  0000                     global __CFG_MCLRE$OFF
   534                           __CFG_MCLRE$OFF equ 0x0
   535  0000                     global __CFG_BOREN$ON
   536                           __CFG_BOREN$ON equ 0x0
   537  0000                     global __CFG_CP$OFF
   538                           __CFG_CP$OFF equ 0x0
   539  0000                     global __CFG_CPD$OFF
   540                           __CFG_CPD$OFF equ 0x0
   541  0000                     	file	"C:\Users\abaker\AppData\Local\Temp\se9s."
   542                           	line	#
   543                           psect cinit,class=CODE,delta=2
   544                           global start_initialization
   545                           start_initialization:
   546  0014                     
   547                           global __initialization
   548                           __initialization:
   549  0014                     psect	bssBANK0,class=BANK0,space=1,noexec
   550                           global __pbssBANK0
   551                           __pbssBANK0:
   552  0026                     SequenceUpdate@SequenceIndex:
   553  0026                            ds      1
   554  0026                     
   555                           SequenceUpdate@TimeCount:
   556  0027                            ds      1
   557  0027                     
   558                           	file	"C:\Users\abaker\AppData\Local\Temp\se9s."
   559                           	line	#
   560                           ; Clear objects allocated to BANK0
   561                           psect cinit,class=CODE,delta=2,merge=1
   562                           	bcf	status, 5	;RP0=0, select bank0
   563  0014  1283               	clrf	((__pbssBANK0)+0)&07Fh
   564  0015  01A6               	clrf	((__pbssBANK0)+1)&07Fh
   565  0016  01A7               psect cinit,class=CODE,delta=2,merge=1
   566                           global end_of_initialization,__end_of__initialization
   567                           
   568                           ;End of C runtime variable initialization code
   569                           
   570                           end_of_initialization:
   571  0017                     __end_of__initialization:
   572  0017                     clrf status
   573  0017  0183               ljmp _main	;jump to C main() function
   574  0018  28A5               psect	cstackCOMMON,class=COMMON,space=1,noexec
   575                           global __pcstackCOMMON
   576                           __pcstackCOMMON:
   577  0000                     ??_ConfigureOscillator:	; 1 bytes @ 0x0
   578  0000                     ??_InitApp:	; 1 bytes @ 0x0
   579  0000                     ??_SetLamps:	; 1 bytes @ 0x0
   580  0000                     ??_main:	; 1 bytes @ 0x0
   581  0000                     psect	cstackBANK0,class=BANK0,space=1,noexec
   582                           global __pcstackBANK0
   583                           __pcstackBANK0:
   584  0020                     ?_SequenceUpdate:	; 1 bytes @ 0x0
   585  0020                     ?_ConfigureOscillator:	; 1 bytes @ 0x0
   586  0020                     ?_InitApp:	; 1 bytes @ 0x0
   587  0020                     ?_SetLamps:	; 1 bytes @ 0x0
   588  0020                     ?_isr:	; 1 bytes @ 0x0
   589  0020                     ?_main:	; 1 bytes @ 0x0
   590  0020                     	global	SetLamps@Lamps
   591                           SetLamps@Lamps:	; 1 bytes @ 0x0
   592  0020                     	ds	1
   593  0020                     ??_SequenceUpdate:	; 1 bytes @ 0x1
   594  0021                     	ds	1
   595  0021                     ??_isr:	; 1 bytes @ 0x2
   596  0022                     	ds	4
   597  0022                     ;!
   598                           ;!Data Sizes:
   599                           ;!    Strings     0
   600                           ;!    Constant    4
   601                           ;!    Data        0
   602                           ;!    BSS         2
   603                           ;!    Persistent  0
   604                           ;!    Stack       0
   605                           ;!
   606                           ;!Auto Spaces:
   607                           ;!    Space          Size  Autos    Used
   608                           ;!    COMMON            0      0       0
   609                           ;!    BANK0            62      6       8
   610                           
   611                           ;!
   612                           ;!Pointer List with Targets:
   613                           ;!
   614                           ;!    None.
   615                           
   616                           
   617                           ;!
   618                           ;!Critical Paths under _main in COMMON
   619                           ;!
   620                           ;!    None.
   621                           ;!
   622                           ;!Critical Paths under _isr in COMMON
   623                           ;!
   624                           ;!    None.
   625                           ;!
   626                           ;!Critical Paths under _main in BANK0
   627                           ;!
   628                           ;!    None.
   629                           ;!
   630                           ;!Critical Paths under _isr in BANK0
   631                           ;!
   632                           ;!    _isr->_SequenceUpdate
   633                           
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   636 ;;
   637                           
   638                           ;!
   639                           ;!Call Graph Tables:
   640                           ;!
   641                           ;! ---------------------------------------------------------------------------------
   642                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   643                           ;! ---------------------------------------------------------------------------------
   644                           ;! (0) _main                                                 0     0      0     176
   645                           ;!                _ConfigureOscillator
   646                           ;!                            _InitApp
   647                           ;!                           _SetLamps
   648                           ;! ---------------------------------------------------------------------------------
   649                           ;! (4) _SetLamps                                             1     1      0     176
   650                           ;! ---------------------------------------------------------------------------------
   651                           ;! (1) _InitApp                                              0     0      0       0
   652                           ;! ---------------------------------------------------------------------------------
   653                           ;! (1) _ConfigureOscillator                                  0     0      0       0
   654                           ;! ---------------------------------------------------------------------------------
   655                           ;! Estimated maximum stack depth 4
   656                           ;! ---------------------------------------------------------------------------------
   657                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   658                           ;! ---------------------------------------------------------------------------------
   659                           ;! (2) _isr                                                  4     4      0     176
   660                           ;!                                              2 BANK0      4     4      0
   661                           ;!                     _SequenceUpdate
   662                           ;! ---------------------------------------------------------------------------------
   663                           ;! (3) _SequenceUpdate                                       1     1      0     176
   664                           ;!                                              1 BANK0      1     1      0
   665                           ;!                           _SetLamps
   666                           ;! ---------------------------------------------------------------------------------
   667                           ;! (4) _SetLamps                                             1     1      0     176
   668                           ;! ---------------------------------------------------------------------------------
   669                           ;! Estimated maximum stack depth 4
   670                           ;! ---------------------------------------------------------------------------------
   671                           ;!
   672                           ;! Call Graph Graphs:
   673                           ;!
   674                           ;! _main (ROOT)
   675                           ;!   _ConfigureOscillator
   676                           ;!   _InitApp
   677                           ;!   _SetLamps
   678                           ;!
   679                           ;! _isr (ROOT)
   680                           ;!   _SequenceUpdate
   681                           ;!     _SetLamps
   682                           ;!
   683                           
   684                           ;! Address spaces:
   685                           
   686                           ;!Name               Size   Autos  Total    Cost      Usage
   687                           ;!BITCOMMON            0      0       0       0        0.0%
   688                           ;!EEDATA              80      0       0       0        0.0%
   689                           ;!NULL                 0      0       0       0        0.0%
   690                           ;!CODE                 0      0       0       0        0.0%
   691                           ;!BITSFR0              0      0       0       1        0.0%
   692                           ;!SFR0                 0      0       0       1        0.0%
   693                           ;!COMMON               0      0       0       1        0.0%
   694                           ;!BITSFR1              0      0       0       2        0.0%
   695                           ;!SFR1                 0      0       0       2        0.0%
   696                           ;!STACK                0      0       0       2        0.0%
   697                           ;!BITBANK0            3E      0       0       3        0.0%
   698                           ;!BANK0               3E      6       8       4       12.9%
   699                           ;!ABS                  0      0       8       5        0.0%
   700                           ;!DATA                 0      0       8       6        0.0%
   701                           
   702                           	global	_main
   703                           
   704 ;; *************** function _main *****************
   705 ;; Defined at:
   706 ;;		line 23 in file "main.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;		None
   709 ;; Auto vars:     Size  Location     Type
   710 ;;		None
   711 ;; Return value:  Size  Location     Type
   712 ;;                  1    wreg      void 
   713 ;; Registers used:
   714 ;;		wreg, status,2, status,0, pclath, cstack
   715 ;; Tracked objects:
   716 ;;		On entry : B00/0
   717 ;;		On exit  : 0/0
   718 ;;		Unchanged: 0/0
   719 ;; Data sizes:     COMMON   BANK0
   720 ;;      Params:         0       0
   721 ;;      Locals:         0       0
   722 ;;      Temps:          0       0
   723 ;;      Totals:         0       0
   724 ;;Total ram usage:        0 bytes
   725 ;; Hardware stack levels required when called:    4
   726 ;; This function calls:
   727 ;;		_ConfigureOscillator
   728 ;;		_InitApp
   729 ;;		_SetLamps
   730 ;; This function is called by:
   731 ;;		Startup code after reset
   732 ;; This function uses a non-reentrant model
   733 ;;
   734                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   735                           	file	"main.c"
   736                           	line	23
   737                           global __pmaintext
   738                           __pmaintext:	;psect for function _main
   739  00A5                     psect	maintext
   740                           	file	"main.c"
   741                           	line	23
   742                           	global	__size_of_main
   743                           	__size_of_main	equ	__end_of_main-_main
   744  0007                     	
   745                           _main:	
   746  00A5                     ;incstack = 0
   747                           	opt	stack 4
   748                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   749                           	line	26
   750                           	
   751                           l757:	
   752  00A5                     ;main.c: 26:     ConfigureOscillator();
   753                           	fcall	_ConfigureOscillator
   754  00A5  209B               	line	29
   755                           	
   756                           l759:	
   757  00A6                     ;main.c: 29:     InitApp();
   758                           	fcall	_InitApp
   759  00A6  2091               	line	31
   760                           	
   761                           l761:	
   762  00A7                     ;main.c: 31:     SetLamps( 0x00);
   763                           	movlw	low(0)
   764  00A7  3000               	fcall	_SetLamps
   765  00A8  2019               	line	34
   766                           	
   767                           l763:	
   768  00A9                     ;main.c: 34:     INTCONbits. GIE = 1;
   769                           	bsf	(11),7	;volatile
   770  00A9  178B               	line	36
   771                           ;main.c: 36:     while(1)
   772                           	
   773                           l23:	
   774  00AA                     	line	39
   775                           ;main.c: 37:     {;main.c: 39:     }
   776                           	
   777                           l24:	
   778  00AA                     	goto	l23
   779  00AA  28AA               	
   780                           l25:	
   781  00AB                     	line	41
   782                           	
   783                           l26:	
   784  00AB                     	global	start
   785                           	ljmp	start
   786  00AB  280F               	opt stack 0
   787                           GLOBAL	__end_of_main
   788                           	__end_of_main:
   789  00AC                     	signat	_main,89
   790                           	global	_InitApp
   791                           
   792 ;; *************** function _InitApp *****************
   793 ;; Defined at:
   794 ;;		line 18 in file "user.c"
   795 ;; Parameters:    Size  Location     Type
   796 ;;		None
   797 ;; Auto vars:     Size  Location     Type
   798 ;;		None
   799 ;; Return value:  Size  Location     Type
   800 ;;                  1    wreg      void 
   801 ;; Registers used:
   802 ;;		None
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMMON   BANK0
   808 ;;      Params:         0       0
   809 ;;      Locals:         0       0
   810 ;;      Temps:          0       0
   811 ;;      Totals:         0       0
   812 ;;Total ram usage:        0 bytes
   813 ;; Hardware stack levels used:    1
   814 ;; Hardware stack levels required when called:    3
   815 ;; This function calls:
   816 ;;		Nothing
   817 ;; This function is called by:
   818 ;;		_main
   819 ;; This function uses a non-reentrant model
   820 ;;
   821                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   822                           	file	"user.c"
   823                           	line	18
   824                           global __ptext1
   825                           __ptext1:	;psect for function _InitApp
   826  0091                     psect	text1
   827                           	file	"user.c"
   828                           	line	18
   829                           	global	__size_of_InitApp
   830                           	__size_of_InitApp	equ	__end_of_InitApp-_InitApp
   831  000A                     	
   832                           _InitApp:	
   833  0091                     ;incstack = 0
   834                           	opt	stack 4
   835                           ; Regs used in _InitApp: []
   836                           	line	21
   837                           	
   838                           l749:	
   839  0091                     ;user.c: 21:     TRISAbits.TRISA1 = 0;;user.c: 21:     if (Lamps & 0x10)
   840                           	bsf	status, 5	;RP0=1, select bank1
   841  0091  1683               	bcf	(133)^080h,1	;volatile
   842  0092  1085               	line	22
   843                           ;user.c: 22:     TRISAbits.TRISA2 = 0;;user.c: 22:         RC2 = 1;
   844                           	bcf	(133)^080h,2	;volatile
   845  0093  1105               	line	24
   846                           ;user.c: 24:     TRISCbits.TRISC0 = 0;;user.c: 24:         RC2 = 0;
   847                           	bcf	(135)^080h,0	;volatile
   848  0094  1007               	line	25
   849                           ;user.c: 25:     TRISCbits.TRISC1 = 0;;user.c: 25: 
   850                           	bcf	(135)^080h,1	;volatile
   851  0095  1087               	line	26
   852                           ;user.c: 26:     TRISCbits.TRISC2 = 0;;user.c: 26:     if (Lamps & 0x20)
   853                           	bcf	(135)^080h,2	;volatile
   854  0096  1107               	line	27
   855                           ;user.c: 27:     TRISCbits.TRISC3 = 0;;user.c: 27:         RC1 = 1;
   856                           	bcf	(135)^080h,3	;volatile
   857  0097  1187               	line	28
   858                           ;user.c: 28:     TRISCbits.TRISC4 = 0;;user.c: 28:     else
   859                           	bcf	(135)^080h,4	;volatile
   860  0098  1207               	line	29
   861                           ;user.c: 29:     TRISCbits.TRISC5 = 0;;user.c: 29:         RC1 = 0;
   862                           	bcf	(135)^080h,5	;volatile
   863  0099  1287               	line	38
   864                           	
   865                           l58:	
   866  009A                     	return
   867  009A  0008               	opt stack 0
   868                           GLOBAL	__end_of_InitApp
   869                           	__end_of_InitApp:
   870  009B                     	signat	_InitApp,89
   871                           	global	_ConfigureOscillator
   872                           
   873 ;; *************** function _ConfigureOscillator *****************
   874 ;; Defined at:
   875 ;;		line 16 in file "system.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;		None
   878 ;; Auto vars:     Size  Location     Type
   879 ;;		None
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, status,2, status,0
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMMON   BANK0
   889 ;;      Params:         0       0
   890 ;;      Locals:         0       0
   891 ;;      Temps:          0       0
   892 ;;      Totals:         0       0
   893 ;;Total ram usage:        0 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; Hardware stack levels required when called:    3
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_main
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
   903                           	file	"system.c"
   904                           	line	16
   905                           global __ptext2
   906                           __ptext2:	;psect for function _ConfigureOscillator
   907  009B                     psect	text2
   908                           	file	"system.c"
   909                           	line	16
   910                           	global	__size_of_ConfigureOscillator
   911                           	__size_of_ConfigureOscillator	equ	__end_of_ConfigureOscillator-_ConfigureOscillator
   912  000A                     	
   913                           _ConfigureOscillator:	
   914  009B                     ;incstack = 0
   915                           	opt	stack 4
   916                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
   917                           	line	18
   918                           	
   919                           l741:	
   920  009B                     ;system.c: 18:     OPTION_REGbits.T0CS = 0;
   921                           	bsf	status, 5	;RP0=1, select bank1
   922  009B  1683               	bcf	(129)^080h,5	;volatile
   923  009C  1281               	line	19
   924                           ;system.c: 19:     OPTION_REGbits.PSA = 0;
   925                           	bcf	(129)^080h,3	;volatile
   926  009D  1181               	line	20
   927                           	
   928                           l743:	
   929  009E                     ;system.c: 20:     OPTION_REGbits.PS = 7;
   930                           	movlw	(07h & ((1<<3)-1))<<0
   931  009E  3007               	iorwf	(129)^080h,f	;volatile
   932  009F  0481               	line	21
   933                           	
   934                           l745:	
   935  00A0                     ;system.c: 21:     TMR0 = 195;
   936                           	movlw	low(0C3h)
   937  00A0  30C3               	bcf	status, 5	;RP0=0, select bank0
   938  00A1  1283               	movwf	(1)	;volatile
   939  00A2  0081               	line	22
   940                           	
   941                           l747:	
   942  00A3                     ;system.c: 22:     INTCONbits.T0IE = 1;
   943                           	bsf	(11),5	;volatile
   944  00A3  168B               	line	23
   945                           	
   946                           l35:	
   947  00A4                     	return
   948  00A4  0008               	opt stack 0
   949                           GLOBAL	__end_of_ConfigureOscillator
   950                           	__end_of_ConfigureOscillator:
   951  00A5                     	signat	_ConfigureOscillator,89
   952                           	global	_isr
   953                           
   954 ;; *************** function _isr *****************
   955 ;; Defined at:
   956 ;;		line 12 in file "interrupts.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;		None
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMMON   BANK0
   970 ;;      Params:         0       0
   971 ;;      Locals:         0       0
   972 ;;      Temps:          0       4
   973 ;;      Totals:         0       4
   974 ;;Total ram usage:        4 bytes
   975 ;; Hardware stack levels used:    1
   976 ;; Hardware stack levels required when called:    2
   977 ;; This function calls:
   978 ;;		_SequenceUpdate
   979 ;; This function is called by:
   980 ;;		Interrupt level 1
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
   984                           	file	"interrupts.c"
   985                           	line	12
   986                           global __ptext3
   987                           __ptext3:	;psect for function _isr
   988  0074                     psect	text3
   989                           	file	"interrupts.c"
   990                           	line	12
   991                           	global	__size_of_isr
   992                           	__size_of_isr	equ	__end_of_isr-_isr
   993  0013                     	
   994                           _isr:	
   995  0074                     ;incstack = 0
   996                           	opt	stack 4
   997                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   998                           psect	intentry,class=CODE,delta=2
   999                           global __pintentry
  1000                           __pintentry:
  1001  0004                     global interrupt_function
  1002                           interrupt_function:
  1003  0004                     	global saved_w
  1004                           	saved_w	set	btemp+0
  1005  005E                     	movwf	saved_w
  1006  0004  00DE               	swapf	status,w
  1007  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  1008  0006  1283               	movwf	(??_isr+0)
  1009  0007  00A2               	movf	fsr0,w
  1010  0008  0804               	movwf	(??_isr+1)
  1011  0009  00A3               	movf	pclath,w
  1012  000A  080A               	movwf	(??_isr+2)
  1013  000B  00A4               	movf	btemp+1,w
  1014  000C  085F               	movwf	(??_isr+3)
  1015  000D  00A5               	ljmp	_isr
  1016  000E  2874               psect	text3
  1017                           	line	14
  1018                           	
  1019                           i1l751:	
  1020  0074                     ;interrupts.c: 14:     if (INTCONbits.T0IF==1)
  1021                           	btfss	(11),2	;volatile
  1022  0074  1D0B               	goto	u22_21
  1023  0075  2877               	goto	u22_20
  1024  0076  2878               u22_21:
  1025  0077                     	goto	i1l10
  1026  0077  287B               u22_20:
  1027  0078                     	line	16
  1028                           	
  1029                           i1l753:	
  1030  0078                     ;interrupts.c: 15:     {;interrupts.c: 16:         SequenceUpdate();
  1031                           	fcall	_SequenceUpdate
  1032  0078  2055               	line	17
  1033                           	
  1034                           i1l755:	
  1035  0079                     ;interrupts.c: 17:         INTCONbits.T0IF=0;
  1036                           	bcf	(11),2	;volatile
  1037  0079  110B               	goto	i1l10
  1038  007A  287B               	line	18
  1039                           ;interrupts.c: 18:     }
  1040                           	
  1041                           i1l9:	
  1042  007B                     	line	19
  1043                           	
  1044                           i1l10:	
  1045  007B                     	bcf	status, 5	;RP0=0, select bank0
  1046  007B  1283               	movf	(??_isr+3),w
  1047  007C  0825               	movwf	btemp+1
  1048  007D  00DF               	movf	(??_isr+2),w
  1049  007E  0824               	movwf	pclath
  1050  007F  008A               	movf	(??_isr+1),w
  1051  0080  0823               	movwf	fsr0
  1052  0081  0084               	swapf	(??_isr+0)^00h,w
  1053  0082  0E22               	movwf	status
  1054  0083  0083               	swapf	saved_w,f
  1055  0084  0EDE               	swapf	saved_w,w
  1056  0085  0E5E               	retfie
  1057  0086  0009               	opt stack 0
  1058                           GLOBAL	__end_of_isr
  1059                           	__end_of_isr:
  1060  0087                     	signat	_isr,89
  1061                           	global	_SequenceUpdate
  1062                           
  1063 ;; *************** function _SequenceUpdate *****************
  1064 ;; Defined at:
  1065 ;;		line 85 in file "user.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMMON   BANK0
  1079 ;;      Params:         0       0
  1080 ;;      Locals:         0       0
  1081 ;;      Temps:          0       1
  1082 ;;      Totals:         0       1
  1083 ;;Total ram usage:        1 bytes
  1084 ;; Hardware stack levels used:    1
  1085 ;; Hardware stack levels required when called:    1
  1086 ;; This function calls:
  1087 ;;		_SetLamps
  1088 ;; This function is called by:
  1089 ;;		_isr
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1093                           	file	"user.c"
  1094                           	line	85
  1095                           global __ptext4
  1096                           __ptext4:	;psect for function _SequenceUpdate
  1097  0055                     psect	text4
  1098                           	file	"user.c"
  1099                           	line	85
  1100                           	global	__size_of_SequenceUpdate
  1101                           	__size_of_SequenceUpdate	equ	__end_of_SequenceUpdate-_SequenceUpdate
  1102  001F                     	
  1103                           _SequenceUpdate:	
  1104  0055                     ;incstack = 0
  1105                           	opt	stack 4
  1106                           ; Regs used in _SequenceUpdate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1107                           	line	91
  1108                           	
  1109                           i1l731:	
  1110  0055                     	movlw	low(01h)
  1111  0055  3001               	bcf	status, 5	;RP0=0, select bank0
  1112  0056  1283               	movwf	(??_SequenceUpdate+0)+0
  1113  0057  00A1               	movf	(??_SequenceUpdate+0)+0,w
  1114  0058  0821               	addwf	(SequenceUpdate@TimeCount),f
  1115  0059  07A7               		movlw	9
  1116  005A  3009               	xorwf	(((SequenceUpdate@TimeCount))),w
  1117  005B  0627               	btfss	status,2
  1118  005C  1D03               	goto	u20_21
  1119  005D  285F               	goto	u20_20
  1120  005E  2860               u20_21:
  1121  005F                     	goto	i1l88
  1122  005F  2873               u20_20:
  1123  0060                     	line	93
  1124                           	
  1125                           i1l733:	
  1126  0060                     	clrf	(SequenceUpdate@TimeCount)
  1127  0060  01A7               	line	95
  1128                           	
  1129                           i1l735:	
  1130  0061                     	movlw	low(01h)
  1131  0061  3001               	movwf	(??_SequenceUpdate+0)+0
  1132  0062  00A1               	movf	(??_SequenceUpdate+0)+0,w
  1133  0063  0821               	addwf	(SequenceUpdate@SequenceIndex),f
  1134  0064  07A6               		movlw	4
  1135  0065  3004               	xorwf	(((SequenceUpdate@SequenceIndex))),w
  1136  0066  0626               	btfss	status,2
  1137  0067  1D03               	goto	u21_21
  1138  0068  286A               	goto	u21_20
  1139  0069  286B               u21_21:
  1140  006A                     	goto	i1l739
  1141  006A  286D               u21_20:
  1142  006B                     	line	96
  1143                           	
  1144                           i1l737:	
  1145  006B                     	clrf	(SequenceUpdate@SequenceIndex)
  1146  006B  01A6               	goto	i1l739
  1147  006C  286D               	
  1148                           i1l87:	
  1149  006D                     	line	98
  1150                           	
  1151                           i1l739:	
  1152  006D                     	movf	(SequenceUpdate@SequenceIndex),w
  1153  006D  0826               	addlw	low((((SequenceUpdate@Sequence)-__stringbase)|8000h))
  1154  006E  3E01               	movwf	fsr0
  1155  006F  0084               	fcall	stringdir
  1156  0070  2087               	fcall	_SetLamps
  1157  0071  2019               	goto	i1l88
  1158  0072  2873               	line	99
  1159                           	
  1160                           i1l86:	
  1161  0073                     	line	101
  1162                           	
  1163                           i1l88:	
  1164  0073                     	return
  1165  0073  0008               	opt stack 0
  1166                           GLOBAL	__end_of_SequenceUpdate
  1167                           	__end_of_SequenceUpdate:
  1168  0074                     	signat	_SequenceUpdate,89
  1169                           	global	_SetLamps
  1170                           
  1171 ;; *************** function _SetLamps *****************
  1172 ;; Defined at:
  1173 ;;		line 41 in file "user.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;  Lamps           1    wreg     unsigned char 
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;  Lamps           1    0[BANK0 ] unsigned char 
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0
  1187 ;;      Params:         0       0
  1188 ;;      Locals:         0       0
  1189 ;;      Temps:          0       0
  1190 ;;      Totals:         0       0
  1191 ;;Total ram usage:        0 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    3
  1194 ;; This function calls:
  1195 ;;		Nothing
  1196 ;; This function is called by:
  1197 ;;		_main
  1198 ;;		_SequenceUpdate
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1202                           	line	41
  1203                           global __ptext5
  1204                           __ptext5:	;psect for function _SetLamps
  1205  0019                     psect	text5
  1206                           	file	"user.c"
  1207                           	line	41
  1208                           	global	__size_of_SetLamps
  1209                           	__size_of_SetLamps	equ	__end_of_SetLamps-_SetLamps
  1210  003C                     	
  1211                           _SetLamps:	
  1212  0019                     ;incstack = 0
  1213                           	opt	stack 1
  1214                           ; Regs used in _SetLamps: [wreg]
  1215                           ;SetLamps@Lamps stored from wreg
  1216                           	bcf	status, 5	;RP0=0, select bank0
  1217  0019  1283               	movwf	(SetLamps@Lamps)
  1218  001A  00A0               	line	43
  1219                           	
  1220                           i1l713:	
  1221  001B                     ;user.c: 41: };user.c: 42: ;user.c: 43: void SequenceUpdate( void)
  1222                           	btfss	(SetLamps@Lamps),(0)&7
  1223  001B  1C20               	goto	u12_21
  1224  001C  281E               	goto	u12_20
  1225  001D  281F               u12_21:
  1226  001E                     	goto	i1l61
  1227  001E  2821               u12_20:
  1228  001F                     	line	44
  1229                           	
  1230                           i1l715:	
  1231  001F                     ;user.c: 44: {
  1232                           	bsf	(41/8),(41)&7	;volatile
  1233  001F  1485               	goto	i1l62
  1234  0020  2822               	line	45
  1235                           ;user.c: 45:     static uint8_t TimeCount = 0;
  1236                           	
  1237                           i1l61:	
  1238  0021                     	line	46
  1239                           ;user.c: 46:     static uint8_t SequenceIndex = 0;
  1240                           	bcf	(41/8),(41)&7	;volatile
  1241  0021  1085               	
  1242                           i1l62:	
  1243  0022                     	line	48
  1244                           ;user.c: 48: 
  1245                           	btfss	(SetLamps@Lamps),(1)&7
  1246  0022  1CA0               	goto	u13_21
  1247  0023  2825               	goto	u13_20
  1248  0024  2826               u13_21:
  1249  0025                     	goto	i1l63
  1250  0025  2828               u13_20:
  1251  0026                     	line	49
  1252                           	
  1253                           i1l717:	
  1254  0026                     ;user.c: 49:     if (++TimeCount==9)
  1255                           	bsf	(61/8),(61)&7	;volatile
  1256  0026  1687               	goto	i1l64
  1257  0027  2829               	line	50
  1258                           ;user.c: 50:     {
  1259                           	
  1260                           i1l63:	
  1261  0028                     	line	51
  1262                           ;user.c: 51:         TimeCount = 0;
  1263                           	bcf	(61/8),(61)&7	;volatile
  1264  0028  1287               	
  1265                           i1l64:	
  1266  0029                     	line	53
  1267                           ;user.c: 53:         if (++SequenceIndex == sizeof(Sequence))
  1268                           	btfss	(SetLamps@Lamps),(2)&7
  1269  0029  1D20               	goto	u14_21
  1270  002A  282C               	goto	u14_20
  1271  002B  282D               u14_21:
  1272  002C                     	goto	i1l65
  1273  002C  282F               u14_20:
  1274  002D                     	line	54
  1275                           	
  1276                           i1l719:	
  1277  002D                     ;user.c: 54:             SequenceIndex = 0;
  1278                           	bsf	(60/8),(60)&7	;volatile
  1279  002D  1607               	goto	i1l66
  1280  002E  2830               	line	55
  1281                           ;user.c: 55: 
  1282                           	
  1283                           i1l65:	
  1284  002F                     	line	56
  1285                           ;user.c: 56:         SetLamps(Sequence[SequenceIndex]);
  1286                           	bcf	(60/8),(60)&7	;volatile
  1287  002F  1207               	
  1288                           i1l66:	
  1289  0030                     	line	58
  1290                           ;user.c: 58: 
  1291                           	btfss	(SetLamps@Lamps),(3)&7
  1292  0030  1DA0               	goto	u15_21
  1293  0031  2833               	goto	u15_20
  1294  0032  2834               u15_21:
  1295  0033                     	goto	i1l67
  1296  0033  2836               u15_20:
  1297  0034                     	line	59
  1298                           	
  1299                           i1l721:	
  1300  0034                     ;user.c: 59: }
  1301                           	bsf	(59/8),(59)&7	;volatile
  1302  0034  1587               	goto	i1l68
  1303  0035  2837               	line	60
  1304                           	
  1305                           i1l67:	
  1306  0036                     	line	61
  1307                           	bcf	(59/8),(59)&7	;volatile
  1308  0036  1187               	
  1309                           i1l68:	
  1310  0037                     	line	63
  1311                           	btfss	(SetLamps@Lamps),(4)&7
  1312  0037  1E20               	goto	u16_21
  1313  0038  283A               	goto	u16_20
  1314  0039  283B               u16_21:
  1315  003A                     	goto	i1l69
  1316  003A  283D               u16_20:
  1317  003B                     	line	64
  1318                           	
  1319                           i1l723:	
  1320  003B                     	bsf	(58/8),(58)&7	;volatile
  1321  003B  1507               	goto	i1l70
  1322  003C  283E               	line	65
  1323                           	
  1324                           i1l69:	
  1325  003D                     	line	66
  1326                           	bcf	(58/8),(58)&7	;volatile
  1327  003D  1107               	
  1328                           i1l70:	
  1329  003E                     	line	68
  1330                           	btfss	(SetLamps@Lamps),(5)&7
  1331  003E  1EA0               	goto	u17_21
  1332  003F  2841               	goto	u17_20
  1333  0040  2842               u17_21:
  1334  0041                     	goto	i1l71
  1335  0041  2844               u17_20:
  1336  0042                     	line	69
  1337                           	
  1338                           i1l725:	
  1339  0042                     	bsf	(57/8),(57)&7	;volatile
  1340  0042  1487               	goto	i1l72
  1341  0043  2845               	line	70
  1342                           	
  1343                           i1l71:	
  1344  0044                     	line	71
  1345                           	bcf	(57/8),(57)&7	;volatile
  1346  0044  1087               	
  1347                           i1l72:	
  1348  0045                     	line	73
  1349                           	btfss	(SetLamps@Lamps),(6)&7
  1350  0045  1F20               	goto	u18_21
  1351  0046  2848               	goto	u18_20
  1352  0047  2849               u18_21:
  1353  0048                     	goto	i1l73
  1354  0048  284B               u18_20:
  1355  0049                     	line	74
  1356                           	
  1357                           i1l727:	
  1358  0049                     	bsf	(56/8),(56)&7	;volatile
  1359  0049  1407               	goto	i1l74
  1360  004A  284C               	line	75
  1361                           	
  1362                           i1l73:	
  1363  004B                     	line	76
  1364                           	bcf	(56/8),(56)&7	;volatile
  1365  004B  1007               	
  1366                           i1l74:	
  1367  004C                     	line	78
  1368                           	btfss	(SetLamps@Lamps),(7)&7
  1369  004C  1FA0               	goto	u19_21
  1370  004D  284F               	goto	u19_20
  1371  004E  2850               u19_21:
  1372  004F                     	goto	i1l75
  1373  004F  2852               u19_20:
  1374  0050                     	line	79
  1375                           	
  1376                           i1l729:	
  1377  0050                     	bsf	(42/8),(42)&7	;volatile
  1378  0050  1505               	goto	i1l77
  1379  0051  2854               	line	80
  1380                           	
  1381                           i1l75:	
  1382  0052                     	line	81
  1383                           	bcf	(42/8),(42)&7	;volatile
  1384  0052  1105               	goto	i1l77
  1385  0053  2854               	
  1386                           i1l76:	
  1387  0054                     	line	83
  1388                           	
  1389                           i1l77:	
  1390  0054                     	return
  1391  0054  0008               	opt stack 0
  1392                           GLOBAL	__end_of_SetLamps
  1393                           	__end_of_SetLamps:
  1394  0055                     	signat	_SetLamps,4217
  1395                           global	___latbits
  1396                           ___latbits	equ	0
  1397  0000                     	global	btemp
  1398                           	btemp set 05Eh
  1399  005E                     
  1400                           	DABS	1,94,2	;btemp
  1401                           	global	wtemp0
  1402                           	wtemp0 set btemp+0
  1403  005E                     	end


Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      6       8

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_SequenceUpdate

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     176
                _ConfigureOscillator
                            _InitApp
                           _SetLamps
 ---------------------------------------------------------------------------------
 (4) _SetLamps                                             1     1      0     176
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0     176
                                              2 BANK0      4     4      0
                     _SequenceUpdate
 ---------------------------------------------------------------------------------
 (3) _SequenceUpdate                                       1     1      0     176
                                              1 BANK0      1     1      0
                           _SetLamps
 ---------------------------------------------------------------------------------
 (4) _SetLamps                                             1     1      0     176
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _SetLamps

 _isr (ROOT)
   _SequenceUpdate
     _SetLamps

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      6       8       4       12.9%
ABS                  0      0       8       5        0.0%
DATA                 0      0       8       6        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Oct 15 14:29:40 2018

                             pc 0002                     __CFG_CP$OFF 0000                              l23 00AA  
                            l24 00AA                              l25 00AB                              l26 00AB  
                            l35 00A4                              l58 009A                              fsr 0004  
                 SetLamps@Lamps 0020                             l741 009B                             l743 009E  
                           l745 00A0                             l761 00A7                             l747 00A3  
                           l763 00A9                             l749 0091                             l757 00A5  
                           l759 00A6                             _RA1 0029                             _RA2 002A  
                           _RC0 0038                             _RC1 0039                             _RC2 003A  
                           _RC3 003B                             _RC4 003C                             _RC5 003D  
                  __CFG_CPD$OFF 0000                             i1l9 007B                             _isr 0074  
                           fsr0 0004                            ?_isr 0020                            i1l10 007B  
                          i1l61 0021                            i1l70 003E                            i1l62 0022  
                          i1l71 0044                            i1l63 0028                            i1l72 0045  
                          i1l64 0029                            i1l73 004B                            i1l65 002F  
                          i1l74 004C                            i1l66 0030                            i1l75 0052  
                          i1l67 0036                            i1l76 0054                            i1l68 0037  
                          i1l77 0054                            i1l69 003D                            i1l86 0073  
                          i1l87 006D                            i1l88 0073                            _TMR0 0001  
                          _main 00A5                            btemp 005E  __end_ofSequenceUpdate@Sequence 0091  
                 __CFG_BOREN$ON 0000                            start 000F                 __end_of_InitApp 009B  
                         ??_isr 0022                           ?_main 0020                   __CFG_WDTE$OFF 0000  
                         i1l721 0034                           i1l713 001B                           i1l723 003B  
                         i1l715 001F                           i1l731 0055                           i1l725 0042  
                         i1l717 0026                           i1l733 0060                           i1l727 0049  
                         i1l719 002D                           i1l735 0061                           i1l751 0074  
                         i1l729 0050                           i1l737 006B                           i1l753 0078  
                         i1l739 006D                           i1l755 0079                           u12_20 001F  
                         u20_20 0060                           u12_21 001E                           u20_21 005F  
                         u13_20 0026                           u21_20 006B                           u13_21 0025  
                         u21_21 006A                           u14_20 002D                           u22_20 0078  
                         u14_21 002C                           u22_21 0077                           u15_20 0034  
                         u15_21 0033                           u16_20 003B                           u16_21 003A  
                         u17_20 0042                           u17_21 0041                           u18_20 0049  
                         u18_21 0048                           u19_20 0050                           u19_21 004F  
           _ConfigureOscillator 009B                           pclath 000A                           status 0003  
                         wtemp0 005E            ?_ConfigureOscillator 0020                  __CFG_MCLRE$OFF 0000  
               __initialization 0014                    __end_of_main 00AC                          ??_main 0000  
              __end_of_SetLamps 0055         __size_of_SequenceUpdate 001F                       ??_InitApp 0000  
         ??_ConfigureOscillator 0000                  __CFG_PWRTE$OFF 0000                          saved_w 005E  
       __end_of__initialization 0017                  __pcstackCOMMON 0000                  _OPTION_REGbits 0081  
                    __pbssBANK0 0026                       ?_SetLamps 0020                      __pmaintext 00A5  
                    __pintentry 0004                  _SequenceUpdate 0055                      __stringtab 0087  
                       _InitApp 0091                      ??_SetLamps 0000          __end_of_SequenceUpdate 0074  
                       __ptext1 0091                         __ptext2 009B                         __ptext3 0074  
                       __ptext4 0055                         __ptext5 0019                    __size_of_isr 0013  
          end_of_initialization 0017         SequenceUpdate@TimeCount 0027                 ?_SequenceUpdate 0020  
                     _TRISAbits 0085                       _TRISCbits 0087     __end_of_ConfigureOscillator 00A5  
           start_initialization 0014                     __end_of_isr 0087               __size_of_SetLamps 003C  
                     ___latbits 0000                   __pcstackBANK0 0020     SequenceUpdate@SequenceIndex 0026  
                      ?_InitApp 0020                       __pstrings 0087               interrupt_function 0004  
              ??_SequenceUpdate 0021          SequenceUpdate@Sequence 008D                     __stringbase 008C  
                      _SetLamps 0019                __size_of_InitApp 000A              __end_of__stringtab 008D  
                 __size_of_main 0007    __size_of_ConfigureOscillator 000A                      _INTCONbits 000B  
                      intlevel1 0000                       stringcode 0087                        stringdir 0087  
                      stringtab 0087               __CFG_FOSC$INTRCIO 0000  
