

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Oct 27 20:35:35 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F630 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   100                           PORTC equ 07h ;# 
   101  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   116                           CMCON equ 019h ;# 
   117  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   118                           OPTION_REG equ 081h ;# 
   119  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   120                           TRISA equ 085h ;# 
   121  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   122                           TRISC equ 087h ;# 
   123  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   124                           PIE1 equ 08Ch ;# 
   125  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   126                           PCON equ 08Eh ;# 
   127  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   128                           OSCCAL equ 090h ;# 
   129  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   130                           WPUA equ 095h ;# 
   131  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   132                           WPU equ 095h ;# 
   133  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   134                           IOCA equ 096h ;# 
   135  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   136                           IOC equ 096h ;# 
   137  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   138                           VRCON equ 099h ;# 
   139  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   140                           EEDAT equ 09Ah ;# 
   141  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   142                           EEDATA equ 09Ah ;# 
   143  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   144                           EEADR equ 09Bh ;# 
   145  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   146                           EECON1 equ 09Ch ;# 
   147  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   148                           EECON2 equ 09Dh ;# 
   149  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   150                           INDF equ 00h ;# 
   151  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   152                           TMR0 equ 01h ;# 
   153  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   154                           PCL equ 02h ;# 
   155  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   156                           STATUS equ 03h ;# 
   157  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   158                           FSR equ 04h ;# 
   159  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   160                           PORTA equ 05h ;# 
   161  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   162                           PORTC equ 07h ;# 
   163  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   164                           PCLATH equ 0Ah ;# 
   165  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   166                           INTCON equ 0Bh ;# 
   167  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   168                           PIR1 equ 0Ch ;# 
   169  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   170                           TMR1 equ 0Eh ;# 
   171  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   172                           TMR1L equ 0Eh ;# 
   173  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   174                           TMR1H equ 0Fh ;# 
   175  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   176                           T1CON equ 010h ;# 
   177  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   178                           CMCON equ 019h ;# 
   179  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   180                           OPTION_REG equ 081h ;# 
   181  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   182                           TRISA equ 085h ;# 
   183  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   184                           TRISC equ 087h ;# 
   185  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   186                           PIE1 equ 08Ch ;# 
   187  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   188                           PCON equ 08Eh ;# 
   189  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   190                           OSCCAL equ 090h ;# 
   191  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   192                           WPUA equ 095h ;# 
   193  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   194                           WPU equ 095h ;# 
   195  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   196                           IOCA equ 096h ;# 
   197  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   198                           IOC equ 096h ;# 
   199  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   200                           VRCON equ 099h ;# 
   201  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   202                           EEDAT equ 09Ah ;# 
   203  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   204                           EEDATA equ 09Ah ;# 
   205  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   206                           EEADR equ 09Bh ;# 
   207  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   208                           EECON1 equ 09Ch ;# 
   209  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   210                           EECON2 equ 09Dh ;# 
   211  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   212                           INDF equ 00h ;# 
   213  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   214                           TMR0 equ 01h ;# 
   215  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   216                           PCL equ 02h ;# 
   217  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   218                           STATUS equ 03h ;# 
   219  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   220                           FSR equ 04h ;# 
   221  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   222                           PORTA equ 05h ;# 
   223  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   224                           PORTC equ 07h ;# 
   225  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   226                           PCLATH equ 0Ah ;# 
   227  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   228                           INTCON equ 0Bh ;# 
   229  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   230                           PIR1 equ 0Ch ;# 
   231  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   232                           TMR1 equ 0Eh ;# 
   233  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   234                           TMR1L equ 0Eh ;# 
   235  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   236                           TMR1H equ 0Fh ;# 
   237  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   238                           T1CON equ 010h ;# 
   239  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   240                           CMCON equ 019h ;# 
   241  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   242                           OPTION_REG equ 081h ;# 
   243  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   244                           TRISA equ 085h ;# 
   245  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   246                           TRISC equ 087h ;# 
   247  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   248                           PIE1 equ 08Ch ;# 
   249  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   250                           PCON equ 08Eh ;# 
   251  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   252                           OSCCAL equ 090h ;# 
   253  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   254                           WPUA equ 095h ;# 
   255  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   256                           WPU equ 095h ;# 
   257  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   258                           IOCA equ 096h ;# 
   259  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   260                           IOC equ 096h ;# 
   261  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   262                           VRCON equ 099h ;# 
   263  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   264                           EEDAT equ 09Ah ;# 
   265  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   266                           EEDATA equ 09Ah ;# 
   267  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   268                           EEADR equ 09Bh ;# 
   269  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   270                           EECON1 equ 09Ch ;# 
   271  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   272                           EECON2 equ 09Dh ;# 
   273  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   274                           INDF equ 00h ;# 
   275  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   276                           TMR0 equ 01h ;# 
   277  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   278                           PCL equ 02h ;# 
   279  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   280                           STATUS equ 03h ;# 
   281  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   282                           FSR equ 04h ;# 
   283  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   284                           PORTA equ 05h ;# 
   285  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   286                           PORTC equ 07h ;# 
   287  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   288                           PCLATH equ 0Ah ;# 
   289  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   290                           INTCON equ 0Bh ;# 
   291  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   292                           PIR1 equ 0Ch ;# 
   293  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   294                           TMR1 equ 0Eh ;# 
   295  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   296                           TMR1L equ 0Eh ;# 
   297  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   298                           TMR1H equ 0Fh ;# 
   299  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   300                           T1CON equ 010h ;# 
   301  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   302                           CMCON equ 019h ;# 
   303  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   304                           OPTION_REG equ 081h ;# 
   305  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   306                           TRISA equ 085h ;# 
   307  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   308                           TRISC equ 087h ;# 
   309  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   310                           PIE1 equ 08Ch ;# 
   311  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   312                           PCON equ 08Eh ;# 
   313  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   314                           OSCCAL equ 090h ;# 
   315  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   316                           WPUA equ 095h ;# 
   317  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   318                           WPU equ 095h ;# 
   319  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   320                           IOCA equ 096h ;# 
   321  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   322                           IOC equ 096h ;# 
   323  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   324                           VRCON equ 099h ;# 
   325  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   326                           EEDAT equ 09Ah ;# 
   327  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   328                           EEDATA equ 09Ah ;# 
   329  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   330                           EEADR equ 09Bh ;# 
   331  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   332                           EECON1 equ 09Ch ;# 
   333  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   334                           EECON2 equ 09Dh ;# 
   335  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   336                           INDF equ 00h ;# 
   337  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   338                           TMR0 equ 01h ;# 
   339  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   340                           PCL equ 02h ;# 
   341  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   342                           STATUS equ 03h ;# 
   343  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   344                           FSR equ 04h ;# 
   345  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   346                           PORTA equ 05h ;# 
   347  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   348                           PORTC equ 07h ;# 
   349  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   350                           PCLATH equ 0Ah ;# 
   351  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   352                           INTCON equ 0Bh ;# 
   353  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   354                           PIR1 equ 0Ch ;# 
   355  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   364                           CMCON equ 019h ;# 
   365  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   366                           OPTION_REG equ 081h ;# 
   367  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   368                           TRISA equ 085h ;# 
   369  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   370                           TRISC equ 087h ;# 
   371  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   372                           PIE1 equ 08Ch ;# 
   373  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   374                           PCON equ 08Eh ;# 
   375  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   376                           OSCCAL equ 090h ;# 
   377  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   378                           WPUA equ 095h ;# 
   379  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   380                           WPU equ 095h ;# 
   381  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   382                           IOCA equ 096h ;# 
   383  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   384                           IOC equ 096h ;# 
   385  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   386                           VRCON equ 099h ;# 
   387  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   388                           EEDAT equ 09Ah ;# 
   389  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   390                           EEDATA equ 09Ah ;# 
   391  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   392                           EEADR equ 09Bh ;# 
   393  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   394                           EECON1 equ 09Ch ;# 
   395  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   396                           EECON2 equ 09Dh ;# 
   397  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   398                           INDF equ 00h ;# 
   399  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   400                           TMR0 equ 01h ;# 
   401  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   402                           PCL equ 02h ;# 
   403  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   404                           STATUS equ 03h ;# 
   405  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   406                           FSR equ 04h ;# 
   407  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   408                           PORTA equ 05h ;# 
   409  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   410                           PORTC equ 07h ;# 
   411  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   412                           PCLATH equ 0Ah ;# 
   413  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   414                           INTCON equ 0Bh ;# 
   415  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   416                           PIR1 equ 0Ch ;# 
   417  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   418                           TMR1 equ 0Eh ;# 
   419  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   420                           TMR1L equ 0Eh ;# 
   421  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   422                           TMR1H equ 0Fh ;# 
   423  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   424                           T1CON equ 010h ;# 
   425  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   426                           CMCON equ 019h ;# 
   427  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   428                           OPTION_REG equ 081h ;# 
   429  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   430                           TRISA equ 085h ;# 
   431  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   432                           TRISC equ 087h ;# 
   433  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   434                           PIE1 equ 08Ch ;# 
   435  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   436                           PCON equ 08Eh ;# 
   437  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   438                           OSCCAL equ 090h ;# 
   439  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   440                           WPUA equ 095h ;# 
   441  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   442                           WPU equ 095h ;# 
   443  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   444                           IOCA equ 096h ;# 
   445  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   446                           IOC equ 096h ;# 
   447  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   448                           VRCON equ 099h ;# 
   449  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   450                           EEDAT equ 09Ah ;# 
   451  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   452                           EEDATA equ 09Ah ;# 
   453  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   454                           EEADR equ 09Bh ;# 
   455  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   456                           EECON1 equ 09Ch ;# 
   457  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   458                           EECON2 equ 09Dh ;# 
   459  009D                     	FNCALL	_main,_ConfigureOscillator
   460                           	FNCALL	_main,_InitApp
   461                           	FNCALL	_main,_SetLamps
   462                           	FNROOT	_main
   463                           	FNCALL	_isr,_SequenceUpdate
   464                           	FNCALL	_SequenceUpdate,_SetLamps
   465                           	FNCALL	intlevel1,_isr
   466                           	global	intlevel1
   467                           	FNROOT	intlevel1
   468                           	global	SequenceUpdate@Sequence
   469                           psect	strings,class=STRING,delta=2,noexec
   470                           global __pstrings
   471                           __pstrings:
   472  00AA                     stringtab:
   473  00AA                     	global    __stringtab
   474                           __stringtab:
   475  00AA                     ;	String table - string pointers are 1 byte each
   476                           stringcode:stringdir:
   477  00AA                     movlw high(stringdir)
      + 00AA                     stringdir:	
   478  00AA  3000               movwf pclath
   479  00AB  008A               movf fsr,w
   480  00AC  0804               incf fsr
   481  00AD  0A84               	addwf pc
   482  00AE  0782               	global __stringbase
   483                           __stringbase:
   484  00AF                     	retlw	0
   485  00AF  3400               psect	strings
   486                           	global    __end_of__stringtab
   487                           __end_of__stringtab:
   488  00B0                     	file	"user.c"
   489                           	line	88
   490                           SequenceUpdate@Sequence:
   491  00B0                     	retlw	088h
   492  00B0  3488               	retlw	044h
   493  00B1  3444               	retlw	022h
   494  00B2  3422               	retlw	011h
   495  00B3  3411               	global __end_ofSequenceUpdate@Sequence
   496                           __end_ofSequenceUpdate@Sequence:
   497  00B4                     	global	SequenceUpdate@Sequence
   498                           	global	SequenceUpdate@SequenceIndex
   499                           	global	SequenceUpdate@TimeCount
   500                           	global	SequenceUpdate@Debug
   501                           	global	_CMCONbits
   502                           _CMCONbits	set	0x19
   503  0019                     	global	_TMR0
   504                           _TMR0	set	0x1
   505  0001                     	global	_INTCONbits
   506                           _INTCONbits	set	0xB
   507  000B                     	global	_RA0
   508                           _RA0	set	0x28
   509  0028                     	global	_RA2
   510                           _RA2	set	0x2A
   511  002A                     	global	_RC0
   512                           _RC0	set	0x38
   513  0038                     	global	_RC1
   514                           _RC1	set	0x39
   515  0039                     	global	_RC2
   516                           _RC2	set	0x3A
   517  003A                     	global	_RC3
   518                           _RC3	set	0x3B
   519  003B                     	global	_RC4
   520                           _RC4	set	0x3C
   521  003C                     	global	_RC5
   522                           _RC5	set	0x3D
   523  003D                     	global	_RA1
   524                           _RA1	set	0x29
   525  0029                     	global	_TRISCbits
   526                           _TRISCbits	set	0x87
   527  0087                     	global	_TRISAbits
   528                           _TRISAbits	set	0x85
   529  0085                     	global	_OPTION_REGbits
   530                           _OPTION_REGbits	set	0x81
   531  0081                     ; #config settings
   532                           global __CFG_FOSC$INTRCIO
   533                           __CFG_FOSC$INTRCIO equ 0x0
   534  0000                     global __CFG_WDTE$OFF
   535                           __CFG_WDTE$OFF equ 0x0
   536  0000                     global __CFG_PWRTE$OFF
   537                           __CFG_PWRTE$OFF equ 0x0
   538  0000                     global __CFG_MCLRE$OFF
   539                           __CFG_MCLRE$OFF equ 0x0
   540  0000                     global __CFG_BOREN$ON
   541                           __CFG_BOREN$ON equ 0x0
   542  0000                     global __CFG_CP$OFF
   543                           __CFG_CP$OFF equ 0x0
   544  0000                     global __CFG_CPD$OFF
   545                           __CFG_CPD$OFF equ 0x0
   546  0000                     	file	"C:\Users\abaker\AppData\Local\Temp\sa90."
   547                           	line	#
   548                           psect cinit,class=CODE,delta=2
   549                           global start_initialization
   550                           start_initialization:
   551  0014                     
   552                           global __initialization
   553                           __initialization:
   554  0014                     psect	bssBANK0,class=BANK0,space=1,noexec
   555                           global __pbssBANK0
   556                           __pbssBANK0:
   557  0026                     SequenceUpdate@SequenceIndex:
   558  0026                            ds      1
   559  0026                     
   560                           SequenceUpdate@TimeCount:
   561  0027                            ds      1
   562  0027                     
   563                           SequenceUpdate@Debug:
   564  0028                            ds      1
   565  0028                     
   566                           	file	"C:\Users\abaker\AppData\Local\Temp\sa90."
   567                           	line	#
   568                           ; Clear objects allocated to BANK0
   569                           psect cinit,class=CODE,delta=2,merge=1
   570                           	bcf	status, 5	;RP0=0, select bank0
   571  0014  1283               	clrf	((__pbssBANK0)+0)&07Fh
   572  0015  01A6               	clrf	((__pbssBANK0)+1)&07Fh
   573  0016  01A7               	clrf	((__pbssBANK0)+2)&07Fh
   574  0017  01A8               psect cinit,class=CODE,delta=2,merge=1
   575                           global end_of_initialization,__end_of__initialization
   576                           
   577                           ;End of C runtime variable initialization code
   578                           
   579                           end_of_initialization:
   580  0018                     __end_of__initialization:
   581  0018                     clrf status
   582  0018  0183               ljmp _main	;jump to C main() function
   583  0019  28BE               psect	cstackCOMMON,class=COMMON,space=1,noexec
   584                           global __pcstackCOMMON
   585                           __pcstackCOMMON:
   586  0000                     ??_ConfigureOscillator:	; 1 bytes @ 0x0
   587  0000                     ??_InitApp:	; 1 bytes @ 0x0
   588  0000                     ??_SetLamps:	; 1 bytes @ 0x0
   589  0000                     ??_main:	; 1 bytes @ 0x0
   590  0000                     psect	cstackBANK0,class=BANK0,space=1,noexec
   591                           global __pcstackBANK0
   592                           __pcstackBANK0:
   593  0020                     ?_SequenceUpdate:	; 1 bytes @ 0x0
   594  0020                     ?_ConfigureOscillator:	; 1 bytes @ 0x0
   595  0020                     ?_InitApp:	; 1 bytes @ 0x0
   596  0020                     ?_SetLamps:	; 1 bytes @ 0x0
   597  0020                     ?_isr:	; 1 bytes @ 0x0
   598  0020                     ?_main:	; 1 bytes @ 0x0
   599  0020                     	global	SetLamps@Lamps
   600                           SetLamps@Lamps:	; 1 bytes @ 0x0
   601  0020                     	ds	1
   602  0020                     ??_SequenceUpdate:	; 1 bytes @ 0x1
   603  0021                     	ds	1
   604  0021                     ??_isr:	; 1 bytes @ 0x2
   605  0022                     	ds	4
   606  0022                     ;!
   607                           ;!Data Sizes:
   608                           ;!    Strings     0
   609                           ;!    Constant    4
   610                           ;!    Data        0
   611                           ;!    BSS         3
   612                           ;!    Persistent  0
   613                           ;!    Stack       0
   614                           ;!
   615                           ;!Auto Spaces:
   616                           ;!    Space          Size  Autos    Used
   617                           ;!    COMMON            0      0       0
   618                           ;!    BANK0            62      6       9
   619                           
   620                           ;!
   621                           ;!Pointer List with Targets:
   622                           ;!
   623                           ;!    None.
   624                           
   625                           
   626                           ;!
   627                           ;!Critical Paths under _main in COMMON
   628                           ;!
   629                           ;!    None.
   630                           ;!
   631                           ;!Critical Paths under _isr in COMMON
   632                           ;!
   633                           ;!    None.
   634                           ;!
   635                           ;!Critical Paths under _main in BANK0
   636                           ;!
   637                           ;!    None.
   638                           ;!
   639                           ;!Critical Paths under _isr in BANK0
   640                           ;!
   641                           ;!    _isr->_SequenceUpdate
   642                           
   643 ;;
   644 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   645 ;;
   646                           
   647                           ;!
   648                           ;!Call Graph Tables:
   649                           ;!
   650                           ;! ---------------------------------------------------------------------------------
   651                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   652                           ;! ---------------------------------------------------------------------------------
   653                           ;! (0) _main                                                 0     0      0     176
   654                           ;!                _ConfigureOscillator
   655                           ;!                            _InitApp
   656                           ;!                           _SetLamps
   657                           ;! ---------------------------------------------------------------------------------
   658                           ;! (4) _SetLamps                                             1     1      0     176
   659                           ;! ---------------------------------------------------------------------------------
   660                           ;! (1) _InitApp                                              0     0      0       0
   661                           ;! ---------------------------------------------------------------------------------
   662                           ;! (1) _ConfigureOscillator                                  0     0      0       0
   663                           ;! ---------------------------------------------------------------------------------
   664                           ;! Estimated maximum stack depth 4
   665                           ;! ---------------------------------------------------------------------------------
   666                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   667                           ;! ---------------------------------------------------------------------------------
   668                           ;! (2) _isr                                                  4     4      0     176
   669                           ;!                                              2 BANK0      4     4      0
   670                           ;!                     _SequenceUpdate
   671                           ;! ---------------------------------------------------------------------------------
   672                           ;! (3) _SequenceUpdate                                       1     1      0     176
   673                           ;!                                              1 BANK0      1     1      0
   674                           ;!                           _SetLamps
   675                           ;! ---------------------------------------------------------------------------------
   676                           ;! (4) _SetLamps                                             1     1      0     176
   677                           ;! ---------------------------------------------------------------------------------
   678                           ;! Estimated maximum stack depth 4
   679                           ;! ---------------------------------------------------------------------------------
   680                           ;!
   681                           ;! Call Graph Graphs:
   682                           ;!
   683                           ;! _main (ROOT)
   684                           ;!   _ConfigureOscillator
   685                           ;!   _InitApp
   686                           ;!   _SetLamps
   687                           ;!
   688                           ;! _isr (ROOT)
   689                           ;!   _SequenceUpdate
   690                           ;!     _SetLamps
   691                           ;!
   692                           
   693                           ;! Address spaces:
   694                           
   695                           ;!Name               Size   Autos  Total    Cost      Usage
   696                           ;!BITCOMMON            0      0       0       0        0.0%
   697                           ;!EEDATA              80      0       0       0        0.0%
   698                           ;!NULL                 0      0       0       0        0.0%
   699                           ;!CODE                 0      0       0       0        0.0%
   700                           ;!BITSFR0              0      0       0       1        0.0%
   701                           ;!SFR0                 0      0       0       1        0.0%
   702                           ;!COMMON               0      0       0       1        0.0%
   703                           ;!BITSFR1              0      0       0       2        0.0%
   704                           ;!SFR1                 0      0       0       2        0.0%
   705                           ;!STACK                0      0       0       2        0.0%
   706                           ;!BITBANK0            3E      0       0       3        0.0%
   707                           ;!BANK0               3E      6       9       4       14.5%
   708                           ;!ABS                  0      0       9       5        0.0%
   709                           ;!DATA                 0      0       9       6        0.0%
   710                           
   711                           	global	_main
   712                           
   713 ;; *************** function _main *****************
   714 ;; Defined at:
   715 ;;		line 23 in file "main.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0, pclath, cstack
   724 ;; Tracked objects:
   725 ;;		On entry : B00/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0
   729 ;;      Params:         0       0
   730 ;;      Locals:         0       0
   731 ;;      Temps:          0       0
   732 ;;      Totals:         0       0
   733 ;;Total ram usage:        0 bytes
   734 ;; Hardware stack levels required when called:    4
   735 ;; This function calls:
   736 ;;		_ConfigureOscillator
   737 ;;		_InitApp
   738 ;;		_SetLamps
   739 ;; This function is called by:
   740 ;;		Startup code after reset
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   744                           	file	"main.c"
   745                           	line	23
   746                           global __pmaintext
   747                           __pmaintext:	;psect for function _main
   748  00BE                     psect	maintext
   749                           	file	"main.c"
   750                           	line	23
   751                           	global	__size_of_main
   752                           	__size_of_main	equ	__end_of_main-_main
   753  0007                     	
   754                           _main:	
   755  00BE                     ;incstack = 0
   756                           	opt	stack 4
   757                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   758                           	line	26
   759                           	
   760                           l809:	
   761  00BE                     ;main.c: 26:     ConfigureOscillator();
   762                           	fcall	_ConfigureOscillator
   763  00BE  20B4               	line	29
   764                           ;main.c: 29:     InitApp();
   765                           	fcall	_InitApp
   766  00BF  209C               	line	31
   767                           ;main.c: 31:     SetLamps( 0x00);
   768                           	movlw	low(0)
   769  00C0  3000               	fcall	_SetLamps
   770  00C1  201A               	line	34
   771                           	
   772                           l811:	
   773  00C2                     ;main.c: 34:     INTCONbits. GIE = 1;
   774                           	bsf	(11),7	;volatile
   775  00C2  178B               	line	36
   776                           ;main.c: 36:     while(1)
   777                           	
   778                           l25:	
   779  00C3                     	line	39
   780                           ;main.c: 37:     {;main.c: 39:     }
   781                           	
   782                           l26:	
   783  00C3                     	goto	l25
   784  00C3  28C3               	
   785                           l27:	
   786  00C4                     	line	41
   787                           	
   788                           l28:	
   789  00C4                     	global	start
   790                           	ljmp	start
   791  00C4  280F               	opt stack 0
   792                           GLOBAL	__end_of_main
   793                           	__end_of_main:
   794  00C5                     	signat	_main,89
   795                           	global	_InitApp
   796                           
   797 ;; *************** function _InitApp *****************
   798 ;; Defined at:
   799 ;;		line 18 in file "user.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMMON   BANK0
   813 ;;      Params:         0       0
   814 ;;      Locals:         0       0
   815 ;;      Temps:          0       0
   816 ;;      Totals:         0       0
   817 ;;Total ram usage:        0 bytes
   818 ;; Hardware stack levels used:    1
   819 ;; Hardware stack levels required when called:    3
   820 ;; This function calls:
   821 ;;		Nothing
   822 ;; This function is called by:
   823 ;;		_main
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   827                           	file	"user.c"
   828                           	line	18
   829                           global __ptext1
   830                           __ptext1:	;psect for function _InitApp
   831  009C                     psect	text1
   832                           	file	"user.c"
   833                           	line	18
   834                           	global	__size_of_InitApp
   835                           	__size_of_InitApp	equ	__end_of_InitApp-_InitApp
   836  000E                     	
   837                           _InitApp:	
   838  009C                     ;incstack = 0
   839                           	opt	stack 4
   840                           ; Regs used in _InitApp: [wreg+status,2+status,0]
   841                           	line	21
   842                           	
   843                           l781:	
   844  009C                     ;user.c: 21:     CMCONbits.CM = 7;;user.c: 21:     if (Lamps & 0x10)
   845                           	movlw	(07h & ((1<<3)-1))<<0
   846  009C  3007               	bcf	status, 5	;RP0=0, select bank0
   847  009D  1283               	iorwf	(25),f	;volatile
   848  009E  0499               	line	24
   849                           	
   850                           l783:	
   851  009F                     ;user.c: 24:     TRISAbits.TRISA0 = 0;;user.c: 24:         RC2 = 0;
   852                           	bsf	status, 5	;RP0=1, select bank1
   853  009F  1683               	bcf	(133)^080h,0	;volatile
   854  00A0  1005               	line	27
   855                           	
   856                           l785:	
   857  00A1                     ;user.c: 27:     TRISAbits.TRISA1 = 0;;user.c: 27:         RC1 = 1;
   858                           	bcf	(133)^080h,1	;volatile
   859  00A1  1085               	line	28
   860                           	
   861                           l787:	
   862  00A2                     ;user.c: 28:     TRISAbits.TRISA2 = 0;;user.c: 28:     else
   863                           	bcf	(133)^080h,2	;volatile
   864  00A2  1105               	line	30
   865                           	
   866                           l789:	
   867  00A3                     ;user.c: 30:     TRISCbits.TRISC0 = 0;;user.c: 30: 
   868                           	bcf	(135)^080h,0	;volatile
   869  00A3  1007               	line	31
   870                           	
   871                           l791:	
   872  00A4                     ;user.c: 31:     TRISCbits.TRISC1 = 0;;user.c: 31:     if (Lamps & 0x40)
   873                           	bcf	(135)^080h,1	;volatile
   874  00A4  1087               	line	32
   875                           	
   876                           l793:	
   877  00A5                     ;user.c: 32:     TRISCbits.TRISC2 = 0;;user.c: 32:         RC0 = 1;
   878                           	bcf	(135)^080h,2	;volatile
   879  00A5  1107               	line	33
   880                           	
   881                           l795:	
   882  00A6                     ;user.c: 33:     TRISCbits.TRISC3 = 0;;user.c: 33:     else
   883                           	bcf	(135)^080h,3	;volatile
   884  00A6  1187               	line	34
   885                           	
   886                           l797:	
   887  00A7                     ;user.c: 34:     TRISCbits.TRISC4 = 0;;user.c: 34:         RC0 = 0;
   888                           	bcf	(135)^080h,4	;volatile
   889  00A7  1207               	line	35
   890                           	
   891                           l799:	
   892  00A8                     ;user.c: 35:     TRISCbits.TRISC5 = 0;;user.c: 35: 
   893                           	bcf	(135)^080h,5	;volatile
   894  00A8  1287               	line	36
   895                           	
   896                           l64:	
   897  00A9                     	return
   898  00A9  0008               	opt stack 0
   899                           GLOBAL	__end_of_InitApp
   900                           	__end_of_InitApp:
   901  00AA                     	signat	_InitApp,89
   902                           	global	_ConfigureOscillator
   903                           
   904 ;; *************** function _ConfigureOscillator *****************
   905 ;; Defined at:
   906 ;;		line 16 in file "system.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0
   920 ;;      Params:         0       0
   921 ;;      Locals:         0       0
   922 ;;      Temps:          0       0
   923 ;;      Totals:         0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    3
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
   934                           	file	"system.c"
   935                           	line	16
   936                           global __ptext2
   937                           __ptext2:	;psect for function _ConfigureOscillator
   938  00B4                     psect	text2
   939                           	file	"system.c"
   940                           	line	16
   941                           	global	__size_of_ConfigureOscillator
   942                           	__size_of_ConfigureOscillator	equ	__end_of_ConfigureOscillator-_ConfigureOscillator
   943  000A                     	
   944                           _ConfigureOscillator:	
   945  00B4                     ;incstack = 0
   946                           	opt	stack 4
   947                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
   948                           	line	18
   949                           	
   950                           l773:	
   951  00B4                     ;system.c: 18:     OPTION_REGbits.T0CS = 0;
   952                           	bsf	status, 5	;RP0=1, select bank1
   953  00B4  1683               	bcf	(129)^080h,5	;volatile
   954  00B5  1281               	line	19
   955                           ;system.c: 19:     OPTION_REGbits.PSA = 0;
   956                           	bcf	(129)^080h,3	;volatile
   957  00B6  1181               	line	20
   958                           	
   959                           l775:	
   960  00B7                     ;system.c: 20:     OPTION_REGbits.PS = 7;
   961                           	movlw	(07h & ((1<<3)-1))<<0
   962  00B7  3007               	iorwf	(129)^080h,f	;volatile
   963  00B8  0481               	line	21
   964                           	
   965                           l777:	
   966  00B9                     ;system.c: 21:     TMR0 = 48;
   967                           	movlw	low(030h)
   968  00B9  3030               	bcf	status, 5	;RP0=0, select bank0
   969  00BA  1283               	movwf	(1)	;volatile
   970  00BB  0081               	line	22
   971                           	
   972                           l779:	
   973  00BC                     ;system.c: 22:     INTCONbits.T0IE = 1;
   974                           	bsf	(11),5	;volatile
   975  00BC  168B               	line	23
   976                           	
   977                           l37:	
   978  00BD                     	return
   979  00BD  0008               	opt stack 0
   980                           GLOBAL	__end_of_ConfigureOscillator
   981                           	__end_of_ConfigureOscillator:
   982  00BE                     	signat	_ConfigureOscillator,89
   983                           	global	_isr
   984                           
   985 ;; *************** function _isr *****************
   986 ;; Defined at:
   987 ;;		line 12 in file "interrupts.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;		None
   990 ;; Auto vars:     Size  Location     Type
   991 ;;		None
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0
  1001 ;;      Params:         0       0
  1002 ;;      Locals:         0       0
  1003 ;;      Temps:          0       4
  1004 ;;      Totals:         0       4
  1005 ;;Total ram usage:        4 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:    2
  1008 ;; This function calls:
  1009 ;;		_SequenceUpdate
  1010 ;; This function is called by:
  1011 ;;		Interrupt level 1
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1015                           	file	"interrupts.c"
  1016                           	line	12
  1017                           global __ptext3
  1018                           __ptext3:	;psect for function _isr
  1019  0087                     psect	text3
  1020                           	file	"interrupts.c"
  1021                           	line	12
  1022                           	global	__size_of_isr
  1023                           	__size_of_isr	equ	__end_of_isr-_isr
  1024  0015                     	
  1025                           _isr:	
  1026  0087                     ;incstack = 0
  1027                           	opt	stack 4
  1028                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1029                           psect	intentry,class=CODE,delta=2
  1030                           global __pintentry
  1031                           __pintentry:
  1032  0004                     global interrupt_function
  1033                           interrupt_function:
  1034  0004                     	global saved_w
  1035                           	saved_w	set	btemp+0
  1036  005E                     	movwf	saved_w
  1037  0004  00DE               	swapf	status,w
  1038  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  1039  0006  1283               	movwf	(??_isr+0)
  1040  0007  00A2               	movf	fsr0,w
  1041  0008  0804               	movwf	(??_isr+1)
  1042  0009  00A3               	movf	pclath,w
  1043  000A  080A               	movwf	(??_isr+2)
  1044  000B  00A4               	movf	btemp+1,w
  1045  000C  085F               	movwf	(??_isr+3)
  1046  000D  00A5               	ljmp	_isr
  1047  000E  2887               psect	text3
  1048                           	line	14
  1049                           	
  1050                           i1l801:	
  1051  0087                     ;interrupts.c: 14:     if (INTCONbits.T0IF==1)
  1052                           	btfss	(11),2	;volatile
  1053  0087  1D0B               	goto	u30_21
  1054  0088  288A               	goto	u30_20
  1055  0089  288B               u30_21:
  1056  008A                     	goto	i1l12
  1057  008A  2890               u30_20:
  1058  008B                     	line	16
  1059                           	
  1060                           i1l803:	
  1061  008B                     ;interrupts.c: 15:     {;interrupts.c: 16:         INTCONbits.T0IF=0;
  1062                           	bcf	(11),2	;volatile
  1063  008B  110B               	line	17
  1064                           	
  1065                           i1l805:	
  1066  008C                     ;interrupts.c: 17:         TMR0 = 48;
  1067                           	movlw	low(030h)
  1068  008C  3030               	movwf	(1)	;volatile
  1069  008D  0081               	line	18
  1070                           	
  1071                           i1l807:	
  1072  008E                     ;interrupts.c: 18:         SequenceUpdate();
  1073                           	fcall	_SequenceUpdate
  1074  008E  2056               	goto	i1l12
  1075  008F  2890               	line	19
  1076                           ;interrupts.c: 19:     }
  1077                           	
  1078                           i1l11:	
  1079  0090                     	line	20
  1080                           	
  1081                           i1l12:	
  1082  0090                     	bcf	status, 5	;RP0=0, select bank0
  1083  0090  1283               	movf	(??_isr+3),w
  1084  0091  0825               	movwf	btemp+1
  1085  0092  00DF               	movf	(??_isr+2),w
  1086  0093  0824               	movwf	pclath
  1087  0094  008A               	movf	(??_isr+1),w
  1088  0095  0823               	movwf	fsr0
  1089  0096  0084               	swapf	(??_isr+0)^00h,w
  1090  0097  0E22               	movwf	status
  1091  0098  0083               	swapf	saved_w,f
  1092  0099  0EDE               	swapf	saved_w,w
  1093  009A  0E5E               	retfie
  1094  009B  0009               	opt stack 0
  1095                           GLOBAL	__end_of_isr
  1096                           	__end_of_isr:
  1097  009C                     	signat	_isr,89
  1098                           	global	_SequenceUpdate
  1099                           
  1100 ;; *************** function _SequenceUpdate *****************
  1101 ;; Defined at:
  1102 ;;		line 83 in file "user.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      void 
  1109 ;; Registers used:
  1110 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0
  1116 ;;      Params:         0       0
  1117 ;;      Locals:         0       0
  1118 ;;      Temps:          0       1
  1119 ;;      Totals:         0       1
  1120 ;;Total ram usage:        1 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    1
  1123 ;; This function calls:
  1124 ;;		_SetLamps
  1125 ;; This function is called by:
  1126 ;;		_isr
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1130                           	file	"user.c"
  1131                           	line	83
  1132                           global __ptext4
  1133                           __ptext4:	;psect for function _SequenceUpdate
  1134  0056                     psect	text4
  1135                           	file	"user.c"
  1136                           	line	83
  1137                           	global	__size_of_SequenceUpdate
  1138                           	__size_of_SequenceUpdate	equ	__end_of_SequenceUpdate-_SequenceUpdate
  1139  0031                     	
  1140                           _SequenceUpdate:	
  1141  0056                     ;incstack = 0
  1142                           	opt	stack 4
  1143                           ; Regs used in _SequenceUpdate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1144                           	line	91
  1145                           	
  1146                           i1l759:	
  1147  0056                     	bcf	status, 5	;RP0=0, select bank0
  1148  0056  1283               	movf	((SequenceUpdate@Debug)),w
  1149  0057  0828               	btfsc	status,2
  1150  0058  1903               	goto	u24_21
  1151  0059  285B               	goto	u24_20
  1152  005A  285D               u24_21:
  1153  005B                     	movlw	1
  1154  005B  3001               	goto	u25_20
  1155  005C  285E               u24_20:
  1156  005D                     	movlw	0
  1157  005D  3000               u25_20:
  1158  005E                     	movwf	(??_SequenceUpdate+0)+0
  1159  005E  00A1               	movf	(??_SequenceUpdate+0)+0,w
  1160  005F  0821               	movwf	(SequenceUpdate@Debug)
  1161  0060  00A8               	line	92
  1162                           	
  1163                           i1l761:	
  1164  0061                     	btfsc	(SequenceUpdate@Debug),0
  1165  0061  1828               	goto	u26_21
  1166  0062  2864               	goto	u26_20
  1167  0063  2867               	
  1168                           u26_21:
  1169  0064                     	bcf	status, 5	;RP0=0, select bank0
  1170  0064  1283               	bsf	(40/8),(40)&7	;volatile
  1171  0065  1405               	goto	u27_24
  1172  0066  2869               u26_20:
  1173  0067                     	bcf	status, 5	;RP0=0, select bank0
  1174  0067  1283               	bcf	(40/8),(40)&7	;volatile
  1175  0068  1005               u27_24:
  1176  0069                     	line	95
  1177                           	movlw	low(01h)
  1178  0069  3001               	movwf	(??_SequenceUpdate+0)+0
  1179  006A  00A1               	movf	(??_SequenceUpdate+0)+0,w
  1180  006B  0821               	addwf	(SequenceUpdate@TimeCount),f
  1181  006C  07A7               	line	96
  1182                           	
  1183                           i1l763:	
  1184  006D                     	movlw	low(07h)
  1185  006D  3007               	subwf	(SequenceUpdate@TimeCount),w
  1186  006E  0227               	skipc
  1187  006F  1C03               	goto	u28_21
  1188  0070  2872               	goto	u28_20
  1189  0071  2873               u28_21:
  1190  0072                     	goto	i1l96
  1191  0072  2886               u28_20:
  1192  0073                     	line	98
  1193                           	
  1194                           i1l765:	
  1195  0073                     	clrf	(SequenceUpdate@TimeCount)
  1196  0073  01A7               	line	100
  1197                           	
  1198                           i1l767:	
  1199  0074                     	movlw	low(01h)
  1200  0074  3001               	movwf	(??_SequenceUpdate+0)+0
  1201  0075  00A1               	movf	(??_SequenceUpdate+0)+0,w
  1202  0076  0821               	addwf	(SequenceUpdate@SequenceIndex),f
  1203  0077  07A6               		movlw	4
  1204  0078  3004               	xorwf	(((SequenceUpdate@SequenceIndex))),w
  1205  0079  0626               	btfss	status,2
  1206  007A  1D03               	goto	u29_21
  1207  007B  287D               	goto	u29_20
  1208  007C  287E               u29_21:
  1209  007D                     	goto	i1l771
  1210  007D  2880               u29_20:
  1211  007E                     	line	101
  1212                           	
  1213                           i1l769:	
  1214  007E                     	clrf	(SequenceUpdate@SequenceIndex)
  1215  007E  01A6               	goto	i1l771
  1216  007F  2880               	
  1217                           i1l95:	
  1218  0080                     	line	103
  1219                           	
  1220                           i1l771:	
  1221  0080                     	movf	(SequenceUpdate@SequenceIndex),w
  1222  0080  0826               	addlw	low((((SequenceUpdate@Sequence)-__stringbase)|8000h))
  1223  0081  3E01               	movwf	fsr0
  1224  0082  0084               	fcall	stringdir
  1225  0083  20AA               	fcall	_SetLamps
  1226  0084  201A               	goto	i1l96
  1227  0085  2886               	line	104
  1228                           	
  1229                           i1l94:	
  1230  0086                     	line	106
  1231                           	
  1232                           i1l96:	
  1233  0086                     	return
  1234  0086  0008               	opt stack 0
  1235                           GLOBAL	__end_of_SequenceUpdate
  1236                           	__end_of_SequenceUpdate:
  1237  0087                     	signat	_SequenceUpdate,89
  1238                           	global	_SetLamps
  1239                           
  1240 ;; *************** function _SetLamps *****************
  1241 ;; Defined at:
  1242 ;;		line 39 in file "user.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  Lamps           1    wreg     unsigned char 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  Lamps           1    0[BANK0 ] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0
  1256 ;;      Params:         0       0
  1257 ;;      Locals:         0       0
  1258 ;;      Temps:          0       0
  1259 ;;      Totals:         0       0
  1260 ;;Total ram usage:        0 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; Hardware stack levels required when called:    3
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_main
  1267 ;;		_SequenceUpdate
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1271                           	line	39
  1272                           global __ptext5
  1273                           __ptext5:	;psect for function _SetLamps
  1274  001A                     psect	text5
  1275                           	file	"user.c"
  1276                           	line	39
  1277                           	global	__size_of_SetLamps
  1278                           	__size_of_SetLamps	equ	__end_of_SetLamps-_SetLamps
  1279  003C                     	
  1280                           _SetLamps:	
  1281  001A                     ;incstack = 0
  1282                           	opt	stack 1
  1283                           ; Regs used in _SetLamps: [wreg]
  1284                           ;SetLamps@Lamps stored from wreg
  1285                           	bcf	status, 5	;RP0=0, select bank0
  1286  001A  1283               	movwf	(SetLamps@Lamps)
  1287  001B  00A0               	line	41
  1288                           	
  1289                           i1l741:	
  1290  001C                     ;user.c: 39:         RA2 = 0;;user.c: 40: ;user.c: 41: }
  1291                           	btfss	(SetLamps@Lamps),(0)&7
  1292  001C  1C20               	goto	u16_21
  1293  001D  281F               	goto	u16_20
  1294  001E  2820               u16_21:
  1295  001F                     	goto	i1l67
  1296  001F  2822               u16_20:
  1297  0020                     	line	42
  1298                           	
  1299                           i1l743:	
  1300  0020                     ;user.c: 42: 
  1301                           	bsf	(41/8),(41)&7	;volatile
  1302  0020  1485               	goto	i1l68
  1303  0021  2823               	line	43
  1304                           ;user.c: 43: void SequenceUpdate( void)
  1305                           	
  1306                           i1l67:	
  1307  0022                     	line	44
  1308                           ;user.c: 44: {
  1309                           	bcf	(41/8),(41)&7	;volatile
  1310  0022  1085               	
  1311                           i1l68:	
  1312  0023                     	line	46
  1313                           ;user.c: 46:     static uint8_t TimeCount = 0;
  1314                           	btfss	(SetLamps@Lamps),(1)&7
  1315  0023  1CA0               	goto	u17_21
  1316  0024  2826               	goto	u17_20
  1317  0025  2827               u17_21:
  1318  0026                     	goto	i1l69
  1319  0026  2829               u17_20:
  1320  0027                     	line	47
  1321                           	
  1322                           i1l745:	
  1323  0027                     ;user.c: 47:     static uint8_t SequenceIndex = 0;
  1324                           	bsf	(61/8),(61)&7	;volatile
  1325  0027  1687               	goto	i1l70
  1326  0028  282A               	line	48
  1327                           ;user.c: 48:     const uint8_t Sequence[4] = {0x88, 0x44, 0x22, 0x11};
  1328                           	
  1329                           i1l69:	
  1330  0029                     	line	49
  1331                           ;user.c: 49: 
  1332                           	bcf	(61/8),(61)&7	;volatile
  1333  0029  1287               	
  1334                           i1l70:	
  1335  002A                     	line	51
  1336                           ;user.c: 51:         Debug = (Debug==0) ? 1 : 0;
  1337                           	btfss	(SetLamps@Lamps),(2)&7
  1338  002A  1D20               	goto	u18_21
  1339  002B  282D               	goto	u18_20
  1340  002C  282E               u18_21:
  1341  002D                     	goto	i1l71
  1342  002D  2830               u18_20:
  1343  002E                     	line	52
  1344                           	
  1345                           i1l747:	
  1346  002E                     ;user.c: 52:         RA0 = Debug;
  1347                           	bsf	(60/8),(60)&7	;volatile
  1348  002E  1607               	goto	i1l72
  1349  002F  2831               	line	53
  1350                           ;user.c: 53: 
  1351                           	
  1352                           i1l71:	
  1353  0030                     	line	54
  1354                           ;user.c: 54: 
  1355                           	bcf	(60/8),(60)&7	;volatile
  1356  0030  1207               	
  1357                           i1l72:	
  1358  0031                     	line	56
  1359                           ;user.c: 56:     if (TimeCount>=7)
  1360                           	btfss	(SetLamps@Lamps),(3)&7
  1361  0031  1DA0               	goto	u19_21
  1362  0032  2834               	goto	u19_20
  1363  0033  2835               u19_21:
  1364  0034                     	goto	i1l73
  1365  0034  2837               u19_20:
  1366  0035                     	line	57
  1367                           	
  1368                           i1l749:	
  1369  0035                     ;user.c: 57:     {
  1370                           	bsf	(59/8),(59)&7	;volatile
  1371  0035  1587               	goto	i1l74
  1372  0036  2838               	line	58
  1373                           ;user.c: 58:         TimeCount = 0;
  1374                           	
  1375                           i1l73:	
  1376  0037                     	line	59
  1377                           ;user.c: 59: 
  1378                           	bcf	(59/8),(59)&7	;volatile
  1379  0037  1187               	
  1380                           i1l74:	
  1381  0038                     	line	61
  1382                           ;user.c: 61:             SequenceIndex = 0;
  1383                           	btfss	(SetLamps@Lamps),(4)&7
  1384  0038  1E20               	goto	u20_21
  1385  0039  283B               	goto	u20_20
  1386  003A  283C               u20_21:
  1387  003B                     	goto	i1l75
  1388  003B  283E               u20_20:
  1389  003C                     	line	62
  1390                           	
  1391                           i1l751:	
  1392  003C                     ;user.c: 62: 
  1393                           	bsf	(58/8),(58)&7	;volatile
  1394  003C  1507               	goto	i1l76
  1395  003D  283F               	line	63
  1396                           ;user.c: 63:         SetLamps(Sequence[SequenceIndex]);
  1397                           	
  1398                           i1l75:	
  1399  003E                     	line	64
  1400                           ;user.c: 64:     }
  1401                           	bcf	(58/8),(58)&7	;volatile
  1402  003E  1107               	
  1403                           i1l76:	
  1404  003F                     	line	66
  1405                           ;user.c: 66: }
  1406                           	btfss	(SetLamps@Lamps),(5)&7
  1407  003F  1EA0               	goto	u21_21
  1408  0040  2842               	goto	u21_20
  1409  0041  2843               u21_21:
  1410  0042                     	goto	i1l77
  1411  0042  2845               u21_20:
  1412  0043                     	line	67
  1413                           	
  1414                           i1l753:	
  1415  0043                     	bsf	(57/8),(57)&7	;volatile
  1416  0043  1487               	goto	i1l78
  1417  0044  2846               	line	68
  1418                           	
  1419                           i1l77:	
  1420  0045                     	line	69
  1421                           	bcf	(57/8),(57)&7	;volatile
  1422  0045  1087               	
  1423                           i1l78:	
  1424  0046                     	line	71
  1425                           	btfss	(SetLamps@Lamps),(6)&7
  1426  0046  1F20               	goto	u22_21
  1427  0047  2849               	goto	u22_20
  1428  0048  284A               u22_21:
  1429  0049                     	goto	i1l79
  1430  0049  284C               u22_20:
  1431  004A                     	line	72
  1432                           	
  1433                           i1l755:	
  1434  004A                     	bsf	(56/8),(56)&7	;volatile
  1435  004A  1407               	goto	i1l80
  1436  004B  284D               	line	73
  1437                           	
  1438                           i1l79:	
  1439  004C                     	line	74
  1440                           	bcf	(56/8),(56)&7	;volatile
  1441  004C  1007               	
  1442                           i1l80:	
  1443  004D                     	line	76
  1444                           	btfss	(SetLamps@Lamps),(7)&7
  1445  004D  1FA0               	goto	u23_21
  1446  004E  2850               	goto	u23_20
  1447  004F  2851               u23_21:
  1448  0050                     	goto	i1l81
  1449  0050  2853               u23_20:
  1450  0051                     	line	77
  1451                           	
  1452                           i1l757:	
  1453  0051                     	bsf	(42/8),(42)&7	;volatile
  1454  0051  1505               	goto	i1l83
  1455  0052  2855               	line	78
  1456                           	
  1457                           i1l81:	
  1458  0053                     	line	79
  1459                           	bcf	(42/8),(42)&7	;volatile
  1460  0053  1105               	goto	i1l83
  1461  0054  2855               	
  1462                           i1l82:	
  1463  0055                     	line	81
  1464                           	
  1465                           i1l83:	
  1466  0055                     	return
  1467  0055  0008               	opt stack 0
  1468                           GLOBAL	__end_of_SetLamps
  1469                           	__end_of_SetLamps:
  1470  0056                     	signat	_SetLamps,4217
  1471                           global	___latbits
  1472                           ___latbits	equ	0
  1473  0000                     	global	btemp
  1474                           	btemp set 05Eh
  1475  005E                     
  1476                           	DABS	1,94,2	;btemp
  1477                           	global	wtemp0
  1478                           	wtemp0 set btemp+0
  1479  005E                     	end


Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      6       9

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_SequenceUpdate

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     176
                _ConfigureOscillator
                            _InitApp
                           _SetLamps
 ---------------------------------------------------------------------------------
 (4) _SetLamps                                             1     1      0     176
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0     176
                                              2 BANK0      4     4      0
                     _SequenceUpdate
 ---------------------------------------------------------------------------------
 (3) _SequenceUpdate                                       1     1      0     176
                                              1 BANK0      1     1      0
                           _SetLamps
 ---------------------------------------------------------------------------------
 (4) _SetLamps                                             1     1      0     176
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _SetLamps

 _isr (ROOT)
   _SequenceUpdate
     _SetLamps

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      6       9       4       14.5%
ABS                  0      0       9       5        0.0%
DATA                 0      0       9       6        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Oct 27 20:35:35 2018

                             pc 0002                     __CFG_CP$OFF 0000                              l25 00C3  
                            l26 00C3                              l27 00C4                              l28 00C4  
                            l37 00BD                              l64 00A9                              fsr 0004  
                 SetLamps@Lamps 0020                             l811 00C2                             l809 00BE  
                           l773 00B4                             l781 009C                             l775 00B7  
                           l791 00A4                             l783 009F                             l777 00B9  
                           l793 00A5                             l785 00A1                             l779 00BC  
                           l795 00A6                             l787 00A2                             l797 00A7  
                           l789 00A3                             l799 00A8                             _RA0 0028  
                           _RA1 0029                             _RA2 002A                             _RC0 0038  
                           _RC1 0039                             _RC2 003A                             _RC3 003B  
                           _RC4 003C                             _RC5 003D                    __CFG_CPD$OFF 0000  
                           _isr 0087                             fsr0 0004                            ?_isr 0020  
                          i1l11 0090                            i1l12 0090                            i1l70 002A  
                          i1l71 0030                            i1l80 004D                            i1l72 0031  
                          i1l81 0053                            i1l73 0037                            i1l82 0055  
                          i1l74 0038                            i1l83 0055                            i1l75 003E  
                          i1l67 0022                            i1l76 003F                            i1l68 0023  
                          i1l77 0045                            i1l69 0029                            i1l78 0046  
                          i1l94 0086                            i1l79 004C                            i1l95 0080  
                          i1l96 0086                            _TMR0 0001                            _main 00BE  
                          btemp 005E  __end_ofSequenceUpdate@Sequence 00B4                   __CFG_BOREN$ON 0000  
                          start 000F                 __end_of_InitApp 00AA                           ??_isr 0022  
                         ?_main 0020                   __CFG_WDTE$OFF 0000                           i1l801 0087  
                         i1l803 008B                           i1l741 001C                           i1l805 008C  
                         i1l751 003C                           i1l743 0020                           i1l807 008E  
                         i1l753 0043                           i1l745 0027                           i1l761 0061  
                         i1l755 004A                           i1l747 002E                           i1l771 0080  
                         i1l763 006D                           i1l757 0051                           i1l749 0035  
                         i1l765 0073                           i1l767 0074                           i1l759 0056  
                         i1l769 007E                           u20_20 003C                           u20_21 003B  
                         u21_20 0043                           u21_21 0042                           u22_20 004A  
                         u30_20 008B                           u22_21 0049                           u30_21 008A  
                         u23_20 0051                           u23_21 0050                           u16_20 0020  
                         u24_20 005D                           u16_21 001F                           u24_21 005B  
                         u17_20 0027                           u25_20 005E                           u17_21 0026  
                         u18_20 002E                           u26_20 0067                           u18_21 002D  
                         u26_21 0064                           u19_20 0035                           u19_21 0034  
                         u27_24 0069                           u28_20 0073                           u28_21 0072  
                         u29_20 007E                           u29_21 007D             _ConfigureOscillator 00B4  
                         pclath 000A                           status 0003                           wtemp0 005E  
          ?_ConfigureOscillator 0020                  __CFG_MCLRE$OFF 0000                 __initialization 0014  
                  __end_of_main 00C5                          ??_main 0000                __end_of_SetLamps 0056  
       __size_of_SequenceUpdate 0031                       ??_InitApp 0000           ??_ConfigureOscillator 0000  
                __CFG_PWRTE$OFF 0000                          saved_w 005E         __end_of__initialization 0018  
                __pcstackCOMMON 0000                  _OPTION_REGbits 0081                      __pbssBANK0 0026  
                     ?_SetLamps 0020                      __pmaintext 00BE                      __pintentry 0004  
                _SequenceUpdate 0056                      __stringtab 00AA                         _InitApp 009C  
                    ??_SetLamps 0000                       _CMCONbits 0019          __end_of_SequenceUpdate 0087  
                       __ptext1 009C                         __ptext2 00B4                         __ptext3 0087  
                       __ptext4 0056                         __ptext5 001A                    __size_of_isr 0015  
          end_of_initialization 0018         SequenceUpdate@TimeCount 0027                 ?_SequenceUpdate 0020  
                     _TRISAbits 0085                       _TRISCbits 0087     __end_of_ConfigureOscillator 00BE  
           start_initialization 0014                     __end_of_isr 009C               __size_of_SetLamps 003C  
                     ___latbits 0000                   __pcstackBANK0 0020     SequenceUpdate@SequenceIndex 0026  
                      ?_InitApp 0020                       __pstrings 00AA               interrupt_function 0004  
              ??_SequenceUpdate 0021          SequenceUpdate@Sequence 00B0                     __stringbase 00AF  
                      _SetLamps 001A                __size_of_InitApp 000E              __end_of__stringtab 00B0  
           SequenceUpdate@Debug 0028                   __size_of_main 0007    __size_of_ConfigureOscillator 000A  
                    _INTCONbits 000B                        intlevel1 0000                       stringcode 00AA  
                      stringdir 00AA                        stringtab 00AA               __CFG_FOSC$INTRCIO 0000  
