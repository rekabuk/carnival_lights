

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Oct 25 12:07:31 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F630 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   100                           PORTC equ 07h ;# 
   101  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   102                           PCLATH equ 0Ah ;# 
   103  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   104                           INTCON equ 0Bh ;# 
   105  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   106                           PIR1 equ 0Ch ;# 
   107  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   108                           TMR1 equ 0Eh ;# 
   109  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   110                           TMR1L equ 0Eh ;# 
   111  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   112                           TMR1H equ 0Fh ;# 
   113  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   114                           T1CON equ 010h ;# 
   115  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   116                           CMCON equ 019h ;# 
   117  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   118                           OPTION_REG equ 081h ;# 
   119  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   120                           TRISA equ 085h ;# 
   121  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   122                           TRISC equ 087h ;# 
   123  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   124                           PIE1 equ 08Ch ;# 
   125  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   126                           PCON equ 08Eh ;# 
   127  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   128                           OSCCAL equ 090h ;# 
   129  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   130                           WPUA equ 095h ;# 
   131  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   132                           WPU equ 095h ;# 
   133  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   134                           IOCA equ 096h ;# 
   135  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   136                           IOC equ 096h ;# 
   137  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   138                           VRCON equ 099h ;# 
   139  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   140                           EEDAT equ 09Ah ;# 
   141  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   142                           EEDATA equ 09Ah ;# 
   143  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   144                           EEADR equ 09Bh ;# 
   145  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   146                           EECON1 equ 09Ch ;# 
   147  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   148                           EECON2 equ 09Dh ;# 
   149  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   150                           INDF equ 00h ;# 
   151  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   152                           TMR0 equ 01h ;# 
   153  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   154                           PCL equ 02h ;# 
   155  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   156                           STATUS equ 03h ;# 
   157  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   158                           FSR equ 04h ;# 
   159  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   160                           PORTA equ 05h ;# 
   161  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   162                           PORTC equ 07h ;# 
   163  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   164                           PCLATH equ 0Ah ;# 
   165  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   166                           INTCON equ 0Bh ;# 
   167  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   168                           PIR1 equ 0Ch ;# 
   169  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   170                           TMR1 equ 0Eh ;# 
   171  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   172                           TMR1L equ 0Eh ;# 
   173  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   174                           TMR1H equ 0Fh ;# 
   175  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   176                           T1CON equ 010h ;# 
   177  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   178                           CMCON equ 019h ;# 
   179  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   180                           OPTION_REG equ 081h ;# 
   181  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   182                           TRISA equ 085h ;# 
   183  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   184                           TRISC equ 087h ;# 
   185  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   186                           PIE1 equ 08Ch ;# 
   187  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   188                           PCON equ 08Eh ;# 
   189  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   190                           OSCCAL equ 090h ;# 
   191  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   192                           WPUA equ 095h ;# 
   193  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   194                           WPU equ 095h ;# 
   195  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   196                           IOCA equ 096h ;# 
   197  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   198                           IOC equ 096h ;# 
   199  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   200                           VRCON equ 099h ;# 
   201  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   202                           EEDAT equ 09Ah ;# 
   203  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   204                           EEDATA equ 09Ah ;# 
   205  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   206                           EEADR equ 09Bh ;# 
   207  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   208                           EECON1 equ 09Ch ;# 
   209  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   210                           EECON2 equ 09Dh ;# 
   211  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   212                           INDF equ 00h ;# 
   213  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   214                           TMR0 equ 01h ;# 
   215  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   216                           PCL equ 02h ;# 
   217  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   218                           STATUS equ 03h ;# 
   219  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   220                           FSR equ 04h ;# 
   221  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   222                           PORTA equ 05h ;# 
   223  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   224                           PORTC equ 07h ;# 
   225  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   226                           PCLATH equ 0Ah ;# 
   227  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   228                           INTCON equ 0Bh ;# 
   229  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   230                           PIR1 equ 0Ch ;# 
   231  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   232                           TMR1 equ 0Eh ;# 
   233  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   234                           TMR1L equ 0Eh ;# 
   235  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   236                           TMR1H equ 0Fh ;# 
   237  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   238                           T1CON equ 010h ;# 
   239  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   240                           CMCON equ 019h ;# 
   241  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   242                           OPTION_REG equ 081h ;# 
   243  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   244                           TRISA equ 085h ;# 
   245  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   246                           TRISC equ 087h ;# 
   247  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   248                           PIE1 equ 08Ch ;# 
   249  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   250                           PCON equ 08Eh ;# 
   251  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   252                           OSCCAL equ 090h ;# 
   253  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   254                           WPUA equ 095h ;# 
   255  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   256                           WPU equ 095h ;# 
   257  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   258                           IOCA equ 096h ;# 
   259  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   260                           IOC equ 096h ;# 
   261  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   262                           VRCON equ 099h ;# 
   263  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   264                           EEDAT equ 09Ah ;# 
   265  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   266                           EEDATA equ 09Ah ;# 
   267  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   268                           EEADR equ 09Bh ;# 
   269  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   270                           EECON1 equ 09Ch ;# 
   271  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   272                           EECON2 equ 09Dh ;# 
   273  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   274                           INDF equ 00h ;# 
   275  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   276                           TMR0 equ 01h ;# 
   277  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   278                           PCL equ 02h ;# 
   279  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   280                           STATUS equ 03h ;# 
   281  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   282                           FSR equ 04h ;# 
   283  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   284                           PORTA equ 05h ;# 
   285  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   286                           PORTC equ 07h ;# 
   287  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   288                           PCLATH equ 0Ah ;# 
   289  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   290                           INTCON equ 0Bh ;# 
   291  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   292                           PIR1 equ 0Ch ;# 
   293  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   294                           TMR1 equ 0Eh ;# 
   295  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   296                           TMR1L equ 0Eh ;# 
   297  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   298                           TMR1H equ 0Fh ;# 
   299  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   300                           T1CON equ 010h ;# 
   301  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   302                           CMCON equ 019h ;# 
   303  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   304                           OPTION_REG equ 081h ;# 
   305  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   306                           TRISA equ 085h ;# 
   307  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   308                           TRISC equ 087h ;# 
   309  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   310                           PIE1 equ 08Ch ;# 
   311  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   312                           PCON equ 08Eh ;# 
   313  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   314                           OSCCAL equ 090h ;# 
   315  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   316                           WPUA equ 095h ;# 
   317  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   318                           WPU equ 095h ;# 
   319  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   320                           IOCA equ 096h ;# 
   321  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   322                           IOC equ 096h ;# 
   323  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   324                           VRCON equ 099h ;# 
   325  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   326                           EEDAT equ 09Ah ;# 
   327  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   328                           EEDATA equ 09Ah ;# 
   329  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   330                           EEADR equ 09Bh ;# 
   331  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   332                           EECON1 equ 09Ch ;# 
   333  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   334                           EECON2 equ 09Dh ;# 
   335  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   336                           INDF equ 00h ;# 
   337  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   338                           TMR0 equ 01h ;# 
   339  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   340                           PCL equ 02h ;# 
   341  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   342                           STATUS equ 03h ;# 
   343  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   344                           FSR equ 04h ;# 
   345  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   346                           PORTA equ 05h ;# 
   347  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   348                           PORTC equ 07h ;# 
   349  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   350                           PCLATH equ 0Ah ;# 
   351  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   352                           INTCON equ 0Bh ;# 
   353  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   354                           PIR1 equ 0Ch ;# 
   355  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   356                           TMR1 equ 0Eh ;# 
   357  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   358                           TMR1L equ 0Eh ;# 
   359  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   360                           TMR1H equ 0Fh ;# 
   361  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   362                           T1CON equ 010h ;# 
   363  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   364                           CMCON equ 019h ;# 
   365  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   366                           OPTION_REG equ 081h ;# 
   367  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   368                           TRISA equ 085h ;# 
   369  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   370                           TRISC equ 087h ;# 
   371  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   372                           PIE1 equ 08Ch ;# 
   373  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   374                           PCON equ 08Eh ;# 
   375  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   376                           OSCCAL equ 090h ;# 
   377  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   378                           WPUA equ 095h ;# 
   379  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   380                           WPU equ 095h ;# 
   381  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   382                           IOCA equ 096h ;# 
   383  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   384                           IOC equ 096h ;# 
   385  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   386                           VRCON equ 099h ;# 
   387  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   388                           EEDAT equ 09Ah ;# 
   389  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   390                           EEDATA equ 09Ah ;# 
   391  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   392                           EEADR equ 09Bh ;# 
   393  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   394                           EECON1 equ 09Ch ;# 
   395  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   396                           EECON2 equ 09Dh ;# 
   397  009D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   398                           INDF equ 00h ;# 
   399  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   400                           TMR0 equ 01h ;# 
   401  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   402                           PCL equ 02h ;# 
   403  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   404                           STATUS equ 03h ;# 
   405  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   406                           FSR equ 04h ;# 
   407  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   408                           PORTA equ 05h ;# 
   409  0005                     # 218 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   410                           PORTC equ 07h ;# 
   411  0007                     # 268 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   412                           PCLATH equ 0Ah ;# 
   413  000A                     # 288 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   414                           INTCON equ 0Bh ;# 
   415  000B                     # 366 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   416                           PIR1 equ 0Ch ;# 
   417  000C                     # 408 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   418                           TMR1 equ 0Eh ;# 
   419  000E                     # 415 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   420                           TMR1L equ 0Eh ;# 
   421  000E                     # 422 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   422                           TMR1H equ 0Fh ;# 
   423  000F                     # 429 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   424                           T1CON equ 010h ;# 
   425  0010                     # 494 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   426                           CMCON equ 019h ;# 
   427  0019                     # 553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   428                           OPTION_REG equ 081h ;# 
   429  0081                     # 630 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   430                           TRISA equ 085h ;# 
   431  0085                     # 680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   432                           TRISC equ 087h ;# 
   433  0087                     # 730 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   434                           PIE1 equ 08Ch ;# 
   435  008C                     # 772 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   436                           PCON equ 08Eh ;# 
   437  008E                     # 806 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   438                           OSCCAL equ 090h ;# 
   439  0090                     # 866 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   440                           WPUA equ 095h ;# 
   441  0095                     # 871 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   442                           WPU equ 095h ;# 
   443  0095                     # 954 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   444                           IOCA equ 096h ;# 
   445  0096                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   446                           IOC equ 096h ;# 
   447  0096                     # 1052 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   448                           VRCON equ 099h ;# 
   449  0099                     # 1112 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   450                           EEDAT equ 09Ah ;# 
   451  009A                     # 1117 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   452                           EEDATA equ 09Ah ;# 
   453  009A                     # 1150 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   454                           EEADR equ 09Bh ;# 
   455  009B                     # 1157 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   456                           EECON1 equ 09Ch ;# 
   457  009C                     # 1195 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f630.h"
   458                           EECON2 equ 09Dh ;# 
   459  009D                     	FNCALL	_main,_ConfigureOscillator
   460                           	FNCALL	_main,_InitApp
   461                           	FNCALL	_main,_SetLamps
   462                           	FNROOT	_main
   463                           	FNCALL	_isr,_SequenceUpdate
   464                           	FNCALL	_SequenceUpdate,_SetLamps
   465                           	FNCALL	intlevel1,_isr
   466                           	global	intlevel1
   467                           	FNROOT	intlevel1
   468                           	global	SequenceUpdate@Sequence
   469                           psect	strings,class=STRING,delta=2,noexec
   470                           global __pstrings
   471                           __pstrings:
   472  0094                     stringtab:
   473  0094                     	global    __stringtab
   474                           __stringtab:
   475  0094                     ;	String table - string pointers are 1 byte each
   476                           stringcode:stringdir:
   477  0094                     movlw high(stringdir)
      + 0094                     stringdir:	
   478  0094  3000               movwf pclath
   479  0095  008A               movf fsr,w
   480  0096  0804               incf fsr
   481  0097  0A84               	addwf pc
   482  0098  0782               	global __stringbase
   483                           __stringbase:
   484  0099                     	retlw	0
   485  0099  3400               psect	strings
   486                           	global    __end_of__stringtab
   487                           __end_of__stringtab:
   488  009A                     	file	"user.c"
   489                           	line	92
   490                           SequenceUpdate@Sequence:
   491  009A                     	retlw	088h
   492  009A  3488               	retlw	044h
   493  009B  3444               	retlw	022h
   494  009C  3422               	retlw	011h
   495  009D  3411               	global __end_ofSequenceUpdate@Sequence
   496                           __end_ofSequenceUpdate@Sequence:
   497  009E                     	global	SequenceUpdate@Sequence
   498                           	global	SequenceUpdate@SequenceIndex
   499                           	global	SequenceUpdate@TimeCount
   500                           	global	_CMCONbits
   501                           _CMCONbits	set	0x19
   502  0019                     	global	_TMR0
   503                           _TMR0	set	0x1
   504  0001                     	global	_INTCONbits
   505                           _INTCONbits	set	0xB
   506  000B                     	global	_RA2
   507                           _RA2	set	0x2A
   508  002A                     	global	_RC0
   509                           _RC0	set	0x38
   510  0038                     	global	_RC1
   511                           _RC1	set	0x39
   512  0039                     	global	_RC2
   513                           _RC2	set	0x3A
   514  003A                     	global	_RC3
   515                           _RC3	set	0x3B
   516  003B                     	global	_RC4
   517                           _RC4	set	0x3C
   518  003C                     	global	_RC5
   519                           _RC5	set	0x3D
   520  003D                     	global	_RA1
   521                           _RA1	set	0x29
   522  0029                     	global	_TRISCbits
   523                           _TRISCbits	set	0x87
   524  0087                     	global	_TRISAbits
   525                           _TRISAbits	set	0x85
   526  0085                     	global	_OPTION_REGbits
   527                           _OPTION_REGbits	set	0x81
   528  0081                     ; #config settings
   529                           global __CFG_FOSC$INTRCIO
   530                           __CFG_FOSC$INTRCIO equ 0x0
   531  0000                     global __CFG_WDTE$OFF
   532                           __CFG_WDTE$OFF equ 0x0
   533  0000                     global __CFG_PWRTE$OFF
   534                           __CFG_PWRTE$OFF equ 0x0
   535  0000                     global __CFG_MCLRE$OFF
   536                           __CFG_MCLRE$OFF equ 0x0
   537  0000                     global __CFG_BOREN$ON
   538                           __CFG_BOREN$ON equ 0x0
   539  0000                     global __CFG_CP$OFF
   540                           __CFG_CP$OFF equ 0x0
   541  0000                     global __CFG_CPD$OFF
   542                           __CFG_CPD$OFF equ 0x0
   543  0000                     	file	"C:\Users\abaker\AppData\Local\Temp\s55o."
   544                           	line	#
   545                           psect cinit,class=CODE,delta=2
   546                           global start_initialization
   547                           start_initialization:
   548  0014                     
   549                           global __initialization
   550                           __initialization:
   551  0014                     psect	bssBANK0,class=BANK0,space=1,noexec
   552                           global __pbssBANK0
   553                           __pbssBANK0:
   554  0026                     SequenceUpdate@SequenceIndex:
   555  0026                            ds      1
   556  0026                     
   557                           SequenceUpdate@TimeCount:
   558  0027                            ds      1
   559  0027                     
   560                           	file	"C:\Users\abaker\AppData\Local\Temp\s55o."
   561                           	line	#
   562                           ; Clear objects allocated to BANK0
   563                           psect cinit,class=CODE,delta=2,merge=1
   564                           	bcf	status, 5	;RP0=0, select bank0
   565  0014  1283               	clrf	((__pbssBANK0)+0)&07Fh
   566  0015  01A6               	clrf	((__pbssBANK0)+1)&07Fh
   567  0016  01A7               psect cinit,class=CODE,delta=2,merge=1
   568                           global end_of_initialization,__end_of__initialization
   569                           
   570                           ;End of C runtime variable initialization code
   571                           
   572                           end_of_initialization:
   573  0017                     __end_of__initialization:
   574  0017                     clrf status
   575  0017  0183               ljmp _main	;jump to C main() function
   576  0018  28A8               psect	cstackCOMMON,class=COMMON,space=1,noexec
   577                           global __pcstackCOMMON
   578                           __pcstackCOMMON:
   579  0000                     ??_ConfigureOscillator:	; 1 bytes @ 0x0
   580  0000                     ??_InitApp:	; 1 bytes @ 0x0
   581  0000                     ??_SetLamps:	; 1 bytes @ 0x0
   582  0000                     ??_main:	; 1 bytes @ 0x0
   583  0000                     psect	cstackBANK0,class=BANK0,space=1,noexec
   584                           global __pcstackBANK0
   585                           __pcstackBANK0:
   586  0020                     ?_SequenceUpdate:	; 1 bytes @ 0x0
   587  0020                     ?_ConfigureOscillator:	; 1 bytes @ 0x0
   588  0020                     ?_InitApp:	; 1 bytes @ 0x0
   589  0020                     ?_SetLamps:	; 1 bytes @ 0x0
   590  0020                     ?_isr:	; 1 bytes @ 0x0
   591  0020                     ?_main:	; 1 bytes @ 0x0
   592  0020                     	global	SetLamps@Lamps
   593                           SetLamps@Lamps:	; 1 bytes @ 0x0
   594  0020                     	ds	1
   595  0020                     ??_SequenceUpdate:	; 1 bytes @ 0x1
   596  0021                     	ds	1
   597  0021                     ??_isr:	; 1 bytes @ 0x2
   598  0022                     	ds	4
   599  0022                     ;!
   600                           ;!Data Sizes:
   601                           ;!    Strings     0
   602                           ;!    Constant    4
   603                           ;!    Data        0
   604                           ;!    BSS         2
   605                           ;!    Persistent  0
   606                           ;!    Stack       0
   607                           ;!
   608                           ;!Auto Spaces:
   609                           ;!    Space          Size  Autos    Used
   610                           ;!    COMMON            0      0       0
   611                           ;!    BANK0            62      6       8
   612                           
   613                           ;!
   614                           ;!Pointer List with Targets:
   615                           ;!
   616                           ;!    None.
   617                           
   618                           
   619                           ;!
   620                           ;!Critical Paths under _main in COMMON
   621                           ;!
   622                           ;!    None.
   623                           ;!
   624                           ;!Critical Paths under _isr in COMMON
   625                           ;!
   626                           ;!    None.
   627                           ;!
   628                           ;!Critical Paths under _main in BANK0
   629                           ;!
   630                           ;!    None.
   631                           ;!
   632                           ;!Critical Paths under _isr in BANK0
   633                           ;!
   634                           ;!    _isr->_SequenceUpdate
   635                           
   636 ;;
   637 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   638 ;;
   639                           
   640                           ;!
   641                           ;!Call Graph Tables:
   642                           ;!
   643                           ;! ---------------------------------------------------------------------------------
   644                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   645                           ;! ---------------------------------------------------------------------------------
   646                           ;! (0) _main                                                 0     0      0     176
   647                           ;!                _ConfigureOscillator
   648                           ;!                            _InitApp
   649                           ;!                           _SetLamps
   650                           ;! ---------------------------------------------------------------------------------
   651                           ;! (4) _SetLamps                                             1     1      0     176
   652                           ;! ---------------------------------------------------------------------------------
   653                           ;! (1) _InitApp                                              0     0      0       0
   654                           ;! ---------------------------------------------------------------------------------
   655                           ;! (1) _ConfigureOscillator                                  0     0      0       0
   656                           ;! ---------------------------------------------------------------------------------
   657                           ;! Estimated maximum stack depth 4
   658                           ;! ---------------------------------------------------------------------------------
   659                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   660                           ;! ---------------------------------------------------------------------------------
   661                           ;! (2) _isr                                                  4     4      0     176
   662                           ;!                                              2 BANK0      4     4      0
   663                           ;!                     _SequenceUpdate
   664                           ;! ---------------------------------------------------------------------------------
   665                           ;! (3) _SequenceUpdate                                       1     1      0     176
   666                           ;!                                              1 BANK0      1     1      0
   667                           ;!                           _SetLamps
   668                           ;! ---------------------------------------------------------------------------------
   669                           ;! (4) _SetLamps                                             1     1      0     176
   670                           ;! ---------------------------------------------------------------------------------
   671                           ;! Estimated maximum stack depth 4
   672                           ;! ---------------------------------------------------------------------------------
   673                           ;!
   674                           ;! Call Graph Graphs:
   675                           ;!
   676                           ;! _main (ROOT)
   677                           ;!   _ConfigureOscillator
   678                           ;!   _InitApp
   679                           ;!   _SetLamps
   680                           ;!
   681                           ;! _isr (ROOT)
   682                           ;!   _SequenceUpdate
   683                           ;!     _SetLamps
   684                           ;!
   685                           
   686                           ;! Address spaces:
   687                           
   688                           ;!Name               Size   Autos  Total    Cost      Usage
   689                           ;!BITCOMMON            0      0       0       0        0.0%
   690                           ;!EEDATA              80      0       0       0        0.0%
   691                           ;!NULL                 0      0       0       0        0.0%
   692                           ;!CODE                 0      0       0       0        0.0%
   693                           ;!BITSFR0              0      0       0       1        0.0%
   694                           ;!SFR0                 0      0       0       1        0.0%
   695                           ;!COMMON               0      0       0       1        0.0%
   696                           ;!BITSFR1              0      0       0       2        0.0%
   697                           ;!SFR1                 0      0       0       2        0.0%
   698                           ;!STACK                0      0       0       2        0.0%
   699                           ;!BITBANK0            3E      0       0       3        0.0%
   700                           ;!BANK0               3E      6       8       4       12.9%
   701                           ;!ABS                  0      0       8       5        0.0%
   702                           ;!DATA                 0      0       8       6        0.0%
   703                           
   704                           	global	_main
   705                           
   706 ;; *************** function _main *****************
   707 ;; Defined at:
   708 ;;		line 23 in file "main.c"
   709 ;; Parameters:    Size  Location     Type
   710 ;;		None
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0, pclath, cstack
   717 ;; Tracked objects:
   718 ;;		On entry : B00/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMMON   BANK0
   722 ;;      Params:         0       0
   723 ;;      Locals:         0       0
   724 ;;      Temps:          0       0
   725 ;;      Totals:         0       0
   726 ;;Total ram usage:        0 bytes
   727 ;; Hardware stack levels required when called:    4
   728 ;; This function calls:
   729 ;;		_ConfigureOscillator
   730 ;;		_InitApp
   731 ;;		_SetLamps
   732 ;; This function is called by:
   733 ;;		Startup code after reset
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   737                           	file	"main.c"
   738                           	line	23
   739                           global __pmaintext
   740                           __pmaintext:	;psect for function _main
   741  00A8                     psect	maintext
   742                           	file	"main.c"
   743                           	line	23
   744                           	global	__size_of_main
   745                           	__size_of_main	equ	__end_of_main-_main
   746  0007                     	
   747                           _main:	
   748  00A8                     ;incstack = 0
   749                           	opt	stack 4
   750                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   751                           	line	26
   752                           	
   753                           l787:	
   754  00A8                     ;main.c: 26:     ConfigureOscillator();
   755                           	fcall	_ConfigureOscillator
   756  00A8  209E               	line	29
   757                           ;main.c: 29:     InitApp();
   758                           	fcall	_InitApp
   759  00A9  2087               	line	31
   760                           ;main.c: 31:     SetLamps( 0x00);
   761                           	movlw	low(0)
   762  00AA  3000               	fcall	_SetLamps
   763  00AB  2019               	line	34
   764                           	
   765                           l789:	
   766  00AC                     ;main.c: 34:     INTCONbits. GIE = 1;
   767                           	bsf	(11),7	;volatile
   768  00AC  178B               	line	36
   769                           ;main.c: 36:     while(1)
   770                           	
   771                           l23:	
   772  00AD                     	line	39
   773                           ;main.c: 37:     {;main.c: 39:     }
   774                           	
   775                           l24:	
   776  00AD                     	goto	l23
   777  00AD  28AD               	
   778                           l25:	
   779  00AE                     	line	41
   780                           	
   781                           l26:	
   782  00AE                     	global	start
   783                           	ljmp	start
   784  00AE  280F               	opt stack 0
   785                           GLOBAL	__end_of_main
   786                           	__end_of_main:
   787  00AF                     	signat	_main,89
   788                           	global	_InitApp
   789                           
   790 ;; *************** function _InitApp *****************
   791 ;; Defined at:
   792 ;;		line 18 in file "user.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMMON   BANK0
   806 ;;      Params:         0       0
   807 ;;      Locals:         0       0
   808 ;;      Temps:          0       0
   809 ;;      Totals:         0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    3
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_main
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   820                           	file	"user.c"
   821                           	line	18
   822                           global __ptext1
   823                           __ptext1:	;psect for function _InitApp
   824  0087                     psect	text1
   825                           	file	"user.c"
   826                           	line	18
   827                           	global	__size_of_InitApp
   828                           	__size_of_InitApp	equ	__end_of_InitApp-_InitApp
   829  000D                     	
   830                           _InitApp:	
   831  0087                     ;incstack = 0
   832                           	opt	stack 4
   833                           ; Regs used in _InitApp: [wreg+status,2+status,0]
   834                           	line	21
   835                           	
   836                           l763:	
   837  0087                     ;user.c: 21:     CMCONbits.CM = 7;;user.c: 21:     if (Lamps & 0x10)
   838                           	movlw	(07h & ((1<<3)-1))<<0
   839  0087  3007               	bcf	status, 5	;RP0=0, select bank0
   840  0088  1283               	iorwf	(25),f	;volatile
   841  0089  0499               	line	24
   842                           	
   843                           l765:	
   844  008A                     ;user.c: 24:     TRISAbits.TRISA1 = 0;;user.c: 24:         RC2 = 0;
   845                           	bsf	status, 5	;RP0=1, select bank1
   846  008A  1683               	bcf	(133)^080h,1	;volatile
   847  008B  1085               	line	25
   848                           	
   849                           l767:	
   850  008C                     ;user.c: 25:     TRISAbits.TRISA2 = 0;;user.c: 25: 
   851                           	bcf	(133)^080h,2	;volatile
   852  008C  1105               	line	27
   853                           	
   854                           l769:	
   855  008D                     ;user.c: 27:     TRISCbits.TRISC0 = 0;;user.c: 27:         RC1 = 1;
   856                           	bcf	(135)^080h,0	;volatile
   857  008D  1007               	line	28
   858                           	
   859                           l771:	
   860  008E                     ;user.c: 28:     TRISCbits.TRISC1 = 0;;user.c: 28:     else
   861                           	bcf	(135)^080h,1	;volatile
   862  008E  1087               	line	29
   863                           	
   864                           l773:	
   865  008F                     ;user.c: 29:     TRISCbits.TRISC2 = 0;;user.c: 29:         RC1 = 0;
   866                           	bcf	(135)^080h,2	;volatile
   867  008F  1107               	line	30
   868                           	
   869                           l775:	
   870  0090                     ;user.c: 30:     TRISCbits.TRISC3 = 0;;user.c: 30: 
   871                           	bcf	(135)^080h,3	;volatile
   872  0090  1187               	line	31
   873                           	
   874                           l777:	
   875  0091                     ;user.c: 31:     TRISCbits.TRISC4 = 0;;user.c: 31:     if (Lamps & 0x40)
   876                           	bcf	(135)^080h,4	;volatile
   877  0091  1207               	line	32
   878                           	
   879                           l779:	
   880  0092                     ;user.c: 32:     TRISCbits.TRISC5 = 0;;user.c: 32:         RC0 = 1;
   881                           	bcf	(135)^080h,5	;volatile
   882  0092  1287               	line	41
   883                           	
   884                           l60:	
   885  0093                     	return
   886  0093  0008               	opt stack 0
   887                           GLOBAL	__end_of_InitApp
   888                           	__end_of_InitApp:
   889  0094                     	signat	_InitApp,89
   890                           	global	_ConfigureOscillator
   891                           
   892 ;; *************** function _ConfigureOscillator *****************
   893 ;; Defined at:
   894 ;;		line 16 in file "system.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, status,2, status,0
   903 ;; Tracked objects:
   904 ;;		On entry : 0/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0
   908 ;;      Params:         0       0
   909 ;;      Locals:         0       0
   910 ;;      Temps:          0       0
   911 ;;      Totals:         0       0
   912 ;;Total ram usage:        0 bytes
   913 ;; Hardware stack levels used:    1
   914 ;; Hardware stack levels required when called:    3
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
   922                           	file	"system.c"
   923                           	line	16
   924                           global __ptext2
   925                           __ptext2:	;psect for function _ConfigureOscillator
   926  009E                     psect	text2
   927                           	file	"system.c"
   928                           	line	16
   929                           	global	__size_of_ConfigureOscillator
   930                           	__size_of_ConfigureOscillator	equ	__end_of_ConfigureOscillator-_ConfigureOscillator
   931  000A                     	
   932                           _ConfigureOscillator:	
   933  009E                     ;incstack = 0
   934                           	opt	stack 4
   935                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
   936                           	line	18
   937                           	
   938                           l755:	
   939  009E                     ;system.c: 18:     OPTION_REGbits.T0CS = 0;
   940                           	bsf	status, 5	;RP0=1, select bank1
   941  009E  1683               	bcf	(129)^080h,5	;volatile
   942  009F  1281               	line	19
   943                           ;system.c: 19:     OPTION_REGbits.PSA = 0;
   944                           	bcf	(129)^080h,3	;volatile
   945  00A0  1181               	line	20
   946                           	
   947                           l757:	
   948  00A1                     ;system.c: 20:     OPTION_REGbits.PS = 7;
   949                           	movlw	(07h & ((1<<3)-1))<<0
   950  00A1  3007               	iorwf	(129)^080h,f	;volatile
   951  00A2  0481               	line	21
   952                           	
   953                           l759:	
   954  00A3                     ;system.c: 21:     TMR0 = 195;
   955                           	movlw	low(0C3h)
   956  00A3  30C3               	bcf	status, 5	;RP0=0, select bank0
   957  00A4  1283               	movwf	(1)	;volatile
   958  00A5  0081               	line	22
   959                           	
   960                           l761:	
   961  00A6                     ;system.c: 22:     INTCONbits.T0IE = 1;
   962                           	bsf	(11),5	;volatile
   963  00A6  168B               	line	23
   964                           	
   965                           l35:	
   966  00A7                     	return
   967  00A7  0008               	opt stack 0
   968                           GLOBAL	__end_of_ConfigureOscillator
   969                           	__end_of_ConfigureOscillator:
   970  00A8                     	signat	_ConfigureOscillator,89
   971                           	global	_isr
   972                           
   973 ;; *************** function _isr *****************
   974 ;; Defined at:
   975 ;;		line 12 in file "interrupts.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0
   989 ;;      Params:         0       0
   990 ;;      Locals:         0       0
   991 ;;      Temps:          0       4
   992 ;;      Totals:         0       4
   993 ;;Total ram usage:        4 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    2
   996 ;; This function calls:
   997 ;;		_SequenceUpdate
   998 ;; This function is called by:
   999 ;;		Interrupt level 1
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1003                           	file	"interrupts.c"
  1004                           	line	12
  1005                           global __ptext3
  1006                           __ptext3:	;psect for function _isr
  1007  0074                     psect	text3
  1008                           	file	"interrupts.c"
  1009                           	line	12
  1010                           	global	__size_of_isr
  1011                           	__size_of_isr	equ	__end_of_isr-_isr
  1012  0013                     	
  1013                           _isr:	
  1014  0074                     ;incstack = 0
  1015                           	opt	stack 4
  1016                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1017                           psect	intentry,class=CODE,delta=2
  1018                           global __pintentry
  1019                           __pintentry:
  1020  0004                     global interrupt_function
  1021                           interrupt_function:
  1022  0004                     	global saved_w
  1023                           	saved_w	set	btemp+0
  1024  005E                     	movwf	saved_w
  1025  0004  00DE               	swapf	status,w
  1026  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  1027  0006  1283               	movwf	(??_isr+0)
  1028  0007  00A2               	movf	fsr0,w
  1029  0008  0804               	movwf	(??_isr+1)
  1030  0009  00A3               	movf	pclath,w
  1031  000A  080A               	movwf	(??_isr+2)
  1032  000B  00A4               	movf	btemp+1,w
  1033  000C  085F               	movwf	(??_isr+3)
  1034  000D  00A5               	ljmp	_isr
  1035  000E  2874               psect	text3
  1036                           	line	14
  1037                           	
  1038                           i1l781:	
  1039  0074                     ;interrupts.c: 14:     if (INTCONbits.T0IF==1)
  1040                           	btfss	(11),2	;volatile
  1041  0074  1D0B               	goto	u22_21
  1042  0075  2877               	goto	u22_20
  1043  0076  2878               u22_21:
  1044  0077                     	goto	i1l10
  1045  0077  287B               u22_20:
  1046  0078                     	line	16
  1047                           	
  1048                           i1l783:	
  1049  0078                     ;interrupts.c: 15:     {;interrupts.c: 16:         SequenceUpdate();
  1050                           	fcall	_SequenceUpdate
  1051  0078  2055               	line	17
  1052                           	
  1053                           i1l785:	
  1054  0079                     ;interrupts.c: 17:         INTCONbits.T0IF=0;
  1055                           	bcf	(11),2	;volatile
  1056  0079  110B               	goto	i1l10
  1057  007A  287B               	line	18
  1058                           ;interrupts.c: 18:     }
  1059                           	
  1060                           i1l9:	
  1061  007B                     	line	19
  1062                           	
  1063                           i1l10:	
  1064  007B                     	bcf	status, 5	;RP0=0, select bank0
  1065  007B  1283               	movf	(??_isr+3),w
  1066  007C  0825               	movwf	btemp+1
  1067  007D  00DF               	movf	(??_isr+2),w
  1068  007E  0824               	movwf	pclath
  1069  007F  008A               	movf	(??_isr+1),w
  1070  0080  0823               	movwf	fsr0
  1071  0081  0084               	swapf	(??_isr+0)^00h,w
  1072  0082  0E22               	movwf	status
  1073  0083  0083               	swapf	saved_w,f
  1074  0084  0EDE               	swapf	saved_w,w
  1075  0085  0E5E               	retfie
  1076  0086  0009               	opt stack 0
  1077                           GLOBAL	__end_of_isr
  1078                           	__end_of_isr:
  1079  0087                     	signat	_isr,89
  1080                           	global	_SequenceUpdate
  1081                           
  1082 ;; *************** function _SequenceUpdate *****************
  1083 ;; Defined at:
  1084 ;;		line 88 in file "user.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMMON   BANK0
  1098 ;;      Params:         0       0
  1099 ;;      Locals:         0       0
  1100 ;;      Temps:          0       1
  1101 ;;      Totals:         0       1
  1102 ;;Total ram usage:        1 bytes
  1103 ;; Hardware stack levels used:    1
  1104 ;; Hardware stack levels required when called:    1
  1105 ;; This function calls:
  1106 ;;		_SetLamps
  1107 ;; This function is called by:
  1108 ;;		_isr
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1112                           	file	"user.c"
  1113                           	line	88
  1114                           global __ptext4
  1115                           __ptext4:	;psect for function _SequenceUpdate
  1116  0055                     psect	text4
  1117                           	file	"user.c"
  1118                           	line	88
  1119                           	global	__size_of_SequenceUpdate
  1120                           	__size_of_SequenceUpdate	equ	__end_of_SequenceUpdate-_SequenceUpdate
  1121  001F                     	
  1122                           _SequenceUpdate:	
  1123  0055                     ;incstack = 0
  1124                           	opt	stack 4
  1125                           ; Regs used in _SequenceUpdate: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1126                           	line	95
  1127                           	
  1128                           i1l745:	
  1129  0055                     	movlw	low(01h)
  1130  0055  3001               	bcf	status, 5	;RP0=0, select bank0
  1131  0056  1283               	movwf	(??_SequenceUpdate+0)+0
  1132  0057  00A1               	movf	(??_SequenceUpdate+0)+0,w
  1133  0058  0821               	addwf	(SequenceUpdate@TimeCount),f
  1134  0059  07A7               		movlw	4
  1135  005A  3004               	xorwf	(((SequenceUpdate@TimeCount))),w
  1136  005B  0627               	btfss	status,2
  1137  005C  1D03               	goto	u20_21
  1138  005D  285F               	goto	u20_20
  1139  005E  2860               u20_21:
  1140  005F                     	goto	i1l90
  1141  005F  2873               u20_20:
  1142  0060                     	line	97
  1143                           	
  1144                           i1l747:	
  1145  0060                     	clrf	(SequenceUpdate@TimeCount)
  1146  0060  01A7               	line	99
  1147                           	
  1148                           i1l749:	
  1149  0061                     	movlw	low(01h)
  1150  0061  3001               	movwf	(??_SequenceUpdate+0)+0
  1151  0062  00A1               	movf	(??_SequenceUpdate+0)+0,w
  1152  0063  0821               	addwf	(SequenceUpdate@SequenceIndex),f
  1153  0064  07A6               		movlw	4
  1154  0065  3004               	xorwf	(((SequenceUpdate@SequenceIndex))),w
  1155  0066  0626               	btfss	status,2
  1156  0067  1D03               	goto	u21_21
  1157  0068  286A               	goto	u21_20
  1158  0069  286B               u21_21:
  1159  006A                     	goto	i1l753
  1160  006A  286D               u21_20:
  1161  006B                     	line	100
  1162                           	
  1163                           i1l751:	
  1164  006B                     	clrf	(SequenceUpdate@SequenceIndex)
  1165  006B  01A6               	goto	i1l753
  1166  006C  286D               	
  1167                           i1l89:	
  1168  006D                     	line	102
  1169                           	
  1170                           i1l753:	
  1171  006D                     	movf	(SequenceUpdate@SequenceIndex),w
  1172  006D  0826               	addlw	low((((SequenceUpdate@Sequence)-__stringbase)|8000h))
  1173  006E  3E01               	movwf	fsr0
  1174  006F  0084               	fcall	stringdir
  1175  0070  2094               	fcall	_SetLamps
  1176  0071  2019               	goto	i1l90
  1177  0072  2873               	line	103
  1178                           	
  1179                           i1l88:	
  1180  0073                     	line	105
  1181                           	
  1182                           i1l90:	
  1183  0073                     	return
  1184  0073  0008               	opt stack 0
  1185                           GLOBAL	__end_of_SequenceUpdate
  1186                           	__end_of_SequenceUpdate:
  1187  0074                     	signat	_SequenceUpdate,89
  1188                           	global	_SetLamps
  1189                           
  1190 ;; *************** function _SetLamps *****************
  1191 ;; Defined at:
  1192 ;;		line 44 in file "user.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;  Lamps           1    wreg     unsigned char 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  Lamps           1    0[BANK0 ] unsigned char 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  1    wreg      void 
  1199 ;; Registers used:
  1200 ;;		wreg
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/0
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMMON   BANK0
  1206 ;;      Params:         0       0
  1207 ;;      Locals:         0       0
  1208 ;;      Temps:          0       0
  1209 ;;      Totals:         0       0
  1210 ;;Total ram usage:        0 bytes
  1211 ;; Hardware stack levels used:    1
  1212 ;; Hardware stack levels required when called:    3
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;;		_SequenceUpdate
  1218 ;; This function uses a non-reentrant model
  1219 ;;
  1220                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1221                           	line	44
  1222                           global __ptext5
  1223                           __ptext5:	;psect for function _SetLamps
  1224  0019                     psect	text5
  1225                           	file	"user.c"
  1226                           	line	44
  1227                           	global	__size_of_SetLamps
  1228                           	__size_of_SetLamps	equ	__end_of_SetLamps-_SetLamps
  1229  003C                     	
  1230                           _SetLamps:	
  1231  0019                     ;incstack = 0
  1232                           	opt	stack 1
  1233                           ; Regs used in _SetLamps: [wreg]
  1234                           ;SetLamps@Lamps stored from wreg
  1235                           	bcf	status, 5	;RP0=0, select bank0
  1236  0019  1283               	movwf	(SetLamps@Lamps)
  1237  001A  00A0               	line	46
  1238                           	
  1239                           i1l727:	
  1240  001B                     ;user.c: 44: {;user.c: 45:     static uint8_t TimeCount = 0;;user.c: 46:     static uint
                                 8_t SequenceIndex = 0;
  1241                           	btfss	(SetLamps@Lamps),(0)&7
  1242  001B  1C20               	goto	u12_21
  1243  001C  281E               	goto	u12_20
  1244  001D  281F               u12_21:
  1245  001E                     	goto	i1l63
  1246  001E  2821               u12_20:
  1247  001F                     	line	47
  1248                           	
  1249                           i1l729:	
  1250  001F                     ;user.c: 47:     const uint8_t Sequence[4] = {0x88, 0x44, 0x22, 0x11};
  1251                           	bsf	(41/8),(41)&7	;volatile
  1252  001F  1485               	goto	i1l64
  1253  0020  2822               	line	48
  1254                           ;user.c: 48: 
  1255                           	
  1256                           i1l63:	
  1257  0021                     	line	49
  1258                           ;user.c: 49: 
  1259                           	bcf	(41/8),(41)&7	;volatile
  1260  0021  1085               	
  1261                           i1l64:	
  1262  0022                     	line	51
  1263                           ;user.c: 51:     {
  1264                           	btfss	(SetLamps@Lamps),(1)&7
  1265  0022  1CA0               	goto	u13_21
  1266  0023  2825               	goto	u13_20
  1267  0024  2826               u13_21:
  1268  0025                     	goto	i1l65
  1269  0025  2828               u13_20:
  1270  0026                     	line	52
  1271                           	
  1272                           i1l731:	
  1273  0026                     ;user.c: 52:         TimeCount = 0;
  1274                           	bsf	(61/8),(61)&7	;volatile
  1275  0026  1687               	goto	i1l66
  1276  0027  2829               	line	53
  1277                           ;user.c: 53: 
  1278                           	
  1279                           i1l65:	
  1280  0028                     	line	54
  1281                           ;user.c: 54:         if (++SequenceIndex == sizeof(Sequence))
  1282                           	bcf	(61/8),(61)&7	;volatile
  1283  0028  1287               	
  1284                           i1l66:	
  1285  0029                     	line	56
  1286                           ;user.c: 56: 
  1287                           	btfss	(SetLamps@Lamps),(2)&7
  1288  0029  1D20               	goto	u14_21
  1289  002A  282C               	goto	u14_20
  1290  002B  282D               u14_21:
  1291  002C                     	goto	i1l67
  1292  002C  282F               u14_20:
  1293  002D                     	line	57
  1294                           	
  1295                           i1l733:	
  1296  002D                     ;user.c: 57:         SetLamps(Sequence[SequenceIndex]);
  1297                           	bsf	(60/8),(60)&7	;volatile
  1298  002D  1607               	goto	i1l68
  1299  002E  2830               	line	58
  1300                           ;user.c: 58:     }
  1301                           	
  1302                           i1l67:	
  1303  002F                     	line	59
  1304                           ;user.c: 59: 
  1305                           	bcf	(60/8),(60)&7	;volatile
  1306  002F  1207               	
  1307                           i1l68:	
  1308  0030                     	line	61
  1309                           	btfss	(SetLamps@Lamps),(3)&7
  1310  0030  1DA0               	goto	u15_21
  1311  0031  2833               	goto	u15_20
  1312  0032  2834               u15_21:
  1313  0033                     	goto	i1l69
  1314  0033  2836               u15_20:
  1315  0034                     	line	62
  1316                           	
  1317                           i1l735:	
  1318  0034                     	bsf	(59/8),(59)&7	;volatile
  1319  0034  1587               	goto	i1l70
  1320  0035  2837               	line	63
  1321                           	
  1322                           i1l69:	
  1323  0036                     	line	64
  1324                           	bcf	(59/8),(59)&7	;volatile
  1325  0036  1187               	
  1326                           i1l70:	
  1327  0037                     	line	66
  1328                           	btfss	(SetLamps@Lamps),(4)&7
  1329  0037  1E20               	goto	u16_21
  1330  0038  283A               	goto	u16_20
  1331  0039  283B               u16_21:
  1332  003A                     	goto	i1l71
  1333  003A  283D               u16_20:
  1334  003B                     	line	67
  1335                           	
  1336                           i1l737:	
  1337  003B                     	bsf	(58/8),(58)&7	;volatile
  1338  003B  1507               	goto	i1l72
  1339  003C  283E               	line	68
  1340                           	
  1341                           i1l71:	
  1342  003D                     	line	69
  1343                           	bcf	(58/8),(58)&7	;volatile
  1344  003D  1107               	
  1345                           i1l72:	
  1346  003E                     	line	71
  1347                           	btfss	(SetLamps@Lamps),(5)&7
  1348  003E  1EA0               	goto	u17_21
  1349  003F  2841               	goto	u17_20
  1350  0040  2842               u17_21:
  1351  0041                     	goto	i1l73
  1352  0041  2844               u17_20:
  1353  0042                     	line	72
  1354                           	
  1355                           i1l739:	
  1356  0042                     	bsf	(57/8),(57)&7	;volatile
  1357  0042  1487               	goto	i1l74
  1358  0043  2845               	line	73
  1359                           	
  1360                           i1l73:	
  1361  0044                     	line	74
  1362                           	bcf	(57/8),(57)&7	;volatile
  1363  0044  1087               	
  1364                           i1l74:	
  1365  0045                     	line	76
  1366                           	btfss	(SetLamps@Lamps),(6)&7
  1367  0045  1F20               	goto	u18_21
  1368  0046  2848               	goto	u18_20
  1369  0047  2849               u18_21:
  1370  0048                     	goto	i1l75
  1371  0048  284B               u18_20:
  1372  0049                     	line	77
  1373                           	
  1374                           i1l741:	
  1375  0049                     	bsf	(56/8),(56)&7	;volatile
  1376  0049  1407               	goto	i1l76
  1377  004A  284C               	line	78
  1378                           	
  1379                           i1l75:	
  1380  004B                     	line	79
  1381                           	bcf	(56/8),(56)&7	;volatile
  1382  004B  1007               	
  1383                           i1l76:	
  1384  004C                     	line	81
  1385                           	btfss	(SetLamps@Lamps),(7)&7
  1386  004C  1FA0               	goto	u19_21
  1387  004D  284F               	goto	u19_20
  1388  004E  2850               u19_21:
  1389  004F                     	goto	i1l77
  1390  004F  2852               u19_20:
  1391  0050                     	line	82
  1392                           	
  1393                           i1l743:	
  1394  0050                     	bsf	(42/8),(42)&7	;volatile
  1395  0050  1505               	goto	i1l79
  1396  0051  2854               	line	83
  1397                           	
  1398                           i1l77:	
  1399  0052                     	line	84
  1400                           	bcf	(42/8),(42)&7	;volatile
  1401  0052  1105               	goto	i1l79
  1402  0053  2854               	
  1403                           i1l78:	
  1404  0054                     	line	86
  1405                           	
  1406                           i1l79:	
  1407  0054                     	return
  1408  0054  0008               	opt stack 0
  1409                           GLOBAL	__end_of_SetLamps
  1410                           	__end_of_SetLamps:
  1411  0055                     	signat	_SetLamps,4217
  1412                           global	___latbits
  1413                           ___latbits	equ	0
  1414  0000                     	global	btemp
  1415                           	btemp set 05Eh
  1416  005E                     
  1417                           	DABS	1,94,2	;btemp
  1418                           	global	wtemp0
  1419                           	wtemp0 set btemp+0
  1420  005E                     	end


Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      6       8

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_SequenceUpdate

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     176
                _ConfigureOscillator
                            _InitApp
                           _SetLamps
 ---------------------------------------------------------------------------------
 (4) _SetLamps                                             1     1      0     176
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  4     4      0     176
                                              2 BANK0      4     4      0
                     _SequenceUpdate
 ---------------------------------------------------------------------------------
 (3) _SequenceUpdate                                       1     1      0     176
                                              1 BANK0      1     1      0
                           _SetLamps
 ---------------------------------------------------------------------------------
 (4) _SetLamps                                             1     1      0     176
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
   _SetLamps

 _isr (ROOT)
   _SequenceUpdate
     _SetLamps

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BITBANK0            3E      0       0       3        0.0%
BANK0               3E      6       8       4       12.9%
ABS                  0      0       8       5        0.0%
DATA                 0      0       8       6        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Oct 25 12:07:31 2018

                             pc 0002                     __CFG_CP$OFF 0000                              l23 00AD  
                            l24 00AD                              l25 00AE                              l26 00AE  
                            l35 00A7                              l60 0093                              fsr 0004  
                 SetLamps@Lamps 0020                             l761 00A6                             l755 009E  
                           l771 008E                             l763 0087                             l757 00A1  
                           l773 008F                             l765 008A                             l759 00A3  
                           l775 0090                             l767 008C                             l777 0091  
                           l769 008D                             l779 0092                             l787 00A8  
                           l789 00AC                             _RA1 0029                             _RA2 002A  
                           _RC0 0038                             _RC1 0039                             _RC2 003A  
                           _RC3 003B                             _RC4 003C                             _RC5 003D  
                  __CFG_CPD$OFF 0000                             i1l9 007B                             _isr 0074  
                           fsr0 0004                            ?_isr 0020                            i1l10 007B  
                          i1l70 0037                            i1l71 003D                            i1l63 0021  
                          i1l72 003E                            i1l64 0022                            i1l73 0044  
                          i1l65 0028                            i1l74 0045                            i1l66 0029  
                          i1l90 0073                            i1l75 004B                            i1l67 002F  
                          i1l76 004C                            i1l68 0030                            i1l77 0052  
                          i1l69 0036                            i1l78 0054                            i1l79 0054  
                          i1l88 0073                            i1l89 006D                            _TMR0 0001  
                          _main 00A8                            btemp 005E  __end_ofSequenceUpdate@Sequence 009E  
                 __CFG_BOREN$ON 0000                            start 000F                 __end_of_InitApp 0094  
                         ??_isr 0022                           ?_main 0020                   __CFG_WDTE$OFF 0000  
                         i1l731 0026                           i1l741 0049                           i1l733 002D  
                         i1l743 0050                           i1l735 0034                           i1l727 001B  
                         i1l751 006B                           i1l737 003B                           i1l729 001F  
                         i1l753 006D                           i1l745 0055                           i1l739 0042  
                         i1l747 0060                           i1l749 0061                           i1l781 0074  
                         i1l783 0078                           i1l785 0079                           u12_20 001F  
                         u20_20 0060                           u12_21 001E                           u20_21 005F  
                         u13_20 0026                           u21_20 006B                           u13_21 0025  
                         u21_21 006A                           u14_20 002D                           u22_20 0078  
                         u14_21 002C                           u22_21 0077                           u15_20 0034  
                         u15_21 0033                           u16_20 003B                           u16_21 003A  
                         u17_20 0042                           u17_21 0041                           u18_20 0049  
                         u18_21 0048                           u19_20 0050                           u19_21 004F  
           _ConfigureOscillator 009E                           pclath 000A                           status 0003  
                         wtemp0 005E            ?_ConfigureOscillator 0020                  __CFG_MCLRE$OFF 0000  
               __initialization 0014                    __end_of_main 00AF                          ??_main 0000  
              __end_of_SetLamps 0055         __size_of_SequenceUpdate 001F                       ??_InitApp 0000  
         ??_ConfigureOscillator 0000                  __CFG_PWRTE$OFF 0000                          saved_w 005E  
       __end_of__initialization 0017                  __pcstackCOMMON 0000                  _OPTION_REGbits 0081  
                    __pbssBANK0 0026                       ?_SetLamps 0020                      __pmaintext 00A8  
                    __pintentry 0004                  _SequenceUpdate 0055                      __stringtab 0094  
                       _InitApp 0087                      ??_SetLamps 0000                       _CMCONbits 0019  
        __end_of_SequenceUpdate 0074                         __ptext1 0087                         __ptext2 009E  
                       __ptext3 0074                         __ptext4 0055                         __ptext5 0019  
                  __size_of_isr 0013            end_of_initialization 0017         SequenceUpdate@TimeCount 0027  
               ?_SequenceUpdate 0020                       _TRISAbits 0085                       _TRISCbits 0087  
   __end_of_ConfigureOscillator 00A8             start_initialization 0014                     __end_of_isr 0087  
             __size_of_SetLamps 003C                       ___latbits 0000                   __pcstackBANK0 0020  
   SequenceUpdate@SequenceIndex 0026                        ?_InitApp 0020                       __pstrings 0094  
             interrupt_function 0004                ??_SequenceUpdate 0021          SequenceUpdate@Sequence 009A  
                   __stringbase 0099                        _SetLamps 0019                __size_of_InitApp 000D  
            __end_of__stringtab 009A                   __size_of_main 0007    __size_of_ConfigureOscillator 000A  
                    _INTCONbits 000B                        intlevel1 0000                       stringcode 0094  
                      stringdir 0094                        stringtab 0094               __CFG_FOSC$INTRCIO 0000  
